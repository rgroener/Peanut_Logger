   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.rodata.str1.1,"aMS",@progbits,1
  11               	.LC0:
  12 0000 2042 7574 		.string	" Button "
  12      746F 6E20 
  12      00
  13               	.LC1:
  14 0009 2020 2074 		.string	"   to   "
  14      6F20 2020 
  14      00
  15               	.LC2:
  16 0012 2020 5A45 		.string	"  ZERO  "
  16      524F 2020 
  16      00
  17               	.LC3:
  18 001b 4966 2066 		.string	"If found"
  18      6F75 6E64 
  18      00
  19               	.LC4:
  20 0024 706C 6561 		.string	"please  "
  20      7365 2020 
  20      00
  21               	.LC5:
  22 002d 636F 6E74 		.string	"contact "
  22      6163 7420 
  22      00
  23               	.LC6:
  24 0036 7267 726F 		.string	"rgroener"
  24      656E 6572 
  24      00
  25               	.LC7:
  26 003f 406D 6169 		.string	"@mailbox"
  26      6C62 6F78 
  26      00
  27               	.LC8:
  28 0048 2E6F 7267 		.string	".org    "
  28      2020 2020 
  28      00
  29               	.LC9:
  30 0051 2564 2E25 		.string	"%d.%d*"
  30      642A 00
  31               	.LC10:
  32 0058 2564 2E25 		.string	"%d.%d%%"
  32      6425 2500 
  33               		.section	.text.startup,"ax",@progbits
  34               	.global	main
  36               	main:
  37               	.LFB12:
  38               		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****  * Altitude logger for rubber powered models
   3:main.c        ****  * 
   4:main.c        ****  * grn Dec/20
   5:main.c        ****  * 
   6:main.c        ****  * avrdude: safemode: Fuses OK (E:F7, H:D9, L:62)
   7:main.c        ****  * */
   8:main.c        **** #define F_CPU 8000000UL// set the CPU clock
   9:main.c        **** #include <util/delay.h>
  10:main.c        **** #include <avr/interrupt.h>
  11:main.c        **** #include <stdlib.h>
  12:main.c        **** #include <avr/io.h>
  13:main.c        **** #include <stdio.h>  
  14:main.c        ****                
  15:main.c        **** #include <avr/pgmspace.h>
  16:main.c        **** #include "fonts.h"
  17:main.c        **** #include "grn_TWI.h"
  18:main.c        **** #include "spi.h"
  19:main.c        **** #include "grn_sht21.h"
  20:main.c        **** #include "ssd1306.h"
  21:main.c        **** 
  22:main.c        **** #define BUTTON	(!(PIND & (1<<PD3))) && (entprell==0) //read button input
  23:main.c        **** #define RELOAD_ENTPRELL 40
  24:main.c        **** #define TOGGLEMAX 4
  25:main.c        **** #define TEMPERATURE 0
  26:main.c        **** #define HUMIDITY 1
  27:main.c        **** 
  28:main.c        **** uint16_t vor_komma(uint32_t value);
  29:main.c        **** uint8_t nach_komma(uint32_t value);
  30:main.c        **** int16_t temp=0;
  31:main.c        **** uint16_t test=0;
  32:main.c        **** int16_t hum=0;
  33:main.c        **** 
  34:main.c        **** //TIMER
  35:main.c        **** ISR (TIMER1_COMPA_vect);
  36:main.c        **** uint16_t vor_komma(uint32_t value);
  37:main.c        **** uint8_t nach_komma(uint32_t value);
  38:main.c        **** 
  39:main.c        **** 
  40:main.c        **** enum state {GREETER, ZERO, MEASURE};
  41:main.c        **** uint8_t state;
  42:main.c        **** volatile uint8_t ms10,ms100,sec,min, entprell;
  43:main.c        **** volatile uint8_t screentoggle, toggle, toggle_alt;
  44:main.c        **** char buffer[20]; // buffer to store string
  45:main.c        **** char buff[20]; // buffer to store string
  46:main.c        **** int main(void)
  47:main.c        **** {
  39               		.loc 1 47 1 view -0
  40               		.cfi_startproc
  41 0000 00D0      		rcall .
  42 0002 00D0      		rcall .
  43               	.LCFI0:
  44               		.cfi_def_cfa_offset 6
  45 0004 CDB7      		in r28,__SP_L__
  46 0006 DEB7      		in r29,__SP_H__
  47               	.LCFI1:
  48               		.cfi_def_cfa_register 28
  49               	/* prologue: function */
  50               	/* frame size = 4 */
  51               	/* stack size = 4 */
  52               	.L__stack_usage = 4
  48:main.c        **** 	DDRB 	|= (1<<PB0) | (1<<PB1) | (1<<PB2) | (1<<PB3) | (1<<PB5);//set CS_DISP and RES and D/C output
  53               		.loc 1 48 2 view .LVU1
  54               		.loc 1 48 8 is_stmt 0 view .LVU2
  55 0008 84B1      		in r24,0x4
  56 000a 8F62      		ori r24,lo8(47)
  57 000c 84B9      		out 0x4,r24
  49:main.c        **** 	PORTB	|= (1<<PB0) | (1<<PB1) | (1<<PB2) | (1<<PB3) | (1<<PB5);//set CS_DISP and RES and D/C high
  58               		.loc 1 49 2 is_stmt 1 view .LVU3
  59               		.loc 1 49 8 is_stmt 0 view .LVU4
  60 000e 85B1      		in r24,0x5
  61 0010 8F62      		ori r24,lo8(47)
  62 0012 85B9      		out 0x5,r24
  50:main.c        **** 	
  51:main.c        **** 	//TWI
  52:main.c        **** 	DDRC |= (1<<PC5) | (1<<PC4);	//set pins for SCL und SDA as output
  63               		.loc 1 52 2 is_stmt 1 view .LVU5
  64               		.loc 1 52 7 is_stmt 0 view .LVU6
  65 0014 87B1      		in r24,0x7
  66 0016 8063      		ori r24,lo8(48)
  67 0018 87B9      		out 0x7,r24
  53:main.c        **** 	PORTC |= (1<<PC5) | (1<<PC4);	//set pins high
  68               		.loc 1 53 2 is_stmt 1 view .LVU7
  69               		.loc 1 53 8 is_stmt 0 view .LVU8
  70 001a 88B1      		in r24,0x8
  71 001c 8063      		ori r24,lo8(48)
  72 001e 88B9      		out 0x8,r24
  54:main.c        **** 	PORTC &= ~(1<<PC5);
  73               		.loc 1 54 2 is_stmt 1 view .LVU9
  74               		.loc 1 54 8 is_stmt 0 view .LVU10
  75 0020 4598      		cbi 0x8,5
  55:main.c        **** 	DDRD |= (1<<PD1)|(1<<PD2);//set TX0 and SDO as output
  76               		.loc 1 55 2 is_stmt 1 view .LVU11
  77               		.loc 1 55 7 is_stmt 0 view .LVU12
  78 0022 8AB1      		in r24,0xa
  79 0024 8660      		ori r24,lo8(6)
  80 0026 8AB9      		out 0xa,r24
  56:main.c        **** 	PORTD |= (1<<PD1);
  81               		.loc 1 56 2 is_stmt 1 view .LVU13
  82               		.loc 1 56 8 is_stmt 0 view .LVU14
  83 0028 599A      		sbi 0xb,1
  57:main.c        **** 	PORTD &= ~(1<<PD2);
  84               		.loc 1 57 2 is_stmt 1 view .LVU15
  85               		.loc 1 57 8 is_stmt 0 view .LVU16
  86 002a 5A98      		cbi 0xb,2
  58:main.c        **** 
  59:main.c        **** 	DDRD &= ~(1<<PD3) | (1<<PD0);	//Button and RX0 as input(red LED)
  87               		.loc 1 59 2 is_stmt 1 view .LVU17
  88               		.loc 1 59 7 is_stmt 0 view .LVU18
  89 002c 5398      		cbi 0xa,3
  60:main.c        **** 	PORTD |= (1<<PD3);	//activate Pullup
  90               		.loc 1 60 2 is_stmt 1 view .LVU19
  91               		.loc 1 60 8 is_stmt 0 view .LVU20
  92 002e 5B9A      		sbi 0xb,3
  61:main.c        **** 	
  62:main.c        **** 	//init SPI as master without interrupt
  63:main.c        **** 	SPI_MasterInit();
  93               		.loc 1 63 2 is_stmt 1 view .LVU21
  94 0030 0E94 0000 		call SPI_MasterInit
  95               	.LVL0:
  64:main.c        ****     //Timer 1 Configuration
  65:main.c        **** 	OCR1A = 1249;	//OCR1A = 0x3D08;==1sec
  96               		.loc 1 65 2 view .LVU22
  97               		.loc 1 65 8 is_stmt 0 view .LVU23
  98 0034 81EE      		ldi r24,lo8(-31)
  99 0036 94E0      		ldi r25,lo8(4)
 100 0038 9093 8900 		sts 136+1,r25
 101 003c 8093 8800 		sts 136,r24
  66:main.c        **** 	
  67:main.c        ****     TCCR1B |= (1 << WGM12);
 102               		.loc 1 67 5 is_stmt 1 view .LVU24
 103               		.loc 1 67 12 is_stmt 0 view .LVU25
 104 0040 8091 8100 		lds r24,129
 105 0044 8860      		ori r24,lo8(8)
 106 0046 8093 8100 		sts 129,r24
  68:main.c        ****     // Mode 4, CTC on OCR1A
  69:main.c        **** 
  70:main.c        ****     TIMSK1 |= (1 << OCIE1A);
 107               		.loc 1 70 5 is_stmt 1 view .LVU26
 108               		.loc 1 70 12 is_stmt 0 view .LVU27
 109 004a 8091 6F00 		lds r24,111
 110 004e 8260      		ori r24,lo8(2)
 111 0050 8093 6F00 		sts 111,r24
  71:main.c        ****     //Set interrupt on compare match
  72:main.c        **** 
  73:main.c        ****     TCCR1B |= (1 << CS11) | (1 << CS10);
 112               		.loc 1 73 5 is_stmt 1 view .LVU28
 113               		.loc 1 73 12 is_stmt 0 view .LVU29
 114 0054 8091 8100 		lds r24,129
 115 0058 8360      		ori r24,lo8(3)
 116 005a 8093 8100 		sts 129,r24
  74:main.c        ****     // set prescaler to 64 and start the timer
  75:main.c        **** 
  76:main.c        ****     sei();
 117               		.loc 1 76 5 is_stmt 1 view .LVU30
 118               	/* #APP */
 119               	 ;  76 "main.c" 1
 120 005e 7894      		sei
 121               	 ;  0 "" 2
  77:main.c        ****     // enable interrupts
  78:main.c        ****     
  79:main.c        ****     ms10=0;
 122               		.loc 1 79 5 view .LVU31
 123               		.loc 1 79 9 is_stmt 0 view .LVU32
 124               	/* #NOAPP */
 125 0060 1092 0000 		sts ms10,__zero_reg__
  80:main.c        ****     ms100=0;
 126               		.loc 1 80 5 is_stmt 1 view .LVU33
 127               		.loc 1 80 10 is_stmt 0 view .LVU34
 128 0064 1092 0000 		sts ms100,__zero_reg__
  81:main.c        ****     sec=0;
 129               		.loc 1 81 5 is_stmt 1 view .LVU35
 130               		.loc 1 81 8 is_stmt 0 view .LVU36
 131 0068 1092 0000 		sts sec,__zero_reg__
  82:main.c        ****     min=0;
 132               		.loc 1 82 5 is_stmt 1 view .LVU37
 133               		.loc 1 82 8 is_stmt 0 view .LVU38
 134 006c 1092 0000 		sts min,__zero_reg__
  83:main.c        ****     entprell=0;
 135               		.loc 1 83 5 is_stmt 1 view .LVU39
 136               		.loc 1 83 13 is_stmt 0 view .LVU40
 137 0070 1092 0000 		sts entprell,__zero_reg__
  84:main.c        ****     screentoggle=3;
 138               		.loc 1 84 5 is_stmt 1 view .LVU41
 139               		.loc 1 84 17 is_stmt 0 view .LVU42
 140 0074 83E0      		ldi r24,lo8(3)
 141 0076 8093 0000 		sts screentoggle,r24
  85:main.c        ****     toggle=0;
 142               		.loc 1 85 5 is_stmt 1 view .LVU43
 143               		.loc 1 85 11 is_stmt 0 view .LVU44
 144 007a 1092 0000 		sts toggle,__zero_reg__
  86:main.c        ****     toggle_alt=toggle;
 145               		.loc 1 86 5 is_stmt 1 view .LVU45
 146               		.loc 1 86 15 is_stmt 0 view .LVU46
 147 007e 8091 0000 		lds r24,toggle
 148 0082 8093 0000 		sts toggle_alt,r24
  87:main.c        **** 		
  88:main.c        **** 	Display_Init();
 149               		.loc 1 88 2 is_stmt 1 view .LVU47
 150 0086 0E94 0000 		call Display_Init
 151               	.LVL1:
  89:main.c        **** 	Display_Clear();
 152               		.loc 1 89 2 view .LVU48
 153 008a 0E94 0000 		call Display_Clear
 154               	.LVL2:
  90:main.c        **** 	Set_Page_Address(0);
 155               		.loc 1 90 2 view .LVU49
 156 008e 80E0      		ldi r24,0
 157 0090 0E94 0000 		call Set_Page_Address
 158               	.LVL3:
  91:main.c        ****     Set_Column_Address(0);
 159               		.loc 1 91 5 view .LVU50
 160 0094 80E0      		ldi r24,0
 161 0096 0E94 0000 		call Set_Column_Address
 162               	.LVL4:
  92:main.c        ****     TWIInit();
 163               		.loc 1 92 5 view .LVU51
 164 009a 0E94 0000 		call TWIInit
 165               	.LVL5:
  93:main.c        **** 	sht21_init();
 166               		.loc 1 93 2 view .LVU52
 167 009e 0E94 0000 		call sht21_init
 168               	.LVL6:
  94:main.c        **** 	//DPS310_init(LOW);
  95:main.c        ****    state = MEASURE;
 169               		.loc 1 95 4 view .LVU53
 170               		.loc 1 95 10 is_stmt 0 view .LVU54
 171 00a2 82E0      		ldi r24,lo8(2)
 172 00a4 8093 0000 		sts state,r24
  96:main.c        **** 	//sprintf(buffer,"sec=%d",sec);
  97:main.c        **** 	//Write_String(14,0,0,"test");
  98:main.c        **** 	/*
  99:main.c        **** 	 * 
 100:main.c        **** 	 * SHT21 0x80 / 0x81
 101:main.c        **** 	 * DPS310 0xee / 0xef
 102:main.c        **** 	 * 
 103:main.c        **** 	 * */
 104:main.c        **** 	while(1)
 105:main.c        **** 	{ 	
 106:main.c        **** 		switch(state)
 107:main.c        **** 		{
 108:main.c        **** 			case GREETER:	if(BUTTON)
 109:main.c        **** 							{
 110:main.c        **** 								state=ZERO;
 111:main.c        **** 								entprell=RELOAD_ENTPRELL;
 112:main.c        **** 								Write_String(14,0,0," Button ");
 113:main.c        **** 								Write_String(14,1,0,"   to   ");
 114:main.c        **** 								Write_String(14,2,0, "  ZERO  ");
 115:main.c        **** 							}
 116:main.c        **** 							if(toggle)
 117:main.c        **** 							{
 118:main.c        **** 									Write_String(14,0,0,"If found");
 119:main.c        **** 									Write_String(14,1,0,"please  ");
 120:main.c        **** 									Write_String(14,2,0, "contact ");
 121:main.c        **** 							}else
 122:main.c        **** 							{
 123:main.c        **** 									Write_String(14,0,0,"rgroener");
 124:main.c        **** 									Write_String(14,1,0,"@mailbox");
 125:main.c        **** 									Write_String(14,2,0, ".org    ");	
 126:main.c        **** 							}
 127:main.c        **** 							break;
 128:main.c        **** 			case ZERO:		if(BUTTON)
 129:main.c        **** 							{
 130:main.c        **** 								state=MEASURE;
 173               		.loc 1 130 14 view .LVU55
 174 00a8 92E0      		ldi r25,lo8(2)
 175 00aa 992E      		mov r9,r25
 131:main.c        **** 								entprell=RELOAD_ENTPRELL;
 176               		.loc 1 131 17 view .LVU56
 177 00ac 28E2      		ldi r18,lo8(40)
 178 00ae A22E      		mov r10,r18
 179               	.LBB10:
 180               	.LBB11:
 132:main.c        **** 								Write_String(14,0,0," Button ");
 133:main.c        **** 								Write_String(14,1,0,"   to   ");
 134:main.c        **** 								Write_String(14,2,0, "  ZERO  ");
 135:main.c        **** 							}
 136:main.c        **** 							break;
 137:main.c        **** 			case MEASURE:	temp = sht21_measure(0);
 138:main.c        **** 							sprintf(buffer,"%d.%d*",vor_komma(temp), nach_komma(temp));
 139:main.c        **** 							Write_String(14,0,0,buffer);
 140:main.c        **** 							
 141:main.c        **** 							hum = sht21_measure(1);
 142:main.c        **** 							sprintf(buff,"%d.%d%%",vor_komma(hum), nach_komma(hum));
 143:main.c        **** 							Write_String(14,1,0,buff);
 144:main.c        **** 							/*
 145:main.c        **** 							TWIStart();
 146:main.c        **** 							test=TWIGetStatus();
 147:main.c        **** 							sprintf(buffer,"%02X",test);
 148:main.c        **** 							Write_String(14,1,0,buffer);
 149:main.c        **** 							while(1);*/
 150:main.c        **** 							
 151:main.c        **** 							break;
 152:main.c        **** 		}//End of switch(state)	
 153:main.c        **** 			
 154:main.c        **** 		
 155:main.c        **** 		//sprintf(buffer,"sec=%d",test);
 156:main.c        **** 		//Write_String(14,1,0,buffer);
 157:main.c        **** 	} //end while
 158:main.c        **** }//end of main
 159:main.c        **** 
 160:main.c        **** 
 161:main.c        **** ISR (TIMER1_COMPA_vect)
 162:main.c        **** {
 163:main.c        **** 	
 164:main.c        **** 		ms10++;
 165:main.c        **** 		if(entprell)entprell--;
 166:main.c        **** 			
 167:main.c        **** 	if(ms10==10)	//100ms
 168:main.c        **** 	{
 169:main.c        **** 		ms10=0;
 170:main.c        **** 		ms100++;
 171:main.c        **** 	
 172:main.c        **** 		
 173:main.c        **** 	}
 174:main.c        ****     if(ms100==10)	//sec
 175:main.c        **** 	{
 176:main.c        **** 		ms100=0;
 177:main.c        **** 		sec++;
 178:main.c        **** 		//change display screen in fixed time
 179:main.c        **** 		screentoggle++;
 180:main.c        **** 		if(screentoggle==TOGGLEMAX)
 181:main.c        **** 		{
 182:main.c        **** 			screentoggle=0;
 183:main.c        **** 			if(toggle==0)
 184:main.c        **** 			{
 185:main.c        **** 				toggle = 1;
 186:main.c        **** 			}else toggle =0;
 187:main.c        **** 		}
 188:main.c        **** 	}
 189:main.c        **** 	if(sec==60)	//Minute
 190:main.c        **** 	{
 191:main.c        **** 		sec=0;
 192:main.c        **** 		min++;
 193:main.c        **** 	}
 194:main.c        **** }
 195:main.c        **** uint16_t vor_komma(uint32_t value)
 196:main.c        **** {
 197:main.c        **** 	return value/100;
 198:main.c        **** 	
 199:main.c        **** }
 200:main.c        **** uint8_t nach_komma(uint32_t value)
 201:main.c        **** {
 202:main.c        **** 	uint8_t temp;
 203:main.c        **** 	temp = value/100;
 181               		.loc 1 203 14 view .LVU57
 182 00b0 34E6      		ldi r19,lo8(100)
 183 00b2 432E      		mov r4,r19
 184 00b4 512C      		mov r5,__zero_reg__
 185 00b6 612C      		mov r6,__zero_reg__
 186 00b8 712C      		mov r7,__zero_reg__
 204:main.c        **** 	return value-(temp*100);
 187               		.loc 1 204 14 view .LVU58
 188 00ba 44E6      		ldi r20,lo8(100)
 189 00bc B42E      		mov r11,r20
 190               	.LBE11:
 191               	.LBE10:
 138:main.c        **** 							Write_String(14,0,0,buffer);
 192               		.loc 1 138 8 view .LVU59
 193 00be 50E0      		ldi r21,lo8(.LC9)
 194 00c0 C52E      		mov r12,r21
 195 00c2 50E0      		ldi r21,hi8(.LC9)
 196 00c4 D52E      		mov r13,r21
 197 00c6 60E0      		ldi r22,lo8(buffer)
 198 00c8 E62E      		mov r14,r22
 199 00ca 60E0      		ldi r22,hi8(buffer)
 200 00cc F62E      		mov r15,r22
 142:main.c        **** 							Write_String(14,1,0,buff);
 201               		.loc 1 142 8 view .LVU60
 202 00ce 00E0      		ldi r16,lo8(.LC10)
 203 00d0 10E0      		ldi r17,hi8(.LC10)
 204               	.L5:
 104:main.c        **** 	{ 	
 205               		.loc 1 104 2 is_stmt 1 view .LVU61
 106:main.c        **** 		{
 206               		.loc 1 106 3 view .LVU62
 207 00d2 8130      		cpi r24,lo8(1)
 208 00d4 01F0      		breq .L3
 209               	.L13:
 210 00d6 8230      		cpi r24,lo8(2)
 211 00d8 01F4      		brne .+2
 212 00da 00C0      		rjmp .L4
 213 00dc 8111      		cpse r24,__zero_reg__
 214 00de 00C0      		rjmp .L5
 108:main.c        **** 							{
 215               		.loc 1 108 18 view .LVU63
 108:main.c        **** 							{
 216               		.loc 1 108 20 is_stmt 0 view .LVU64
 217 00e0 4B99      		sbic 0x9,3
 218 00e2 00C0      		rjmp .L6
 108:main.c        **** 							{
 219               		.loc 1 108 21 discriminator 1 view .LVU65
 220 00e4 8091 0000 		lds r24,entprell
 221 00e8 8823      		tst r24
 222 00ea 01F4      		brne .+2
 223 00ec 00C0      		rjmp .L12
 224               	.L6:
 116:main.c        **** 							{
 225               		.loc 1 116 8 is_stmt 1 view .LVU66
 116:main.c        **** 							{
 226               		.loc 1 116 11 is_stmt 0 view .LVU67
 227 00ee 8091 0000 		lds r24,toggle
 116:main.c        **** 							{
 228               		.loc 1 116 10 view .LVU68
 229 00f2 8823      		tst r24
 230 00f4 01F4      		brne .+2
 231 00f6 00C0      		rjmp .L7
 118:main.c        **** 									Write_String(14,1,0,"please  ");
 232               		.loc 1 118 10 is_stmt 1 view .LVU69
 233 00f8 20E0      		ldi r18,lo8(.LC3)
 234 00fa 30E0      		ldi r19,hi8(.LC3)
 235 00fc 40E0      		ldi r20,0
 236 00fe 60E0      		ldi r22,0
 237 0100 8EE0      		ldi r24,lo8(14)
 238 0102 0E94 0000 		call Write_String
 239               	.LVL7:
 119:main.c        **** 									Write_String(14,2,0, "contact ");
 240               		.loc 1 119 10 view .LVU70
 241 0106 20E0      		ldi r18,lo8(.LC4)
 242 0108 30E0      		ldi r19,hi8(.LC4)
 243 010a 40E0      		ldi r20,0
 244 010c 61E0      		ldi r22,lo8(1)
 245 010e 8EE0      		ldi r24,lo8(14)
 246 0110 0E94 0000 		call Write_String
 247               	.LVL8:
 120:main.c        **** 							}else
 248               		.loc 1 120 10 view .LVU71
 249 0114 20E0      		ldi r18,lo8(.LC5)
 250 0116 30E0      		ldi r19,hi8(.LC5)
 251               	.L10:
 134:main.c        **** 							}
 252               		.loc 1 134 9 is_stmt 0 view .LVU72
 253 0118 40E0      		ldi r20,0
 254 011a 62E0      		ldi r22,lo8(2)
 255 011c 8EE0      		ldi r24,lo8(14)
 256 011e 0E94 0000 		call Write_String
 257               	.LVL9:
 106:main.c        **** 		{
 258               		.loc 1 106 3 view .LVU73
 259 0122 8091 0000 		lds r24,state
 104:main.c        **** 	{ 	
 260               		.loc 1 104 2 is_stmt 1 view .LVU74
 106:main.c        **** 		{
 261               		.loc 1 106 3 view .LVU75
 262 0126 8130      		cpi r24,lo8(1)
 263 0128 01F4      		brne .L13
 264               	.L3:
 128:main.c        **** 							{
 265               		.loc 1 128 16 view .LVU76
 128:main.c        **** 							{
 266               		.loc 1 128 18 is_stmt 0 view .LVU77
 267 012a 4B99      		sbic 0x9,3
 268 012c 00C0      		rjmp .L3
 128:main.c        **** 							{
 269               		.loc 1 128 19 discriminator 1 view .LVU78
 270 012e 8091 0000 		lds r24,entprell
 271 0132 8111      		cpse r24,__zero_reg__
 272 0134 00C0      		rjmp .L3
 130:main.c        **** 								entprell=RELOAD_ENTPRELL;
 273               		.loc 1 130 9 is_stmt 1 view .LVU79
 130:main.c        **** 								entprell=RELOAD_ENTPRELL;
 274               		.loc 1 130 14 is_stmt 0 view .LVU80
 275 0136 9092 0000 		sts state,r9
 131:main.c        **** 								Write_String(14,0,0," Button ");
 276               		.loc 1 131 9 is_stmt 1 view .LVU81
 131:main.c        **** 								Write_String(14,0,0," Button ");
 277               		.loc 1 131 17 is_stmt 0 view .LVU82
 278 013a A092 0000 		sts entprell,r10
 132:main.c        **** 								Write_String(14,1,0,"   to   ");
 279               		.loc 1 132 9 is_stmt 1 view .LVU83
 280 013e 20E0      		ldi r18,lo8(.LC0)
 281 0140 30E0      		ldi r19,hi8(.LC0)
 282 0142 40E0      		ldi r20,0
 283 0144 60E0      		ldi r22,0
 284 0146 8EE0      		ldi r24,lo8(14)
 285 0148 0E94 0000 		call Write_String
 286               	.LVL10:
 133:main.c        **** 								Write_String(14,2,0, "  ZERO  ");
 287               		.loc 1 133 9 view .LVU84
 288 014c 20E0      		ldi r18,lo8(.LC1)
 289 014e 30E0      		ldi r19,hi8(.LC1)
 290 0150 40E0      		ldi r20,0
 291 0152 61E0      		ldi r22,lo8(1)
 292 0154 8EE0      		ldi r24,lo8(14)
 293 0156 0E94 0000 		call Write_String
 294               	.LVL11:
 134:main.c        **** 							}
 295               		.loc 1 134 9 view .LVU85
 296 015a 20E0      		ldi r18,lo8(.LC2)
 297 015c 30E0      		ldi r19,hi8(.LC2)
 298 015e 00C0      		rjmp .L10
 299               	.L4:
 137:main.c        **** 							sprintf(buffer,"%d.%d*",vor_komma(temp), nach_komma(temp));
 300               		.loc 1 137 18 view .LVU86
 137:main.c        **** 							sprintf(buffer,"%d.%d*",vor_komma(temp), nach_komma(temp));
 301               		.loc 1 137 25 is_stmt 0 view .LVU87
 302 0160 80E0      		ldi r24,0
 303 0162 0E94 0000 		call sht21_measure
 304               	.LVL12:
 137:main.c        **** 							sprintf(buffer,"%d.%d*",vor_komma(temp), nach_komma(temp));
 305               		.loc 1 137 23 view .LVU88
 306 0166 9093 0000 		sts temp+1,r25
 307 016a 8093 0000 		sts temp,r24
 138:main.c        **** 							Write_String(14,0,0,buffer);
 308               		.loc 1 138 8 is_stmt 1 view .LVU89
 138:main.c        **** 							Write_String(14,0,0,buffer);
 309               		.loc 1 138 49 is_stmt 0 view .LVU90
 310 016e 092E      		mov __tmp_reg__,r25
 311 0170 000C      		lsl r0
 312 0172 AA0B      		sbc r26,r26
 313 0174 BB0B      		sbc r27,r27
 314 0176 8983      		std Y+1,r24
 315 0178 9A83      		std Y+2,r25
 316 017a AB83      		std Y+3,r26
 317 017c BC83      		std Y+4,r27
 318               	.LVL13:
 319               	.LBB14:
 320               	.LBI10:
 200:main.c        **** {
 321               		.loc 1 200 9 is_stmt 1 view .LVU91
 322               	.LBB12:
 202:main.c        **** 	temp = value/100;
 323               		.loc 1 202 2 view .LVU92
 203:main.c        **** 	return value-(temp*100);
 324               		.loc 1 203 2 view .LVU93
 203:main.c        **** 	return value-(temp*100);
 325               		.loc 1 203 14 is_stmt 0 view .LVU94
 326 017e BC01      		movw r22,r24
 327 0180 CD01      		movw r24,r26
 328               	.LVL14:
 203:main.c        **** 	return value-(temp*100);
 329               		.loc 1 203 14 view .LVU95
 330 0182 A301      		movw r20,r6
 331 0184 9201      		movw r18,r4
 332 0186 0E94 0000 		call __udivmodsi4
 333               	.LVL15:
 334               		.loc 1 204 2 is_stmt 1 view .LVU96
 335               		.loc 1 204 2 is_stmt 0 view .LVU97
 336               	.LBE12:
 337               	.LBE14:
 338               	.LBB15:
 339               	.LBI15:
 195:main.c        **** {
 340               		.loc 1 195 10 is_stmt 1 view .LVU98
 341               	.LBB16:
 197:main.c        **** 	
 342               		.loc 1 197 2 view .LVU99
 197:main.c        **** 	
 343               		.loc 1 197 2 is_stmt 0 view .LVU100
 344               	.LBE16:
 345               	.LBE15:
 346               	.LBB17:
 347               	.LBB13:
 348               		.loc 1 204 14 view .LVU101
 349 018a 8981      		ldd r24,Y+1
 350 018c B29E      		mul r11,r18
 351 018e 8019      		sub r24,r0
 352 0190 1124      		clr __zero_reg__
 353               	.LBE13:
 354               	.LBE17:
 138:main.c        **** 							Write_String(14,0,0,buffer);
 355               		.loc 1 138 8 view .LVU102
 356 0192 1F92      		push __zero_reg__
 357 0194 8F93      		push r24
 358 0196 3F93      		push r19
 359 0198 2F93      		push r18
 360 019a DF92      		push r13
 361 019c CF92      		push r12
 362 019e FF92      		push r15
 363 01a0 EF92      		push r14
 364 01a2 0E94 0000 		call sprintf
 365               	.LVL16:
 139:main.c        **** 							
 366               		.loc 1 139 8 is_stmt 1 view .LVU103
 367 01a6 20E0      		ldi r18,lo8(buffer)
 368 01a8 30E0      		ldi r19,hi8(buffer)
 369 01aa 40E0      		ldi r20,0
 370 01ac 60E0      		ldi r22,0
 371 01ae 8EE0      		ldi r24,lo8(14)
 372 01b0 0E94 0000 		call Write_String
 373               	.LVL17:
 141:main.c        **** 							sprintf(buff,"%d.%d%%",vor_komma(hum), nach_komma(hum));
 374               		.loc 1 141 8 view .LVU104
 141:main.c        **** 							sprintf(buff,"%d.%d%%",vor_komma(hum), nach_komma(hum));
 375               		.loc 1 141 14 is_stmt 0 view .LVU105
 376 01b4 81E0      		ldi r24,lo8(1)
 377 01b6 0E94 0000 		call sht21_measure
 378               	.LVL18:
 141:main.c        **** 							sprintf(buff,"%d.%d%%",vor_komma(hum), nach_komma(hum));
 379               		.loc 1 141 12 view .LVU106
 380 01ba 9093 0000 		sts hum+1,r25
 381 01be 8093 0000 		sts hum,r24
 142:main.c        **** 							Write_String(14,1,0,buff);
 382               		.loc 1 142 8 is_stmt 1 view .LVU107
 142:main.c        **** 							Write_String(14,1,0,buff);
 383               		.loc 1 142 47 is_stmt 0 view .LVU108
 384 01c2 092E      		mov __tmp_reg__,r25
 385 01c4 000C      		lsl r0
 386 01c6 AA0B      		sbc r26,r26
 387 01c8 BB0B      		sbc r27,r27
 388 01ca 8983      		std Y+1,r24
 389 01cc 9A83      		std Y+2,r25
 390 01ce AB83      		std Y+3,r26
 391 01d0 BC83      		std Y+4,r27
 392               	.LVL19:
 393               	.LBB18:
 394               	.LBI18:
 200:main.c        **** {
 395               		.loc 1 200 9 is_stmt 1 view .LVU109
 396               	.LBB19:
 202:main.c        **** 	temp = value/100;
 397               		.loc 1 202 2 view .LVU110
 203:main.c        **** 	return value-(temp*100);
 398               		.loc 1 203 2 view .LVU111
 203:main.c        **** 	return value-(temp*100);
 399               		.loc 1 203 14 is_stmt 0 view .LVU112
 400 01d2 BC01      		movw r22,r24
 401 01d4 CD01      		movw r24,r26
 402               	.LVL20:
 203:main.c        **** 	return value-(temp*100);
 403               		.loc 1 203 14 view .LVU113
 404 01d6 A301      		movw r20,r6
 405 01d8 9201      		movw r18,r4
 406 01da 0E94 0000 		call __udivmodsi4
 407               	.LVL21:
 408               		.loc 1 204 2 is_stmt 1 view .LVU114
 409               		.loc 1 204 2 is_stmt 0 view .LVU115
 410               	.LBE19:
 411               	.LBE18:
 412               	.LBB21:
 413               	.LBI21:
 195:main.c        **** {
 414               		.loc 1 195 10 is_stmt 1 view .LVU116
 415               	.LBB22:
 197:main.c        **** 	
 416               		.loc 1 197 2 view .LVU117
 197:main.c        **** 	
 417               		.loc 1 197 2 is_stmt 0 view .LVU118
 418               	.LBE22:
 419               	.LBE21:
 420               	.LBB23:
 421               	.LBB20:
 422               		.loc 1 204 14 view .LVU119
 423 01de 8981      		ldd r24,Y+1
 424 01e0 B29E      		mul r11,r18
 425 01e2 8019      		sub r24,r0
 426 01e4 1124      		clr __zero_reg__
 427               	.LBE20:
 428               	.LBE23:
 142:main.c        **** 							Write_String(14,1,0,buff);
 429               		.loc 1 142 8 view .LVU120
 430 01e6 1F92      		push __zero_reg__
 431 01e8 8F93      		push r24
 432 01ea 3F93      		push r19
 433 01ec 2F93      		push r18
 434 01ee 1F93      		push r17
 435 01f0 0F93      		push r16
 436 01f2 A0E0      		ldi r26,lo8(buff)
 437 01f4 B0E0      		ldi r27,hi8(buff)
 438 01f6 BF93      		push r27
 439 01f8 AF93      		push r26
 440 01fa 0E94 0000 		call sprintf
 441               	.LVL22:
 143:main.c        **** 							/*
 442               		.loc 1 143 8 is_stmt 1 view .LVU121
 443 01fe 20E0      		ldi r18,lo8(buff)
 444 0200 30E0      		ldi r19,hi8(buff)
 445 0202 40E0      		ldi r20,0
 446 0204 61E0      		ldi r22,lo8(1)
 447 0206 8EE0      		ldi r24,lo8(14)
 448 0208 0E94 0000 		call Write_String
 449               	.LVL23:
 151:main.c        **** 		}//End of switch(state)	
 450               		.loc 1 151 8 view .LVU122
 106:main.c        **** 		{
 451               		.loc 1 106 3 is_stmt 0 view .LVU123
 452 020c 8091 0000 		lds r24,state
 151:main.c        **** 		}//End of switch(state)	
 453               		.loc 1 151 8 view .LVU124
 454 0210 0FB6      		in __tmp_reg__,__SREG__
 455 0212 F894      		cli
 456 0214 DEBF      		out __SP_H__,r29
 457 0216 0FBE      		out __SREG__,__tmp_reg__
 458 0218 CDBF      		out __SP_L__,r28
 459 021a 00C0      		rjmp .L5
 460               	.L7:
 123:main.c        **** 									Write_String(14,1,0,"@mailbox");
 461               		.loc 1 123 10 is_stmt 1 view .LVU125
 462 021c 20E0      		ldi r18,lo8(.LC6)
 463 021e 30E0      		ldi r19,hi8(.LC6)
 464 0220 40E0      		ldi r20,0
 465 0222 60E0      		ldi r22,0
 466 0224 8EE0      		ldi r24,lo8(14)
 467 0226 0E94 0000 		call Write_String
 468               	.LVL24:
 124:main.c        **** 									Write_String(14,2,0, ".org    ");	
 469               		.loc 1 124 10 view .LVU126
 470 022a 20E0      		ldi r18,lo8(.LC7)
 471 022c 30E0      		ldi r19,hi8(.LC7)
 472 022e 40E0      		ldi r20,0
 473 0230 61E0      		ldi r22,lo8(1)
 474 0232 8EE0      		ldi r24,lo8(14)
 475 0234 0E94 0000 		call Write_String
 476               	.LVL25:
 125:main.c        **** 							}
 477               		.loc 1 125 10 view .LVU127
 478 0238 20E0      		ldi r18,lo8(.LC8)
 479 023a 30E0      		ldi r19,hi8(.LC8)
 480 023c 00C0      		rjmp .L10
 481               	.L12:
 110:main.c        **** 								entprell=RELOAD_ENTPRELL;
 482               		.loc 1 110 9 view .LVU128
 110:main.c        **** 								entprell=RELOAD_ENTPRELL;
 483               		.loc 1 110 14 is_stmt 0 view .LVU129
 484 023e 81E0      		ldi r24,lo8(1)
 485 0240 8093 0000 		sts state,r24
 111:main.c        **** 								Write_String(14,0,0," Button ");
 486               		.loc 1 111 9 is_stmt 1 view .LVU130
 111:main.c        **** 								Write_String(14,0,0," Button ");
 487               		.loc 1 111 17 is_stmt 0 view .LVU131
 488 0244 A092 0000 		sts entprell,r10
 112:main.c        **** 								Write_String(14,1,0,"   to   ");
 489               		.loc 1 112 9 is_stmt 1 view .LVU132
 490 0248 20E0      		ldi r18,lo8(.LC0)
 491 024a 30E0      		ldi r19,hi8(.LC0)
 492 024c 40E0      		ldi r20,0
 493 024e 60E0      		ldi r22,0
 494 0250 8EE0      		ldi r24,lo8(14)
 495 0252 0E94 0000 		call Write_String
 496               	.LVL26:
 113:main.c        **** 								Write_String(14,2,0, "  ZERO  ");
 497               		.loc 1 113 9 view .LVU133
 498 0256 20E0      		ldi r18,lo8(.LC1)
 499 0258 30E0      		ldi r19,hi8(.LC1)
 500 025a 40E0      		ldi r20,0
 501 025c 61E0      		ldi r22,lo8(1)
 502 025e 8EE0      		ldi r24,lo8(14)
 503 0260 0E94 0000 		call Write_String
 504               	.LVL27:
 114:main.c        **** 							}
 505               		.loc 1 114 9 view .LVU134
 506 0264 20E0      		ldi r18,lo8(.LC2)
 507 0266 30E0      		ldi r19,hi8(.LC2)
 508 0268 40E0      		ldi r20,0
 509 026a 62E0      		ldi r22,lo8(2)
 510 026c 8EE0      		ldi r24,lo8(14)
 511 026e 0E94 0000 		call Write_String
 512               	.LVL28:
 513 0272 00C0      		rjmp .L6
 514               		.cfi_endproc
 515               	.LFE12:
 517               		.text
 518               	.global	__vector_11
 520               	__vector_11:
 521               	.LFB13:
 162:main.c        **** 	
 522               		.loc 1 162 1 view -0
 523               		.cfi_startproc
 524 0000 1F92 1FB6 		__gcc_isr 1
 524      1F92 1124 
 524      8F93 
 525               	/* prologue: Signal */
 526               	/* frame size = 0 */
 527               	/* stack size = 0...4 */
 528               	.L__stack_usage = 0 + __gcc_isr.n_pushed
 164:main.c        **** 		if(entprell)entprell--;
 529               		.loc 1 164 3 view .LVU136
 164:main.c        **** 		if(entprell)entprell--;
 530               		.loc 1 164 7 is_stmt 0 view .LVU137
 531 000a 8091 0000 		lds r24,ms10
 532 000e 8F5F      		subi r24,lo8(-(1))
 533 0010 8093 0000 		sts ms10,r24
 165:main.c        **** 			
 534               		.loc 1 165 3 is_stmt 1 view .LVU138
 165:main.c        **** 			
 535               		.loc 1 165 6 is_stmt 0 view .LVU139
 536 0014 8091 0000 		lds r24,entprell
 165:main.c        **** 			
 537               		.loc 1 165 5 view .LVU140
 538 0018 8823      		tst r24
 539 001a 01F0      		breq .L15
 165:main.c        **** 			
 540               		.loc 1 165 15 is_stmt 1 discriminator 1 view .LVU141
 165:main.c        **** 			
 541               		.loc 1 165 23 is_stmt 0 discriminator 1 view .LVU142
 542 001c 8091 0000 		lds r24,entprell
 543 0020 8150      		subi r24,lo8(-(-1))
 544 0022 8093 0000 		sts entprell,r24
 545               	.L15:
 167:main.c        **** 	{
 546               		.loc 1 167 2 is_stmt 1 view .LVU143
 167:main.c        **** 	{
 547               		.loc 1 167 9 is_stmt 0 view .LVU144
 548 0026 8091 0000 		lds r24,ms10
 167:main.c        **** 	{
 549               		.loc 1 167 4 view .LVU145
 550 002a 8A30      		cpi r24,lo8(10)
 551 002c 01F4      		brne .L16
 169:main.c        **** 		ms100++;
 552               		.loc 1 169 3 is_stmt 1 view .LVU146
 169:main.c        **** 		ms100++;
 553               		.loc 1 169 7 is_stmt 0 view .LVU147
 554 002e 1092 0000 		sts ms10,__zero_reg__
 170:main.c        **** 	
 555               		.loc 1 170 3 is_stmt 1 view .LVU148
 170:main.c        **** 	
 556               		.loc 1 170 8 is_stmt 0 view .LVU149
 557 0032 8091 0000 		lds r24,ms100
 558 0036 8F5F      		subi r24,lo8(-(1))
 559 0038 8093 0000 		sts ms100,r24
 560               	.L16:
 174:main.c        **** 	{
 561               		.loc 1 174 5 is_stmt 1 view .LVU150
 174:main.c        **** 	{
 562               		.loc 1 174 13 is_stmt 0 view .LVU151
 563 003c 8091 0000 		lds r24,ms100
 174:main.c        **** 	{
 564               		.loc 1 174 7 view .LVU152
 565 0040 8A30      		cpi r24,lo8(10)
 566 0042 01F0      		breq .L25
 567               	.L18:
 189:main.c        **** 	{
 568               		.loc 1 189 2 is_stmt 1 view .LVU153
 189:main.c        **** 	{
 569               		.loc 1 189 8 is_stmt 0 view .LVU154
 570 0044 8091 0000 		lds r24,sec
 189:main.c        **** 	{
 571               		.loc 1 189 4 view .LVU155
 572 0048 8C33      		cpi r24,lo8(60)
 573 004a 01F4      		brne .L14
 191:main.c        **** 		min++;
 574               		.loc 1 191 3 is_stmt 1 view .LVU156
 191:main.c        **** 		min++;
 575               		.loc 1 191 6 is_stmt 0 view .LVU157
 576 004c 1092 0000 		sts sec,__zero_reg__
 192:main.c        **** 	}
 577               		.loc 1 192 3 is_stmt 1 view .LVU158
 192:main.c        **** 	}
 578               		.loc 1 192 6 is_stmt 0 view .LVU159
 579 0050 8091 0000 		lds r24,min
 580 0054 8F5F      		subi r24,lo8(-(1))
 581 0056 8093 0000 		sts min,r24
 582               	.L14:
 583               	/* epilogue start */
 194:main.c        **** uint16_t vor_komma(uint32_t value)
 584               		.loc 1 194 1 view .LVU160
 585 005a 8F91 1F90 		__gcc_isr 2
 585      1FBE 1F90 
 586 0062 1895      		reti
 587               	.L25:
 176:main.c        **** 		sec++;
 588               		.loc 1 176 3 is_stmt 1 view .LVU161
 176:main.c        **** 		sec++;
 589               		.loc 1 176 8 is_stmt 0 view .LVU162
 590 0064 1092 0000 		sts ms100,__zero_reg__
 177:main.c        **** 		//change display screen in fixed time
 591               		.loc 1 177 3 is_stmt 1 view .LVU163
 177:main.c        **** 		//change display screen in fixed time
 592               		.loc 1 177 6 is_stmt 0 view .LVU164
 593 0068 8091 0000 		lds r24,sec
 594 006c 8F5F      		subi r24,lo8(-(1))
 595 006e 8093 0000 		sts sec,r24
 179:main.c        **** 		if(screentoggle==TOGGLEMAX)
 596               		.loc 1 179 3 is_stmt 1 view .LVU165
 179:main.c        **** 		if(screentoggle==TOGGLEMAX)
 597               		.loc 1 179 15 is_stmt 0 view .LVU166
 598 0072 8091 0000 		lds r24,screentoggle
 599 0076 8F5F      		subi r24,lo8(-(1))
 600 0078 8093 0000 		sts screentoggle,r24
 180:main.c        **** 		{
 601               		.loc 1 180 3 is_stmt 1 view .LVU167
 180:main.c        **** 		{
 602               		.loc 1 180 18 is_stmt 0 view .LVU168
 603 007c 8091 0000 		lds r24,screentoggle
 180:main.c        **** 		{
 604               		.loc 1 180 5 view .LVU169
 605 0080 8430      		cpi r24,lo8(4)
 606 0082 01F4      		brne .L18
 182:main.c        **** 			if(toggle==0)
 607               		.loc 1 182 4 is_stmt 1 view .LVU170
 182:main.c        **** 			if(toggle==0)
 608               		.loc 1 182 16 is_stmt 0 view .LVU171
 609 0084 1092 0000 		sts screentoggle,__zero_reg__
 183:main.c        **** 			{
 610               		.loc 1 183 4 is_stmt 1 view .LVU172
 183:main.c        **** 			{
 611               		.loc 1 183 13 is_stmt 0 view .LVU173
 612 0088 8091 0000 		lds r24,toggle
 183:main.c        **** 			{
 613               		.loc 1 183 6 view .LVU174
 614 008c 8111      		cpse r24,__zero_reg__
 615 008e 00C0      		rjmp .L20
 185:main.c        **** 			}else toggle =0;
 616               		.loc 1 185 5 is_stmt 1 view .LVU175
 185:main.c        **** 			}else toggle =0;
 617               		.loc 1 185 12 is_stmt 0 view .LVU176
 618 0090 81E0      		ldi r24,lo8(1)
 619 0092 8093 0000 		sts toggle,r24
 620 0096 00C0      		rjmp .L18
 621               	.L20:
 186:main.c        **** 		}
 622               		.loc 1 186 10 is_stmt 1 view .LVU177
 186:main.c        **** 		}
 623               		.loc 1 186 17 is_stmt 0 view .LVU178
 624 0098 1092 0000 		sts toggle,__zero_reg__
 625 009c 00C0      		rjmp .L18
 626               		__gcc_isr 0,r24
 627               		.cfi_endproc
 628               	.LFE13:
 630               	.global	vor_komma
 632               	vor_komma:
 633               	.LVL29:
 634               	.LFB14:
 196:main.c        **** 	return value/100;
 635               		.loc 1 196 1 is_stmt 1 view -0
 636               		.cfi_startproc
 196:main.c        **** 	return value/100;
 637               		.loc 1 196 1 is_stmt 0 view .LVU180
 638 009e CF93      		push r28
 639               	.LCFI2:
 640               		.cfi_def_cfa_offset 3
 641               		.cfi_offset 28, -2
 642 00a0 DF93      		push r29
 643               	.LCFI3:
 644               		.cfi_def_cfa_offset 4
 645               		.cfi_offset 29, -3
 646 00a2 00D0      		rcall .
 647 00a4 00D0      		rcall .
 648               	.LCFI4:
 649               		.cfi_def_cfa_offset 8
 650 00a6 CDB7      		in r28,__SP_L__
 651 00a8 DEB7      		in r29,__SP_H__
 652               	.LCFI5:
 653               		.cfi_def_cfa_register 28
 654               	/* prologue: function */
 655               	/* frame size = 4 */
 656               	/* stack size = 6 */
 657               	.L__stack_usage = 6
 197:main.c        **** 	
 658               		.loc 1 197 2 is_stmt 1 view .LVU181
 197:main.c        **** 	
 659               		.loc 1 197 14 is_stmt 0 view .LVU182
 660 00aa 24E6      		ldi r18,lo8(100)
 661 00ac 30E0      		ldi r19,0
 662 00ae 40E0      		ldi r20,0
 663 00b0 50E0      		ldi r21,0
 664 00b2 0E94 0000 		call __udivmodsi4
 665               	.LVL30:
 199:main.c        **** uint8_t nach_komma(uint32_t value)
 666               		.loc 1 199 1 view .LVU183
 667 00b6 C901      		movw r24,r18
 668               	/* epilogue start */
 669 00b8 0F90      		pop __tmp_reg__
 670 00ba 0F90      		pop __tmp_reg__
 671 00bc 0F90      		pop __tmp_reg__
 672 00be 0F90      		pop __tmp_reg__
 673 00c0 DF91      		pop r29
 674 00c2 CF91      		pop r28
 675 00c4 0895      		ret
 676               		.cfi_endproc
 677               	.LFE14:
 679               	.global	nach_komma
 681               	nach_komma:
 682               	.LVL31:
 683               	.LFB15:
 201:main.c        **** 	uint8_t temp;
 684               		.loc 1 201 1 is_stmt 1 view -0
 685               		.cfi_startproc
 201:main.c        **** 	uint8_t temp;
 686               		.loc 1 201 1 is_stmt 0 view .LVU185
 687 00c6 CF93      		push r28
 688               	.LCFI6:
 689               		.cfi_def_cfa_offset 3
 690               		.cfi_offset 28, -2
 691               	/* prologue: function */
 692               	/* frame size = 0 */
 693               	/* stack size = 1 */
 694               	.L__stack_usage = 1
 695 00c8 C62F      		mov r28,r22
 202:main.c        **** 	temp = value/100;
 696               		.loc 1 202 2 is_stmt 1 view .LVU186
 203:main.c        **** 	return value-(temp*100);
 697               		.loc 1 203 2 view .LVU187
 698               	.LVL32:
 699               		.loc 1 204 2 view .LVU188
 203:main.c        **** 	return value-(temp*100);
 700               		.loc 1 203 14 is_stmt 0 view .LVU189
 701 00ca 24E6      		ldi r18,lo8(100)
 702 00cc 30E0      		ldi r19,0
 703 00ce 40E0      		ldi r20,0
 704 00d0 50E0      		ldi r21,0
 705 00d2 0E94 0000 		call __udivmodsi4
 706               	.LVL33:
 205:main.c        **** 	
 206:main.c        **** 	
 207:main.c        **** }
 707               		.loc 1 207 1 view .LVU190
 708 00d6 8C2F      		mov r24,r28
 709               	.LVL34:
 710               		.loc 1 207 1 view .LVU191
 711 00d8 94E6      		ldi r25,lo8(100)
 712 00da 299F      		mul r18,r25
 713 00dc 8019      		sub r24,r0
 714 00de 1124      		clr __zero_reg__
 715               	/* epilogue start */
 716 00e0 CF91      		pop r28
 717               		.loc 1 207 1 view .LVU192
 718 00e2 0895      		ret
 719               		.cfi_endproc
 720               	.LFE15:
 722               	.global	buff
 723               		.section .bss
 726               	buff:
 727 0000 0000 0000 		.zero	20
 727      0000 0000 
 727      0000 0000 
 727      0000 0000 
 727      0000 0000 
 728               	.global	buffer
 731               	buffer:
 732 0014 0000 0000 		.zero	20
 732      0000 0000 
 732      0000 0000 
 732      0000 0000 
 732      0000 0000 
 733               	.global	toggle_alt
 736               	toggle_alt:
 737 0028 00        		.zero	1
 738               	.global	toggle
 741               	toggle:
 742 0029 00        		.zero	1
 743               	.global	screentoggle
 746               	screentoggle:
 747 002a 00        		.zero	1
 748               	.global	entprell
 751               	entprell:
 752 002b 00        		.zero	1
 753               	.global	min
 756               	min:
 757 002c 00        		.zero	1
 758               	.global	sec
 761               	sec:
 762 002d 00        		.zero	1
 763               	.global	ms100
 766               	ms100:
 767 002e 00        		.zero	1
 768               	.global	ms10
 771               	ms10:
 772 002f 00        		.zero	1
 773               	.global	state
 776               	state:
 777 0030 00        		.zero	1
 778               	.global	hum
 781               	hum:
 782 0031 0000      		.zero	2
 783               	.global	test
 786               	test:
 787 0033 0000      		.zero	2
 788               	.global	temp
 791               	temp:
 792 0035 0000      		.zero	2
 793               	.global	font14
 794               		.section	.progmem.data,"a",@progbits
 797               	font14:
 798 0000 00        		.string	""
 799 0001 00        		.string	""
 800 0002 00        		.string	""
 801 0003 00        		.string	""
 802 0004 00        		.string	""
 803 0005 00        		.string	""
 804 0006 00        		.string	""
 805 0007 00        		.string	""
 806 0008 00        		.string	""
 807 0009 00        		.string	""
 808 000a 00        		.string	""
 809 000b 00        		.string	""
 810 000c 00        		.string	""
 811 000d 00        		.string	""
 812 000e 00        		.string	""
 813 000f 1010 1010 		.string	"\020\020\020\020\020\020\020"
 813      1010 1000 
 814 0017 1010 00   		.string	"\020\020"
 815 001a 00        		.string	""
 816 001b 00        		.string	""
 817 001c 2424 2424 		.string	"$$$$"
 817      00
 818 0021 00        		.string	""
 819 0022 00        		.string	""
 820 0023 00        		.string	""
 821 0024 00        		.string	""
 822 0025 00        		.string	""
 823 0026 00        		.string	""
 824 0027 00        		.string	""
 825 0028 00        		.string	""
 826 0029 00        		.string	""
 827 002a 00        		.string	""
 828 002b 0909 127F 		.string	"\t\t\022\177\022$\377$HH"
 828      1224 FF24 
 828      4848 00
 829 0036 00        		.string	""
 830 0037 00        		.string	""
 831 0038 103C 5050 		.string	"\020<PPP0\030\024\024\024x\020"
 831      5030 1814 
 831      1414 7810 
 831      00
 832 0045 00        		.string	""
 833 0046 00        		.string	""
 834 0047 6192 9494 		.string	"a\222\224\224h\026))I\206"
 834      6816 2929 
 834      4986 00
 835 0052 00        		.string	""
 836 0053 00        		.string	""
 837 0054 00        		.string	""
 838 0055 1824 2428 		.string	"\030$$(0\321\211\216\306\177"
 838      30D1 898E 
 838      C67F 00
 839 0060 00        		.string	""
 840 0061 00        		.string	""
 841 0062 1010 1010 		.string	"\020\020\020\020"
 841      00
 842 0067 00        		.string	""
 843 0068 00        		.string	""
 844 0069 00        		.string	""
 845 006a 00        		.string	""
 846 006b 00        		.string	""
 847 006c 00        		.string	""
 848 006d 00        		.string	""
 849 006e 00        		.string	""
 850 006f 00        		.string	""
 851 0070 060C 1010 		.string	"\006\f\020\020     \020\020\f\006"
 851      2020 2020 
 851      2010 100C 
 851      0600 
 852 007e 6030 0808 		.string	"`0\b\b\004\004\004\004\004\b\b0`"
 852      0404 0404 
 852      0408 0830 
 852      6000 
 853 008c 00        		.string	""
 854 008d 1028 1000 		.string	"\020(\020"
 855 0091 00        		.string	""
 856 0092 00        		.string	""
 857 0093 00        		.string	""
 858 0094 00        		.string	""
 859 0095 00        		.string	""
 860 0096 00        		.string	""
 861 0097 00        		.string	""
 862 0098 00        		.string	""
 863 0099 00        		.string	""
 864 009a 00        		.string	""
 865 009b 00        		.string	""
 866 009c 00        		.string	""
 867 009d 00        		.string	""
 868 009e 1010 10FE 		.string	"\020\020\020\376\020\020\020"
 868      1010 1000 
 869 00a6 00        		.string	""
 870 00a7 00        		.string	""
 871 00a8 00        		.string	""
 872 00a9 00        		.string	""
 873 00aa 00        		.string	""
 874 00ab 00        		.string	""
 875 00ac 00        		.string	""
 876 00ad 00        		.string	""
 877 00ae 00        		.string	""
 878 00af 00        		.string	""
 879 00b0 00        		.string	""
 880 00b1 1818 0810 		.string	"\030\030\b\020"
 880      00
 881 00b6 00        		.string	""
 882 00b7 00        		.string	""
 883 00b8 00        		.string	""
 884 00b9 00        		.string	""
 885 00ba 00        		.string	""
 886 00bb 00        		.string	""
 887 00bc 7E00      		.string	"~"
 888 00be 00        		.string	""
 889 00bf 00        		.string	""
 890 00c0 00        		.string	""
 891 00c1 00        		.string	""
 892 00c2 00        		.string	""
 893 00c3 00        		.string	""
 894 00c4 00        		.string	""
 895 00c5 00        		.string	""
 896 00c6 00        		.string	""
 897 00c7 00        		.string	""
 898 00c8 00        		.string	""
 899 00c9 00        		.string	""
 900 00ca 00        		.string	""
 901 00cb 00        		.string	""
 902 00cc 00        		.string	""
 903 00cd 1818 00   		.string	"\030\030"
 904 00d0 00        		.string	""
 905 00d1 00        		.string	""
 906 00d2 0204 0404 		.string	"\002\004\004\004\b\b\030\020\020   @"
 906      0808 1810 
 906      1020 2020 
 906      4000 
 907 00e0 00        		.string	""
 908 00e1 1824 4242 		.string	"\030$BBBBBB$\030"
 908      4242 4242 
 908      2418 00
 909 00ec 00        		.string	""
 910 00ed 00        		.string	""
 911 00ee 00        		.string	""
 912 00ef 0878 0808 		.string	"\bx\b\b\b\b\b\b\b\177"
 912      0808 0808 
 912      087F 00
 913 00fa 00        		.string	""
 914 00fb 00        		.string	""
 915 00fc 00        		.string	""
 916 00fd 7804 0404 		.string	"x\004\004\004\b\b\020 @|"
 916      0808 1020 
 916      407C 00
 917 0108 00        		.string	""
 918 0109 00        		.string	""
 919 010a 00        		.string	""
 920 010b 3C02 0202 		.string	"<\002\002\002\034\002\002\002\002<"
 920      1C02 0202 
 920      023C 00
 921 0116 00        		.string	""
 922 0117 00        		.string	""
 923 0118 00        		.string	""
 924 0119 040C 1414 		.string	"\004\f\024\024$D~\004\004\004"
 924      2444 7E04 
 924      0404 00
 925 0124 00        		.string	""
 926 0125 00        		.string	""
 927 0126 00        		.string	""
 928 0127 3E20 2020 		.string	">   8\006\002\002\002<"
 928      3806 0202 
 928      023C 00
 929 0132 00        		.string	""
 930 0133 00        		.string	""
 931 0134 00        		.string	""
 932 0135 1C20 4040 		.string	"\034 @@\\bBB\"\034"
 932      5C62 4242 
 932      221C 00
 933 0140 00        		.string	""
 934 0141 00        		.string	""
 935 0142 00        		.string	""
 936 0143 7E02 0404 		.string	"~\002\004\004\b\020\020\020  "
 936      0810 1010 
 936      2020 00
 937 014e 00        		.string	""
 938 014f 00        		.string	""
 939 0150 00        		.string	""
 940 0151 3C42 4244 		.string	"<BBD8$BBB<"
 940      3824 4242 
 940      423C 00
 941 015c 00        		.string	""
 942 015d 00        		.string	""
 943 015e 00        		.string	""
 944 015f 3844 4242 		.string	"8DBBF:\002\002\0048"
 944      463A 0202 
 944      0438 00
 945 016a 00        		.string	""
 946 016b 00        		.string	""
 947 016c 00        		.string	""
 948 016d 00        		.string	""
 949 016e 00        		.string	""
 950 016f 00        		.string	""
 951 0170 1818 00   		.string	"\030\030"
 952 0173 00        		.string	""
 953 0174 00        		.string	""
 954 0175 1818 00   		.string	"\030\030"
 955 0178 00        		.string	""
 956 0179 00        		.string	""
 957 017a 00        		.string	""
 958 017b 00        		.string	""
 959 017c 00        		.string	""
 960 017d 00        		.string	""
 961 017e 1818 00   		.string	"\030\030"
 962 0181 00        		.string	""
 963 0182 00        		.string	""
 964 0183 1818 0810 		.string	"\030\030\b\020"
 964      00
 965 0188 00        		.string	""
 966 0189 00        		.string	""
 967 018a 00        		.string	""
 968 018b 00        		.string	""
 969 018c 020C 1060 		.string	"\002\f\020`\020\f\002"
 969      100C 0200 
 970 0194 00        		.string	""
 971 0195 00        		.string	""
 972 0196 00        		.string	""
 973 0197 00        		.string	""
 974 0198 00        		.string	""
 975 0199 00        		.string	""
 976 019a 00        		.string	""
 977 019b 7E00      		.string	"~"
 978 019d 00        		.string	""
 979 019e 7E00      		.string	"~"
 980 01a0 00        		.string	""
 981 01a1 00        		.string	""
 982 01a2 00        		.string	""
 983 01a3 00        		.string	""
 984 01a4 00        		.string	""
 985 01a5 00        		.string	""
 986 01a6 00        		.string	""
 987 01a7 00        		.string	""
 988 01a8 4030 0806 		.string	"@0\b\006\b0@"
 988      0830 4000 
 989 01b0 00        		.string	""
 990 01b1 00        		.string	""
 991 01b2 00        		.string	""
 992 01b3 7C42 0204 		.string	"|B\002\004\b\020\020"
 992      0810 1000 
 993 01bb 1010 00   		.string	"\020\020"
 994 01be 00        		.string	""
 995 01bf 00        		.string	""
 996 01c0 00        		.string	""
 997 01c1 3C62 4E92 		.string	"<bN\222\222\222\226\333D<"
 997      9292 96DB 
 997      443C 00
 998 01cc 00        		.string	""
 999 01cd 00        		.string	""
 1000 01ce 00        		.string	""
 1001 01cf 00        		.string	""
 1002 01d0 0818 1424 		.string	"\b\030\024$$B~B\201"
 1002      2442 7E42 
 1002      8100 
 1003 01da 00        		.string	""
 1004 01db 00        		.string	""
 1005 01dc 00        		.string	""
 1006 01dd 00        		.string	""
 1007 01de 7C42 4244 		.string	"|BBDxDBB|"
 1007      7844 4242 
 1007      7C00 
 1008 01e8 00        		.string	""
 1009 01e9 00        		.string	""
 1010 01ea 00        		.string	""
 1011 01eb 00        		.string	""
 1012 01ec 3E40 8080 		.string	">@\200\200\200\200\200@>"
 1012      8080 8040 
 1012      3E00 
 1013 01f6 00        		.string	""
 1014 01f7 00        		.string	""
 1015 01f8 00        		.string	""
 1016 01f9 00        		.string	""
 1017 01fa F884 8282 		.string	"\370\204\202\202\202\202\202\204\370"
 1017      8282 8284 
 1017      F800 
 1018 0204 00        		.string	""
 1019 0205 00        		.string	""
 1020 0206 00        		.string	""
 1021 0207 00        		.string	""
 1022 0208 7E40 4040 		.string	"~@@@|@@@~"
 1022      7C40 4040 
 1022      7E00 
 1023 0212 00        		.string	""
 1024 0213 00        		.string	""
 1025 0214 00        		.string	""
 1026 0215 00        		.string	""
 1027 0216 7E40 4040 		.string	"~@@@|@@@@"
 1027      7C40 4040 
 1027      4000 
 1028 0220 00        		.string	""
 1029 0221 00        		.string	""
 1030 0222 00        		.string	""
 1031 0223 00        		.string	""
 1032 0224 3E40 8080 		.string	">@\200\200\200\216\202B>"
 1032      808E 8242 
 1032      3E00 
 1033 022e 00        		.string	""
 1034 022f 00        		.string	""
 1035 0230 00        		.string	""
 1036 0231 00        		.string	""
 1037 0232 4242 4242 		.string	"BBBB~BBBB"
 1037      7E42 4242 
 1037      4200 
 1038 023c 00        		.string	""
 1039 023d 00        		.string	""
 1040 023e 00        		.string	""
 1041 023f 00        		.string	""
 1042 0240 7C10 1010 		.string	"|\020\020\020\020\020\020\020|"
 1042      1010 1010 
 1042      7C00 
 1043 024a 00        		.string	""
 1044 024b 00        		.string	""
 1045 024c 00        		.string	""
 1046 024d 00        		.string	""
 1047 024e 3C04 0404 		.string	"<\004\004\004\004\004\004\004x"
 1047      0404 0404 
 1047      7800 
 1048 0258 00        		.string	""
 1049 0259 00        		.string	""
 1050 025a 00        		.string	""
 1051 025b 00        		.string	""
 1052 025c 4244 4850 		.string	"BDHP`PHDB"
 1052      6050 4844 
 1052      4200 
 1053 0266 00        		.string	""
 1054 0267 00        		.string	""
 1055 0268 00        		.string	""
 1056 0269 00        		.string	""
 1057 026a 4040 4040 		.string	"@@@@@@@@~"
 1057      4040 4040 
 1057      7E00 
 1058 0274 00        		.string	""
 1059 0275 00        		.string	""
 1060 0276 00        		.string	""
 1061 0277 00        		.string	""
 1062 0278 C6C6 C6AA 		.string	"\306\306\306\252\252\252\222\202\202"
 1062      AAAA 9282 
 1062      8200 
 1063 0282 00        		.string	""
 1064 0283 00        		.string	""
 1065 0284 00        		.string	""
 1066 0285 00        		.string	""
 1067 0286 4262 6252 		.string	"BbbRRJJFB"
 1067      524A 4A46 
 1067      4200 
 1068 0290 00        		.string	""
 1069 0291 00        		.string	""
 1070 0292 00        		.string	""
 1071 0293 00        		.string	""
 1072 0294 3844 8282 		.string	"8D\202\202\202\202\202D8"
 1072      8282 8244 
 1072      3800 
 1073 029e 00        		.string	""
 1074 029f 00        		.string	""
 1075 02a0 00        		.string	""
 1076 02a1 00        		.string	""
 1077 02a2 7C42 4242 		.string	"|BBBFx@@@"
 1077      4678 4040 
 1077      4000 
 1078 02ac 00        		.string	""
 1079 02ad 00        		.string	""
 1080 02ae 00        		.string	""
 1081 02af 00        		.string	""
 1082 02b0 3844 8282 		.string	"8D\202\202\202\202\202D8\006\003"
 1082      8282 8244 
 1082      3806 0300 
 1083 02bc 00        		.string	""
 1084 02bd 00        		.string	""
 1085 02be 7844 4444 		.string	"xDDDxHLDB"
 1085      7848 4C44 
 1085      4200 
 1086 02c8 00        		.string	""
 1087 02c9 00        		.string	""
 1088 02ca 00        		.string	""
 1089 02cb 00        		.string	""
 1090 02cc 3E40 4060 		.string	">@@`\030\006\002\002|"
 1090      1806 0202 
 1090      7C00 
 1091 02d6 00        		.string	""
 1092 02d7 00        		.string	""
 1093 02d8 00        		.string	""
 1094 02d9 00        		.string	""
 1095 02da FE10 1010 		.string	"\376\020\020\020\020\020\020\020\020"
 1095      1010 1010 
 1095      1000 
 1096 02e4 00        		.string	""
 1097 02e5 00        		.string	""
 1098 02e6 00        		.string	""
 1099 02e7 00        		.string	""
 1100 02e8 4242 4242 		.string	"BBBBBBBB<"
 1100      4242 4242 
 1100      3C00 
 1101 02f2 00        		.string	""
 1102 02f3 00        		.string	""
 1103 02f4 00        		.string	""
 1104 02f5 00        		.string	""
 1105 02f6 8142 4244 		.string	"\201BBD$((\020\020"
 1105      2428 2810 
 1105      1000 
 1106 0300 00        		.string	""
 1107 0301 00        		.string	""
 1108 0302 00        		.string	""
 1109 0303 00        		.string	""
 1110 0304 8181 939A 		.string	"\201\201\223\232ZZff$"
 1110      5A5A 6666 
 1110      2400 
 1111 030e 00        		.string	""
 1112 030f 00        		.string	""
 1113 0310 00        		.string	""
 1114 0311 00        		.string	""
 1115 0312 8142 2418 		.string	"\201B$\030\030\030$B\201"
 1115      1818 2442 
 1115      8100 
 1116 031c 00        		.string	""
 1117 031d 00        		.string	""
 1118 031e 00        		.string	""
 1119 031f 00        		.string	""
 1120 0320 8142 4428 		.string	"\201BD(\030\020\020\020\020"
 1120      1810 1010 
 1120      1000 
 1121 032a 00        		.string	""
 1122 032b 00        		.string	""
 1123 032c 00        		.string	""
 1124 032d 00        		.string	""
 1125 032e FE02 0408 		.string	"\376\002\004\b\020 @\200\376"
 1125      1020 4080 
 1125      FE00 
 1126 0338 00        		.string	""
 1127 0339 00        		.string	""
 1128 033a 1E10 1010 		.string	"\036\020\020\020\020\020\020\020\020\020\020\020\036"
 1128      1010 1010 
 1128      1010 1010 
 1128      1E00 
 1129 0348 4020 2020 		.string	"@   \020\020\030\b\b\004\004\004\002"
 1129      1010 1808 
 1129      0804 0404 
 1129      0200 
 1130 0356 7808 0808 		.string	"x\b\b\b\b\b\b\b\b\b\b\bx"
 1130      0808 0808 
 1130      0808 0808 
 1130      7800 
 1131 0364 00        		.string	""
 1132 0365 0808 1814 		.string	"\b\b\030\024\024$\"B"
 1132      1424 2242 
 1132      00
 1133 036e 00        		.string	""
 1134 036f 00        		.string	""
 1135 0370 00        		.string	""
 1136 0371 00        		.string	""
 1137 0372 00        		.string	""
 1138 0373 00        		.string	""
 1139 0374 00        		.string	""
 1140 0375 00        		.string	""
 1141 0376 00        		.string	""
 1142 0377 00        		.string	""
 1143 0378 00        		.string	""
 1144 0379 00        		.string	""
 1145 037a 00        		.string	""
 1146 037b 00        		.string	""
 1147 037c 00        		.string	""
 1148 037d FF00      		.string	"\377"
 1149 037f 00        		.string	""
 1150 0380 0804 00   		.string	"\b\004"
 1151 0383 00        		.string	""
 1152 0384 00        		.string	""
 1153 0385 00        		.string	""
 1154 0386 00        		.string	""
 1155 0387 00        		.string	""
 1156 0388 00        		.string	""
 1157 0389 00        		.string	""
 1158 038a 00        		.string	""
 1159 038b 00        		.string	""
 1160 038c 00        		.string	""
 1161 038d 00        		.string	""
 1162 038e 00        		.string	""
 1163 038f 00        		.string	""
 1164 0390 00        		.string	""
 1165 0391 00        		.string	""
 1166 0392 3C02 023E 		.string	"<\002\002>BB?"
 1166      4242 3F00 
 1167 039a 00        		.string	""
 1168 039b 00        		.string	""
 1169 039c 4040 4040 		.string	"@@@@\\bBBBb\\"
 1169      5C62 4242 
 1169      4262 5C00 
 1170 03a8 00        		.string	""
 1171 03a9 00        		.string	""
 1172 03aa 00        		.string	""
 1173 03ab 00        		.string	""
 1174 03ac 00        		.string	""
 1175 03ad 00        		.string	""
 1176 03ae 1E20 4040 		.string	"\036 @@@ \036"
 1176      4020 1E00 
 1177 03b6 00        		.string	""
 1178 03b7 00        		.string	""
 1179 03b8 0202 0202 		.string	"\002\002\002\002:FBBBF:"
 1179      3A46 4242 
 1179      4246 3A00 
 1180 03c4 00        		.string	""
 1181 03c5 00        		.string	""
 1182 03c6 00        		.string	""
 1183 03c7 00        		.string	""
 1184 03c8 00        		.string	""
 1185 03c9 00        		.string	""
 1186 03ca 3C22 427E 		.string	"<\"B~@@>"
 1186      4040 3E00 
 1187 03d2 00        		.string	""
 1188 03d3 00        		.string	""
 1189 03d4 0E10 1010 		.string	"\016\020\020\020~\020\020\020\020\020\020"
 1189      7E10 1010 
 1189      1010 1000 
 1190 03e0 00        		.string	""
 1191 03e1 00        		.string	""
 1192 03e2 00        		.string	""
 1193 03e3 00        		.string	""
 1194 03e4 00        		.string	""
 1195 03e5 00        		.string	""
 1196 03e6 3E46 4242 		.string	">FBBBF:\002\002<@@@@\\bBBBBB"
 1196      4246 3A02 
 1196      023C 4040 
 1196      4040 5C62 
 1196      4242 4242 
 1197 03fc 00        		.string	""
 1198 03fd 00        		.string	""
 1199 03fe 1818 00   		.string	"\030\030"
 1200 0401 00        		.string	""
 1201 0402 7808 0808 		.string	"x\b\b\b\b\b\b"
 1201      0808 0800 
 1202 040a 00        		.string	""
 1203 040b 00        		.string	""
 1204 040c 0C0C 00   		.string	"\f\f"
 1205 040f 00        		.string	""
 1206 0410 3C04 0404 		.string	"<\004\004\004\004\004\004\004\004x@@@@DHP`XDB"
 1206      0404 0404 
 1206      0478 4040 
 1206      4040 4448 
 1206      5060 5844 
 1207 0426 00        		.string	""
 1208 0427 00        		.string	""
 1209 0428 7808 0808 		.string	"x\b\b\b\b\b\b\b\b\b\b"
 1209      0808 0808 
 1209      0808 0800 
 1210 0434 00        		.string	""
 1211 0435 00        		.string	""
 1212 0436 00        		.string	""
 1213 0437 00        		.string	""
 1214 0438 00        		.string	""
 1215 0439 00        		.string	""
 1216 043a B6DA 9292 		.string	"\266\332\222\222\222\222\222"
 1216      9292 9200 
 1217 0442 00        		.string	""
 1218 0443 00        		.string	""
 1219 0444 00        		.string	""
 1220 0445 00        		.string	""
 1221 0446 00        		.string	""
 1222 0447 00        		.string	""
 1223 0448 5C62 4242 		.string	"\\bBBBBB"
 1223      4242 4200 
 1224 0450 00        		.string	""
 1225 0451 00        		.string	""
 1226 0452 00        		.string	""
 1227 0453 00        		.string	""
 1228 0454 00        		.string	""
 1229 0455 00        		.string	""
 1230 0456 3844 8282 		.string	"8D\202\202\202D8"
 1230      8244 3800 
 1231 045e 00        		.string	""
 1232 045f 00        		.string	""
 1233 0460 00        		.string	""
 1234 0461 00        		.string	""
 1235 0462 00        		.string	""
 1236 0463 00        		.string	""
 1237 0464 5C62 4242 		.string	"\\bBBBb\\@@@"
 1237      4262 5C40 
 1237      4040 00
 1238 046f 00        		.string	""
 1239 0470 00        		.string	""
 1240 0471 00        		.string	""
 1241 0472 3A46 4242 		.string	":FBBBF:\002\002\002"
 1241      4246 3A02 
 1241      0202 00
 1242 047d 00        		.string	""
 1243 047e 00        		.string	""
 1244 047f 00        		.string	""
 1245 0480 5C64 4040 		.string	"\\d@@@@@"
 1245      4040 4000 
 1246 0488 00        		.string	""
 1247 0489 00        		.string	""
 1248 048a 00        		.string	""
 1249 048b 00        		.string	""
 1250 048c 00        		.string	""
 1251 048d 00        		.string	""
 1252 048e 3C40 6018 		.string	"<@`\030\004\004x"
 1252      0404 7800 
 1253 0496 00        		.string	""
 1254 0497 00        		.string	""
 1255 0498 00        		.string	""
 1256 0499 00        		.string	""
 1257 049a 2020 FE20 		.string	"  \376     \036"
 1257      2020 2020 
 1257      1E00 
 1258 04a4 00        		.string	""
 1259 04a5 00        		.string	""
 1260 04a6 00        		.string	""
 1261 04a7 00        		.string	""
 1262 04a8 00        		.string	""
 1263 04a9 00        		.string	""
 1264 04aa 4242 4242 		.string	"BBBBBF:"
 1264      4246 3A00 
 1265 04b2 00        		.string	""
 1266 04b3 00        		.string	""
 1267 04b4 00        		.string	""
 1268 04b5 00        		.string	""
 1269 04b6 00        		.string	""
 1270 04b7 00        		.string	""
 1271 04b8 8142 4244 		.string	"\201BBD((\020"
 1271      2828 1000 
 1272 04c0 00        		.string	""
 1273 04c1 00        		.string	""
 1274 04c2 00        		.string	""
 1275 04c3 00        		.string	""
 1276 04c4 00        		.string	""
 1277 04c5 00        		.string	""
 1278 04c6 8189 5A5A 		.string	"\201\211ZZf$$"
 1278      6624 2400 
 1279 04ce 00        		.string	""
 1280 04cf 00        		.string	""
 1281 04d0 00        		.string	""
 1282 04d1 00        		.string	""
 1283 04d2 00        		.string	""
 1284 04d3 00        		.string	""
 1285 04d4 4224 1818 		.string	"B$\030\030\030$B"
 1285      1824 4200 
 1286 04dc 00        		.string	""
 1287 04dd 00        		.string	""
 1288 04de 00        		.string	""
 1289 04df 00        		.string	""
 1290 04e0 00        		.string	""
 1291 04e1 00        		.string	""
 1292 04e2 8142 4224 		.string	"\201BB$$\030\030\0200\340"
 1292      2418 1810 
 1292      30E0 00
 1293 04ed 00        		.string	""
 1294 04ee 00        		.string	""
 1295 04ef 00        		.string	""
 1296 04f0 FE04 0810 		.string	"\376\004\b\020 @\376"
 1296      2040 FE00 
 1297 04f8 00        		.string	""
 1298 04f9 00        		.string	""
 1299               	.global	font8
 1302               	font8:
 1303 04fa 00        		.string	""
 1304 04fb 00        		.string	""
 1305 04fc 00        		.string	""
 1306 04fd 00        		.string	""
 1307 04fe 00        		.string	""
 1308 04ff 00        		.string	""
 1309 0500 00        		.string	""
 1310 0501 00        		.string	""
 1311 0502 3078 7830 		.string	"0xx00"
 1311      3000 
 1312 0508 3000      		.string	"0"
 1313 050a 6C6C 6C00 		.string	"lll"
 1314 050e 00        		.string	""
 1315 050f 00        		.string	""
 1316 0510 00        		.string	""
 1317 0511 00        		.string	""
 1318 0512 6C6C FE6C 		.string	"ll\376l\376ll"
 1318      FE6C 6C00 
 1319 051a 307C C078 		.string	"0|\300x\f\3700"
 1319      0CF8 3000 
 1320 0522 00        		.string	""
 1321 0523 C6CC 1830 		.string	"\306\314\0300f\306"
 1321      66C6 00
 1322 052a 386C 3876 		.string	"8l8v\334\314v"
 1322      DCCC 7600 
 1323 0532 6060 C000 		.string	"``\300"
 1324 0536 00        		.string	""
 1325 0537 00        		.string	""
 1326 0538 00        		.string	""
 1327 0539 00        		.string	""
 1328 053a 1830 6060 		.string	"\0300```0\030"
 1328      6030 1800 
 1329 0542 6030 1818 		.string	"`0\030\030\0300`"
 1329      1830 6000 
 1330 054a 386C 6C38 		.string	"8ll8"
 1330      00
 1331 054f 00        		.string	""
 1332 0550 00        		.string	""
 1333 0551 00        		.string	""
 1334 0552 00        		.string	""
 1335 0553 3030 FC30 		.string	"00\37400"
 1335      3000 
 1336 0559 00        		.string	""
 1337 055a 00        		.string	""
 1338 055b 00        		.string	""
 1339 055c 00        		.string	""
 1340 055d 00        		.string	""
 1341 055e 00        		.string	""
 1342 055f 7030 6000 		.string	"p0`"
 1343 0563 00        		.string	""
 1344 0564 00        		.string	""
 1345 0565 FC00      		.string	"\374"
 1346 0567 00        		.string	""
 1347 0568 00        		.string	""
 1348 0569 00        		.string	""
 1349 056a 00        		.string	""
 1350 056b 00        		.string	""
 1351 056c 00        		.string	""
 1352 056d 00        		.string	""
 1353 056e 00        		.string	""
 1354 056f 3030 00   		.string	"00"
 1355 0572 060C 1830 		.string	"\006\f\0300`\300\200"
 1355      60C0 8000 
 1356 057a 78CC DCFC 		.string	"x\314\334\374\354\314x"
 1356      ECCC 7800 
 1357 0582 30F0 3030 		.string	"0\3600000\374"
 1357      3030 FC00 
 1358 058a 78CC 0C38 		.string	"x\314\f8`\314\374"
 1358      60CC FC00 
 1359 0592 78CC 0C38 		.string	"x\314\f8\f\314x"
 1359      0CCC 7800 
 1360 059a 1C3C 6CCC 		.string	"\034<l\314\376\f\f"
 1360      FE0C 0C00 
 1361 05a2 FCC0 F80C 		.string	"\374\300\370\f\f\314x"
 1361      0CCC 7800 
 1362 05aa 3860 C0F8 		.string	"8`\300\370\314\314x"
 1362      CCCC 7800 
 1363 05b2 FCCC 0C18 		.string	"\374\314\f\0300``"
 1363      3060 6000 
 1364 05ba 78CC CC78 		.string	"x\314\314x\314\314x"
 1364      CCCC 7800 
 1365 05c2 78CC CC7C 		.string	"x\314\314|\f\030p"
 1365      0C18 7000 
 1366 05ca 00        		.string	""
 1367 05cb 00        		.string	""
 1368 05cc 3030 00   		.string	"00"
 1369 05cf 3030 00   		.string	"00"
 1370 05d2 00        		.string	""
 1371 05d3 00        		.string	""
 1372 05d4 3030 00   		.string	"00"
 1373 05d7 7030 6018 		.string	"p0`\0300`\300`0\030"
 1373      3060 C060 
 1373      3018 00
 1374 05e2 00        		.string	""
 1375 05e3 00        		.string	""
 1376 05e4 FC00      		.string	"\374"
 1377 05e6 FC00      		.string	"\374"
 1378 05e8 00        		.string	""
 1379 05e9 00        		.string	""
 1380 05ea 6030 180C 		.string	"`0\030\f\0300`"
 1380      1830 6000 
 1381 05f2 78CC 0C18 		.string	"x\314\f\0300"
 1381      3000 
 1382 05f8 3000      		.string	"0"
 1383 05fa 7CC6 DEDE 		.string	"|\306\336\336\336\300x"
 1383      DEC0 7800 
 1384 0602 3078 CCCC 		.string	"0x\314\314\374\314\314"
 1384      FCCC CC00 
 1385 060a FC66 667C 		.string	"\374ff|ff\374"
 1385      6666 FC00 
 1386 0612 3C66 C0C0 		.string	"<f\300\300\300f<"
 1386      C066 3C00 
 1387 061a FC6C 6666 		.string	"\374lfffl\374"
 1387      666C FC00 
 1388 0622 FE62 6878 		.string	"\376bhxhb\376"
 1388      6862 FE00 
 1389 062a FE62 6878 		.string	"\376bhxh`\360"
 1389      6860 F000 
 1390 0632 3C66 C0C0 		.string	"<f\300\300\316f>"
 1390      CE66 3E00 
 1391 063a CCCC CCFC 		.string	"\314\314\314\374\314\314\314"
 1391      CCCC CC00 
 1392 0642 7830 3030 		.string	"x00000x"
 1392      3030 7800 
 1393 064a 1E0C 0C0C 		.string	"\036\f\f\f\314\314x"
 1393      CCCC 7800 
 1394 0652 E666 6C78 		.string	"\346flxlf\346"
 1394      6C66 E600 
 1395 065a F060 6060 		.string	"\360```bf\376"
 1395      6266 FE00 
 1396 0662 C6EE FED6 		.string	"\306\356\376\326\306\306\306"
 1396      C6C6 C600 
 1397 066a C6E6 F6DE 		.string	"\306\346\366\336\316\306\306"
 1397      CEC6 C600 
 1398 0672 386C C6C6 		.string	"8l\306\306\306l8"
 1398      C66C 3800 
 1399 067a FC66 667C 		.string	"\374ff|``\360"
 1399      6060 F000 
 1400 0682 78CC CCCC 		.string	"x\314\314\314\334x\034"
 1400      DC78 1C00 
 1401 068a FC66 667C 		.string	"\374ff|xl\346"
 1401      786C E600 
 1402 0692 78CC E038 		.string	"x\314\3408\034\314x"
 1402      1CCC 7800 
 1403 069a FCB4 3030 		.string	"\374\2640000x"
 1403      3030 7800 
 1404 06a2 CCCC CCCC 		.string	"\314\314\314\314\314\314\374"
 1404      CCCC FC00 
 1405 06aa CCCC CCCC 		.string	"\314\314\314\314\314x0"
 1405      CC78 3000 
 1406 06b2 C6C6 C6D6 		.string	"\306\306\306\326\376\356\306"
 1406      FEEE C600 
 1407 06ba C6C6 6C38 		.string	"\306\306l8l\306\306"
 1407      6CC6 C600 
 1408 06c2 CCCC CC78 		.string	"\314\314\314x00x"
 1408      3030 7800 
 1409 06ca FECC 9830 		.string	"\376\314\2300b\306\376"
 1409      62C6 FE00 
 1410 06d2 7860 6060 		.string	"x`````x"
 1410      6060 7800 
 1411 06da C060 3018 		.string	"\300`0\030\f\006\002"
 1411      0C06 0200 
 1412 06e2 7818 1818 		.string	"x\030\030\030\030\030x"
 1412      1818 7800 
 1413 06ea 1038 6CC6 		.string	"\0208l\306"
 1413      00
 1414 06ef 00        		.string	""
 1415 06f0 00        		.string	""
 1416 06f1 00        		.string	""
 1417 06f2 00        		.string	""
 1418 06f3 00        		.string	""
 1419 06f4 00        		.string	""
 1420 06f5 00        		.string	""
 1421 06f6 00        		.string	""
 1422 06f7 00        		.string	""
 1423 06f8 00        		.string	""
 1424 06f9 FF30 3018 		.string	"\37700\030"
 1424      00
 1425 06fe 00        		.string	""
 1426 06ff 00        		.string	""
 1427 0700 00        		.string	""
 1428 0701 00        		.string	""
 1429 0702 00        		.string	""
 1430 0703 00        		.string	""
 1431 0704 780C 7CCC 		.string	"x\f|\314v"
 1431      7600 
 1432 070a E060 7C66 		.string	"\340`|fff\274"
 1432      6666 BC00 
 1433 0712 00        		.string	""
 1434 0713 00        		.string	""
 1435 0714 78CC C0CC 		.string	"x\314\300\314x"
 1435      7800 
 1436 071a 1C0C 0C7C 		.string	"\034\f\f|\314\314v"
 1436      CCCC 7600 
 1437 0722 00        		.string	""
 1438 0723 00        		.string	""
 1439 0724 78CC FCC0 		.string	"x\314\374\300x"
 1439      7800 
 1440 072a 386C 60F0 		.string	"8l`\360``\360"
 1440      6060 F000 
 1441 0732 00        		.string	""
 1442 0733 00        		.string	""
 1443 0734 76CC CC7C 		.string	"v\314\314|\f\370\340`lvff\346"
 1443      0CF8 E060 
 1443      6C76 6666 
 1443      E600 
 1444 0742 3000      		.string	"0"
 1445 0744 7030 3030 		.string	"p000x"
 1445      7800 
 1446 074a 1800      		.string	"\030"
 1447 074c 7818 1818 		.string	"x\030\030\030\330p\340`flxl\346"
 1447      D870 E060 
 1447      666C 786C 
 1447      E600 
 1448 075a 7030 3030 		.string	"p00000x"
 1448      3030 7800 
 1449 0762 00        		.string	""
 1450 0763 00        		.string	""
 1451 0764 ECFE D6C6 		.string	"\354\376\326\306\306"
 1451      C600 
 1452 076a 00        		.string	""
 1453 076b 00        		.string	""
 1454 076c F8CC CCCC 		.string	"\370\314\314\314\314"
 1454      CC00 
 1455 0772 00        		.string	""
 1456 0773 00        		.string	""
 1457 0774 78CC CCCC 		.string	"x\314\314\314x"
 1457      7800 
 1458 077a 00        		.string	""
 1459 077b 00        		.string	""
 1460 077c DC66 667C 		.string	"\334ff|`\360"
 1460      60F0 00
 1461 0783 00        		.string	""
 1462 0784 76CC CC7C 		.string	"v\314\314|\f\036"
 1462      0C1E 00
 1463 078b 00        		.string	""
 1464 078c D86C 6C60 		.string	"\330ll`\360"
 1464      F000 
 1465 0792 00        		.string	""
 1466 0793 00        		.string	""
 1467 0794 7CC0 780C 		.string	"|\300x\f\370"
 1467      F800 
 1468 079a 1030 7C30 		.string	"\0200|004\030"
 1468      3034 1800 
 1469 07a2 00        		.string	""
 1470 07a3 00        		.string	""
 1471 07a4 CCCC CCCC 		.string	"\314\314\314\314v"
 1471      7600 
 1472 07aa 00        		.string	""
 1473 07ab 00        		.string	""
 1474 07ac CCCC CC78 		.string	"\314\314\314x0"
 1474      3000 
 1475 07b2 00        		.string	""
 1476 07b3 00        		.string	""
 1477 07b4 C6C6 D6FE 		.string	"\306\306\326\376l"
 1477      6C00 
 1478 07ba 00        		.string	""
 1479 07bb 00        		.string	""
 1480 07bc C66C 386C 		.string	"\306l8l\306"
 1480      C600 
 1481 07c2 00        		.string	""
 1482 07c3 00        		.string	""
 1483 07c4 CCCC CC7C 		.string	"\314\314\314|\f\370"
 1483      0CF8 00
 1484 07cb 00        		.string	""
 1485 07cc FC98 3064 		.string	"\374\2300d\374"
 1485      FC00 
 1486               		.text
 1487               	.Letext0:
 1488               		.file 2 "/usr/avr/include/stdint.h"
 1489               		.file 3 "fonts.h"
 1490               		.file 4 "spi.h"
 1491               		.file 5 "ssd1306.h"
 1492               		.file 6 "grn_TWI.h"
 1493               		.file 7 "grn_sht21.h"
 1494               		.file 8 "/usr/avr/include/stdio.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccUkE6Rc.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccUkE6Rc.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccUkE6Rc.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccUkE6Rc.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccUkE6Rc.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccUkE6Rc.s:36     .text.startup:0000000000000000 main
     /tmp/ccUkE6Rc.s:771    .bss:000000000000002f ms10
     /tmp/ccUkE6Rc.s:766    .bss:000000000000002e ms100
     /tmp/ccUkE6Rc.s:761    .bss:000000000000002d sec
     /tmp/ccUkE6Rc.s:756    .bss:000000000000002c min
     /tmp/ccUkE6Rc.s:751    .bss:000000000000002b entprell
     /tmp/ccUkE6Rc.s:746    .bss:000000000000002a screentoggle
     /tmp/ccUkE6Rc.s:741    .bss:0000000000000029 toggle
     /tmp/ccUkE6Rc.s:736    .bss:0000000000000028 toggle_alt
     /tmp/ccUkE6Rc.s:776    .bss:0000000000000030 state
     /tmp/ccUkE6Rc.s:731    .bss:0000000000000014 buffer
     /tmp/ccUkE6Rc.s:791    .bss:0000000000000035 temp
     /tmp/ccUkE6Rc.s:781    .bss:0000000000000031 hum
     /tmp/ccUkE6Rc.s:726    .bss:0000000000000000 buff
     /tmp/ccUkE6Rc.s:520    .text:0000000000000000 __vector_11
                            *ABS*:0000000000000003 __gcc_isr.n_pushed.001
     /tmp/ccUkE6Rc.s:632    .text:000000000000009e vor_komma
     /tmp/ccUkE6Rc.s:681    .text:00000000000000c6 nach_komma
     /tmp/ccUkE6Rc.s:786    .bss:0000000000000033 test
     /tmp/ccUkE6Rc.s:797    .progmem.data:0000000000000000 font14
     /tmp/ccUkE6Rc.s:1302   .progmem.data:00000000000004fa font8

UNDEFINED SYMBOLS
SPI_MasterInit
Display_Init
Display_Clear
Set_Page_Address
Set_Column_Address
TWIInit
sht21_init
Write_String
sht21_measure
__udivmodsi4
sprintf
__do_copy_data
__do_clear_bss
