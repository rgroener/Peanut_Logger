
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000056  00800100  00001bf8  00001c8c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001bf8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000037  00800156  00800156  00001ce2  2**0
                  ALLOC
  3 .comment      00000024  00000000  00000000  00001ce2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d08  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 000000a8  00000000  00000000  00001d48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   000024d3  00000000  00000000  00001df0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000ef0  00000000  00000000  000042c3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   000024c5  00000000  00000000  000051b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  00000300  00000000  00000000  00007678  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    0000072a  00000000  00000000  00007978  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_loc    000018d7  00000000  00000000  000080a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges 00000200  00000000  00000000  00009979  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 43 04 	jmp	0x886	; 0x886 <__ctors_end>
       4:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
       8:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
       c:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      10:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      14:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      18:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      1c:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      20:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      24:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      28:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      2c:	0c 94 62 04 	jmp	0x8c4	; 0x8c4 <__vector_11>
      30:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      34:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      38:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      3c:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      40:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      44:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      48:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      4c:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      50:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      54:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      58:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      5c:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      60:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      64:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      68:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      6c:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      70:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      74:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      78:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      7c:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      80:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      84:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      88:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      8c:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      90:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      94:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      98:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      9c:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      a0:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      a4:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      a8:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      ac:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>
      b0:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__bad_interrupt>

000000b4 <font14>:
	...
      c0:	00 00 00 10 10 10 10 10 10 10 00 10 10 00 00 00     ................
      d0:	24 24 24 24 00 00 00 00 00 00 00 00 00 00 00 09     $$$$............
      e0:	09 12 7f 12 24 ff 24 48 48 00 00 00 10 3c 50 50     ....$.$HH....<PP
      f0:	50 30 18 14 14 14 78 10 00 00 00 61 92 94 94 68     P0....x....a...h
     100:	16 29 29 49 86 00 00 00 00 18 24 24 28 30 d1 89     .))I......$$(0..
     110:	8e c6 7f 00 00 00 10 10 10 10 00 00 00 00 00 00     ................
     120:	00 00 00 00 06 0c 10 10 20 20 20 20 20 10 10 0c     ........     ...
     130:	06 00 60 30 08 08 04 04 04 04 04 08 08 30 60 00     ..`0.........0`.
     140:	00 10 28 10 00 00 00 00 00 00 00 00 00 00 00 00     ..(.............
     150:	00 00 10 10 10 fe 10 10 10 00 00 00 00 00 00 00     ................
     160:	00 00 00 00 00 18 18 08 10 00 00 00 00 00 00 00     ................
     170:	7e 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ~...............
     180:	00 18 18 00 00 00 02 04 04 04 08 08 18 10 10 20     ............... 
     190:	20 20 40 00 00 18 24 42 42 42 42 42 42 24 18 00       @...$BBBBBB$..
     1a0:	00 00 00 08 78 08 08 08 08 08 08 08 7f 00 00 00     ....x...........
     1b0:	00 78 04 04 04 08 08 10 20 40 7c 00 00 00 00 3c     .x...... @|....<
     1c0:	02 02 02 1c 02 02 02 02 3c 00 00 00 00 04 0c 14     ........<.......
     1d0:	14 24 44 7e 04 04 04 00 00 00 00 3e 20 20 20 38     .$D~.......>   8
     1e0:	06 02 02 02 3c 00 00 00 00 1c 20 40 40 5c 62 42     ....<..... @@\bB
     1f0:	42 22 1c 00 00 00 00 7e 02 04 04 08 10 10 10 20     B".....~....... 
     200:	20 00 00 00 00 3c 42 42 44 38 24 42 42 42 3c 00      ....<BBD8$BBB<.
     210:	00 00 00 38 44 42 42 46 3a 02 02 04 38 00 00 00     ...8DBBF:...8...
     220:	00 00 00 00 18 18 00 00 00 18 18 00 00 00 00 00     ................
     230:	00 00 18 18 00 00 00 18 18 08 10 00 00 00 00 00     ................
     240:	02 0c 10 60 10 0c 02 00 00 00 00 00 00 00 00 7e     ...`...........~
     250:	00 00 7e 00 00 00 00 00 00 00 00 00 40 30 08 06     ..~.........@0..
     260:	08 30 40 00 00 00 00 7c 42 02 04 08 10 10 00 10     .0@....|B.......
     270:	10 00 00 00 00 3c 62 4e 92 92 92 96 db 44 3c 00     .....<bN.....D<.
     280:	00 00 00 00 08 18 14 24 24 42 7e 42 81 00 00 00     .......$$B~B....
     290:	00 00 7c 42 42 44 78 44 42 42 7c 00 00 00 00 00     ..|BBDxDBB|.....
     2a0:	3e 40 80 80 80 80 80 40 3e 00 00 00 00 00 f8 84     >@.....@>.......
     2b0:	82 82 82 82 82 84 f8 00 00 00 00 00 7e 40 40 40     ............~@@@
     2c0:	7c 40 40 40 7e 00 00 00 00 00 7e 40 40 40 7c 40     |@@@~.....~@@@|@
     2d0:	40 40 40 00 00 00 00 00 3e 40 80 80 80 8e 82 42     @@@.....>@.....B
     2e0:	3e 00 00 00 00 00 42 42 42 42 7e 42 42 42 42 00     >.....BBBB~BBBB.
     2f0:	00 00 00 00 7c 10 10 10 10 10 10 10 7c 00 00 00     ....|.......|...
     300:	00 00 3c 04 04 04 04 04 04 04 78 00 00 00 00 00     ..<.......x.....
     310:	42 44 48 50 60 50 48 44 42 00 00 00 00 00 40 40     BDHP`PHDB.....@@
     320:	40 40 40 40 40 40 7e 00 00 00 00 00 c6 c6 c6 aa     @@@@@@~.........
     330:	aa aa 92 82 82 00 00 00 00 00 42 62 62 52 52 4a     ..........BbbRRJ
     340:	4a 46 42 00 00 00 00 00 38 44 82 82 82 82 82 44     JFB.....8D.....D
     350:	38 00 00 00 00 00 7c 42 42 42 46 78 40 40 40 00     8.....|BBBFx@@@.
     360:	00 00 00 00 38 44 82 82 82 82 82 44 38 06 03 00     ....8D.....D8...
     370:	00 00 78 44 44 44 78 48 4c 44 42 00 00 00 00 00     ..xDDDxHLDB.....
     380:	3e 40 40 60 18 06 02 02 7c 00 00 00 00 00 fe 10     >@@`....|.......
     390:	10 10 10 10 10 10 10 00 00 00 00 00 42 42 42 42     ............BBBB
     3a0:	42 42 42 42 3c 00 00 00 00 00 81 42 42 44 24 28     BBBB<......BBD$(
     3b0:	28 10 10 00 00 00 00 00 81 81 93 9a 5a 5a 66 66     (...........ZZff
     3c0:	24 00 00 00 00 00 81 42 24 18 18 18 24 42 81 00     $......B$...$B..
     3d0:	00 00 00 00 81 42 44 28 18 10 10 10 10 00 00 00     .....BD(........
     3e0:	00 00 fe 02 04 08 10 20 40 80 fe 00 00 00 1e 10     ....... @.......
     3f0:	10 10 10 10 10 10 10 10 10 10 1e 00 40 20 20 20     ............@   
     400:	10 10 18 08 08 04 04 04 02 00 78 08 08 08 08 08     ..........x.....
     410:	08 08 08 08 08 08 78 00 00 08 08 18 14 14 24 22     ......x.......$"
     420:	42 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     B...............
     430:	00 ff 00 00 08 04 00 00 00 00 00 00 00 00 00 00     ................
     440:	00 00 00 00 00 00 3c 02 02 3e 42 42 3f 00 00 00     ......<..>BB?...
     450:	40 40 40 40 5c 62 42 42 42 62 5c 00 00 00 00 00     @@@@\bBBBb\.....
     460:	00 00 1e 20 40 40 40 20 1e 00 00 00 02 02 02 02     ... @@@ ........
     470:	3a 46 42 42 42 46 3a 00 00 00 00 00 00 00 3c 22     :FBBBF:.......<"
     480:	42 7e 40 40 3e 00 00 00 0e 10 10 10 7e 10 10 10     B~@@>.......~...
     490:	10 10 10 00 00 00 00 00 00 00 3e 46 42 42 42 46     ..........>FBBBF
     4a0:	3a 02 02 3c 40 40 40 40 5c 62 42 42 42 42 42 00     :..<@@@@\bBBBBB.
     4b0:	00 00 18 18 00 00 78 08 08 08 08 08 08 00 00 00     ......x.........
     4c0:	0c 0c 00 00 3c 04 04 04 04 04 04 04 04 78 40 40     ....<........x@@
     4d0:	40 40 44 48 50 60 58 44 42 00 00 00 78 08 08 08     @@DHP`XDB...x...
     4e0:	08 08 08 08 08 08 08 00 00 00 00 00 00 00 b6 da     ................
     4f0:	92 92 92 92 92 00 00 00 00 00 00 00 5c 62 42 42     ............\bBB
     500:	42 42 42 00 00 00 00 00 00 00 38 44 82 82 82 44     BBB.......8D...D
     510:	38 00 00 00 00 00 00 00 5c 62 42 42 42 62 5c 40     8.......\bBBBb\@
     520:	40 40 00 00 00 00 3a 46 42 42 42 46 3a 02 02 02     @@....:FBBBF:...
     530:	00 00 00 00 5c 64 40 40 40 40 40 00 00 00 00 00     ....\d@@@@@.....
     540:	00 00 3c 40 60 18 04 04 78 00 00 00 00 00 20 20     ..<@`...x.....  
     550:	fe 20 20 20 20 20 1e 00 00 00 00 00 00 00 42 42     .     ........BB
     560:	42 42 42 46 3a 00 00 00 00 00 00 00 81 42 42 44     BBBF:........BBD
     570:	28 28 10 00 00 00 00 00 00 00 81 89 5a 5a 66 24     ((..........ZZf$
     580:	24 00 00 00 00 00 00 00 42 24 18 18 18 24 42 00     $.......B$...$B.
     590:	00 00 00 00 00 00 81 42 42 24 24 18 18 10 30 e0     .......BB$$...0.
     5a0:	00 00 00 00 fe 04 08 10 20 40 fe 00 00 00           ........ @....

000005ae <font8>:
	...
     5b6:	30 78 78 30 30 00 30 00 6c 6c 6c 00 00 00 00 00     0xx00.0.lll.....
     5c6:	6c 6c fe 6c fe 6c 6c 00 30 7c c0 78 0c f8 30 00     ll.l.ll.0|.x..0.
     5d6:	00 c6 cc 18 30 66 c6 00 38 6c 38 76 dc cc 76 00     ....0f..8l8v..v.
     5e6:	60 60 c0 00 00 00 00 00 18 30 60 60 60 30 18 00     ``.......0```0..
     5f6:	60 30 18 18 18 30 60 00 38 6c 6c 38 00 00 00 00     `0...0`.8ll8....
     606:	00 30 30 fc 30 30 00 00 00 00 00 00 00 70 30 60     .00.00.......p0`
     616:	00 00 00 fc 00 00 00 00 00 00 00 00 00 30 30 00     .............00.
     626:	06 0c 18 30 60 c0 80 00 78 cc dc fc ec cc 78 00     ...0`...x.....x.
     636:	30 f0 30 30 30 30 fc 00 78 cc 0c 38 60 cc fc 00     0.0000..x..8`...
     646:	78 cc 0c 38 0c cc 78 00 1c 3c 6c cc fe 0c 0c 00     x..8..x..<l.....
     656:	fc c0 f8 0c 0c cc 78 00 38 60 c0 f8 cc cc 78 00     ......x.8`....x.
     666:	fc cc 0c 18 30 60 60 00 78 cc cc 78 cc cc 78 00     ....0``.x..x..x.
     676:	78 cc cc 7c 0c 18 70 00 00 00 30 30 00 30 30 00     x..|..p...00.00.
     686:	00 00 30 30 00 70 30 60 18 30 60 c0 60 30 18 00     ..00.p0`.0`.`0..
     696:	00 00 fc 00 fc 00 00 00 60 30 18 0c 18 30 60 00     ........`0...0`.
     6a6:	78 cc 0c 18 30 00 30 00 7c c6 de de de c0 78 00     x...0.0.|.....x.
     6b6:	30 78 cc cc fc cc cc 00 fc 66 66 7c 66 66 fc 00     0x.......ff|ff..
     6c6:	3c 66 c0 c0 c0 66 3c 00 fc 6c 66 66 66 6c fc 00     <f...f<..lfffl..
     6d6:	fe 62 68 78 68 62 fe 00 fe 62 68 78 68 60 f0 00     .bhxhb...bhxh`..
     6e6:	3c 66 c0 c0 ce 66 3e 00 cc cc cc fc cc cc cc 00     <f...f>.........
     6f6:	78 30 30 30 30 30 78 00 1e 0c 0c 0c cc cc 78 00     x00000x.......x.
     706:	e6 66 6c 78 6c 66 e6 00 f0 60 60 60 62 66 fe 00     .flxlf...```bf..
     716:	c6 ee fe d6 c6 c6 c6 00 c6 e6 f6 de ce c6 c6 00     ................
     726:	38 6c c6 c6 c6 6c 38 00 fc 66 66 7c 60 60 f0 00     8l...l8..ff|``..
     736:	78 cc cc cc dc 78 1c 00 fc 66 66 7c 78 6c e6 00     x....x...ff|xl..
     746:	78 cc e0 38 1c cc 78 00 fc b4 30 30 30 30 78 00     x..8..x...0000x.
     756:	cc cc cc cc cc cc fc 00 cc cc cc cc cc 78 30 00     .............x0.
     766:	c6 c6 c6 d6 fe ee c6 00 c6 c6 6c 38 6c c6 c6 00     ..........l8l...
     776:	cc cc cc 78 30 30 78 00 fe cc 98 30 62 c6 fe 00     ...x00x....0b...
     786:	78 60 60 60 60 60 78 00 c0 60 30 18 0c 06 02 00     x`````x..`0.....
     796:	78 18 18 18 18 18 78 00 10 38 6c c6 00 00 00 00     x.....x..8l.....
     7a6:	00 00 00 00 00 00 00 ff 30 30 18 00 00 00 00 00     ........00......
     7b6:	00 00 78 0c 7c cc 76 00 e0 60 7c 66 66 66 bc 00     ..x.|.v..`|fff..
     7c6:	00 00 78 cc c0 cc 78 00 1c 0c 0c 7c cc cc 76 00     ..x...x....|..v.
     7d6:	00 00 78 cc fc c0 78 00 38 6c 60 f0 60 60 f0 00     ..x...x.8l`.``..
     7e6:	00 00 76 cc cc 7c 0c f8 e0 60 6c 76 66 66 e6 00     ..v..|...`lvff..
     7f6:	30 00 70 30 30 30 78 00 18 00 78 18 18 18 d8 70     0.p000x...x....p
     806:	e0 60 66 6c 78 6c e6 00 70 30 30 30 30 30 78 00     .`flxl..p00000x.
     816:	00 00 ec fe d6 c6 c6 00 00 00 f8 cc cc cc cc 00     ................
     826:	00 00 78 cc cc cc 78 00 00 00 dc 66 66 7c 60 f0     ..x...x....ff|`.
     836:	00 00 76 cc cc 7c 0c 1e 00 00 d8 6c 6c 60 f0 00     ..v..|.....ll`..
     846:	00 00 7c c0 78 0c f8 00 10 30 7c 30 30 34 18 00     ..|.x....0|004..
     856:	00 00 cc cc cc cc 76 00 00 00 cc cc cc 78 30 00     ......v......x0.
     866:	00 00 c6 c6 d6 fe 6c 00 00 00 c6 6c 38 6c c6 00     ......l....l8l..
     876:	00 00 cc cc cc 7c 0c f8 00 00 fc 98 30 64 fc 00     .....|......0d..

00000886 <__ctors_end>:
     886:	11 24       	eor	r1, r1
     888:	1f be       	out	0x3f, r1	; 63
     88a:	cf ef       	ldi	r28, 0xFF	; 255
     88c:	d8 e0       	ldi	r29, 0x08	; 8
     88e:	de bf       	out	0x3e, r29	; 62
     890:	cd bf       	out	0x3d, r28	; 61

00000892 <__do_copy_data>:
     892:	11 e0       	ldi	r17, 0x01	; 1
     894:	a0 e0       	ldi	r26, 0x00	; 0
     896:	b1 e0       	ldi	r27, 0x01	; 1
     898:	e8 ef       	ldi	r30, 0xF8	; 248
     89a:	fb e1       	ldi	r31, 0x1B	; 27
     89c:	02 c0       	rjmp	.+4      	; 0x8a2 <__do_copy_data+0x10>
     89e:	05 90       	lpm	r0, Z+
     8a0:	0d 92       	st	X+, r0
     8a2:	a6 35       	cpi	r26, 0x56	; 86
     8a4:	b1 07       	cpc	r27, r17
     8a6:	d9 f7       	brne	.-10     	; 0x89e <__do_copy_data+0xc>

000008a8 <__do_clear_bss>:
     8a8:	21 e0       	ldi	r18, 0x01	; 1
     8aa:	a6 e5       	ldi	r26, 0x56	; 86
     8ac:	b1 e0       	ldi	r27, 0x01	; 1
     8ae:	01 c0       	rjmp	.+2      	; 0x8b2 <.do_clear_bss_start>

000008b0 <.do_clear_bss_loop>:
     8b0:	1d 92       	st	X+, r1

000008b2 <.do_clear_bss_start>:
     8b2:	ad 38       	cpi	r26, 0x8D	; 141
     8b4:	b2 07       	cpc	r27, r18
     8b6:	e1 f7       	brne	.-8      	; 0x8b0 <.do_clear_bss_loop>
     8b8:	0e 94 62 08 	call	0x10c4	; 0x10c4 <main>
     8bc:	0c 94 fa 0d 	jmp	0x1bf4	; 0x1bf4 <_exit>

000008c0 <__bad_interrupt>:
     8c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000008c4 <__vector_11>:
	} //end while
}//end of main


ISR (TIMER1_COMPA_vect)
{
     8c4:	1f 92       	push	r1
     8c6:	1f b6       	in	r1, 0x3f	; 63
     8c8:	1f 92       	push	r1
     8ca:	11 24       	eor	r1, r1
     8cc:	8f 93       	push	r24
	
		ms10++;
     8ce:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <ms10>
     8d2:	8f 5f       	subi	r24, 0xFF	; 255
     8d4:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <ms10>
		if(entprell)entprell--;
     8d8:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <entprell>
     8dc:	88 23       	and	r24, r24
     8de:	29 f0       	breq	.+10     	; 0x8ea <__vector_11+0x26>
     8e0:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <entprell>
     8e4:	81 50       	subi	r24, 0x01	; 1
     8e6:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <entprell>
			
	if(ms10==10)	//100ms
     8ea:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <ms10>
     8ee:	8a 30       	cpi	r24, 0x0A	; 10
     8f0:	39 f4       	brne	.+14     	; 0x900 <__stack+0x1>
	{
		ms10=0;
     8f2:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <ms10>
		ms100++;
     8f6:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <ms100>
     8fa:	8f 5f       	subi	r24, 0xFF	; 255
     8fc:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <ms100>
	
		
	}
    if(ms100==10)	//sec
     900:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <ms100>
     904:	8a 30       	cpi	r24, 0x0A	; 10
     906:	81 f0       	breq	.+32     	; 0x928 <__stack+0x29>
			{
				toggle = 1;
			}else toggle =0;
		}
	}
	if(sec==60)	//Minute
     908:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <sec>
     90c:	8c 33       	cpi	r24, 0x3C	; 60
     90e:	39 f4       	brne	.+14     	; 0x91e <__stack+0x1f>
	{
		sec=0;
     910:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <sec>
		min++;
     914:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <min>
     918:	8f 5f       	subi	r24, 0xFF	; 255
     91a:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <min>
	}
}
     91e:	8f 91       	pop	r24
     920:	1f 90       	pop	r1
     922:	1f be       	out	0x3f, r1	; 63
     924:	1f 90       	pop	r1
     926:	18 95       	reti
		ms100=0;
     928:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <ms100>
		sec++;
     92c:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <sec>
     930:	8f 5f       	subi	r24, 0xFF	; 255
     932:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <sec>
		screentoggle++;
     936:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <screentoggle>
     93a:	8f 5f       	subi	r24, 0xFF	; 255
     93c:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <screentoggle>
		if(screentoggle==TOGGLEMAX)
     940:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <screentoggle>
     944:	84 30       	cpi	r24, 0x04	; 4
     946:	01 f7       	brne	.-64     	; 0x908 <__stack+0x9>
			screentoggle=0;
     948:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <screentoggle>
			if(toggle==0)
     94c:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <toggle>
     950:	81 11       	cpse	r24, r1
     952:	04 c0       	rjmp	.+8      	; 0x95c <__stack+0x5d>
				toggle = 1;
     954:	81 e0       	ldi	r24, 0x01	; 1
     956:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <toggle>
     95a:	d6 cf       	rjmp	.-84     	; 0x908 <__stack+0x9>
			}else toggle =0;
     95c:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <toggle>
     960:	d3 cf       	rjmp	.-90     	; 0x908 <__stack+0x9>

00000962 <vor_komma>:
uint16_t vor_komma(uint32_t value)
{
     962:	cf 93       	push	r28
     964:	df 93       	push	r29
     966:	00 d0       	rcall	.+0      	; 0x968 <vor_komma+0x6>
     968:	00 d0       	rcall	.+0      	; 0x96a <vor_komma+0x8>
     96a:	cd b7       	in	r28, 0x3d	; 61
     96c:	de b7       	in	r29, 0x3e	; 62
	return value/100;
     96e:	24 e6       	ldi	r18, 0x64	; 100
     970:	30 e0       	ldi	r19, 0x00	; 0
     972:	40 e0       	ldi	r20, 0x00	; 0
     974:	50 e0       	ldi	r21, 0x00	; 0
     976:	0e 94 07 0b 	call	0x160e	; 0x160e <__udivmodsi4>
	
}
     97a:	c9 01       	movw	r24, r18
     97c:	0f 90       	pop	r0
     97e:	0f 90       	pop	r0
     980:	0f 90       	pop	r0
     982:	0f 90       	pop	r0
     984:	df 91       	pop	r29
     986:	cf 91       	pop	r28
     988:	08 95       	ret

0000098a <nach_komma>:
uint8_t nach_komma(uint32_t value)
{
     98a:	cf 93       	push	r28
     98c:	c6 2f       	mov	r28, r22
	uint8_t temp;
	temp = value/100;
     98e:	24 e6       	ldi	r18, 0x64	; 100
     990:	30 e0       	ldi	r19, 0x00	; 0
     992:	40 e0       	ldi	r20, 0x00	; 0
     994:	50 e0       	ldi	r21, 0x00	; 0
     996:	0e 94 07 0b 	call	0x160e	; 0x160e <__udivmodsi4>
	return value-(temp*100);
	
	
}
     99a:	8c 2f       	mov	r24, r28
     99c:	94 e6       	ldi	r25, 0x64	; 100
     99e:	29 9f       	mul	r18, r25
     9a0:	80 19       	sub	r24, r0
     9a2:	11 24       	eor	r1, r1
     9a4:	cf 91       	pop	r28
     9a6:	08 95       	ret

000009a8 <TWIInit>:
 */

uint8_t TWIInit(void)
{
 /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  PRR0 =0x00;
     9a8:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__TEXT_REGION_LENGTH__+0x7f8064>
 // TWSR |= (1<<TWPS0);                          /* no prescaler */
 
  
  //set sck to 400khz
	TWSR0 = 0x02;
     9ac:	82 e0       	ldi	r24, 0x02	; 2
     9ae:	80 93 b9 00 	sts	0x00B9, r24	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	//TWBR = 0x0C;
	 TWBR0 = ((8000000/400000)-16)/2;  /* (F_CPU / F_TWI) must be > 10 for stable operation */
     9b2:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
	//enable TWI
	TWCR0 = (1<<TWEN);
     9b6:	84 e0       	ldi	r24, 0x04	; 4
     9b8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	return 0;
}
     9bc:	80 e0       	ldi	r24, 0x00	; 0
     9be:	08 95       	ret

000009c0 <TWIStart>:
 
uint8_t TWIStart(void)
{
	TWCR0 = ((1<<TWINT) | (1<<TWSTA) | (1<<TWEN));
     9c0:	84 ea       	ldi	r24, 0xA4	; 164
     9c2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while((TWCR0 & (1<<TWINT)) == 0);
     9c6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     9ca:	87 ff       	sbrs	r24, 7
     9cc:	fc cf       	rjmp	.-8      	; 0x9c6 <TWIStart+0x6>
	return 0;
}
     9ce:	80 e0       	ldi	r24, 0x00	; 0
     9d0:	08 95       	ret

000009d2 <TWIStop>:

uint8_t TWIStop(void)
{
	TWCR0 = ((1<<TWINT) | (1<<TWSTO) | (1<<TWEN));
     9d2:	84 e9       	ldi	r24, 0x94	; 148
     9d4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	return 0;
} 
     9d8:	80 e0       	ldi	r24, 0x00	; 0
     9da:	08 95       	ret

000009dc <TWIWrite>:

uint8_t TWIWrite(uint8_t u8data)
{
	TWDR0 = u8data;
     9dc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR0 = ((1<<TWINT) | (1<<TWEN));
     9e0:	84 e8       	ldi	r24, 0x84	; 132
     9e2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while((TWCR0 & (1<<TWINT)) == 0);
     9e6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     9ea:	87 ff       	sbrs	r24, 7
     9ec:	fc cf       	rjmp	.-8      	; 0x9e6 <TWIWrite+0xa>
	return 0;
}
     9ee:	80 e0       	ldi	r24, 0x00	; 0
     9f0:	08 95       	ret

000009f2 <TWIReadACK>:

uint8_t TWIReadACK(void)
{
	TWCR0 = ((1<<TWINT) | (1<<TWEN) | (1<<TWEA));
     9f2:	84 ec       	ldi	r24, 0xC4	; 196
     9f4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while((TWCR0 & (1<<TWINT)) == 0);
     9f8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     9fc:	87 ff       	sbrs	r24, 7
     9fe:	fc cf       	rjmp	.-8      	; 0x9f8 <TWIReadACK+0x6>
	return TWDR0;
     a00:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	return 0;
}
     a04:	08 95       	ret

00000a06 <TWIReadNACK>:

uint8_t TWIReadNACK(void)
{
	TWCR0 = ((1<<TWINT) | (1<<TWEN));
     a06:	84 e8       	ldi	r24, 0x84	; 132
     a08:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while((TWCR0 & (1<<TWINT)) == 0);
     a0c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     a10:	87 ff       	sbrs	r24, 7
     a12:	fc cf       	rjmp	.-8      	; 0xa0c <TWIReadNACK+0x6>
	return TWDR0;
     a14:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	return 0;
}
     a18:	08 95       	ret

00000a1a <TWIGetStatus>:
	 *  0x38   Arbitration in SLA+W lost
	 */
	 
	uint8_t status;
	//mask status
	status = TWSR0 & 0xF8;
     a1a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	return status;
}
     a1e:	88 7f       	andi	r24, 0xF8	; 248
     a20:	08 95       	ret

00000a22 <sht21_init>:
uint8_t sht21_init(void)
{
	/*	
	 * Softreset Sensor
	 */
	TWIStart();
     a22:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <TWIStart>
	if(TWIGetStatus() != 0x08)return 1; 
     a26:	0e 94 0d 05 	call	0xa1a	; 0xa1a <TWIGetStatus>
     a2a:	88 30       	cpi	r24, 0x08	; 8
     a2c:	11 f0       	breq	.+4      	; 0xa32 <sht21_init+0x10>
     a2e:	81 e0       	ldi	r24, 0x01	; 1
     a30:	08 95       	ret
	TWIWrite(SHT21_W);
     a32:	80 e8       	ldi	r24, 0x80	; 128
     a34:	0e 94 ee 04 	call	0x9dc	; 0x9dc <TWIWrite>
	if(TWIGetStatus() != 0x18)return 2;
     a38:	0e 94 0d 05 	call	0xa1a	; 0xa1a <TWIGetStatus>
     a3c:	88 31       	cpi	r24, 0x18	; 24
     a3e:	11 f0       	breq	.+4      	; 0xa44 <sht21_init+0x22>
     a40:	82 e0       	ldi	r24, 0x02	; 2
     a42:	08 95       	ret
	TWIWrite(SHT21_SOFTRESET);
     a44:	8e ef       	ldi	r24, 0xFE	; 254
     a46:	0e 94 ee 04 	call	0x9dc	; 0x9dc <TWIWrite>
	if(TWIGetStatus() != 0x28)return 3;
     a4a:	0e 94 0d 05 	call	0xa1a	; 0xa1a <TWIGetStatus>
     a4e:	88 32       	cpi	r24, 0x28	; 40
     a50:	41 f4       	brne	.+16     	; 0xa62 <sht21_init+0x40>
	TWIStop();
     a52:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <TWIStop>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     a56:	80 e3       	ldi	r24, 0x30	; 48
     a58:	95 e7       	ldi	r25, 0x75	; 117
     a5a:	01 97       	sbiw	r24, 0x01	; 1
     a5c:	f1 f7       	brne	.-4      	; 0xa5a <sht21_init+0x38>
	_delay_ms(15);	//Startuptime after Reset <15ms (Datasheet)
	return 0;
     a5e:	80 e0       	ldi	r24, 0x00	; 0
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
     a60:	08 95       	ret
	if(TWIGetStatus() != 0x28)return 3;
     a62:	83 e0       	ldi	r24, 0x03	; 3
}
     a64:	08 95       	ret

00000a66 <sht21_measure>:
int16_t sht21_measure(uint8_t measure_mode)
{
     a66:	ff 92       	push	r15
     a68:	0f 93       	push	r16
     a6a:	1f 93       	push	r17
     a6c:	cf 93       	push	r28
     a6e:	df 93       	push	r29
     a70:	00 d0       	rcall	.+0      	; 0xa72 <sht21_measure+0xc>
     a72:	00 d0       	rcall	.+0      	; 0xa74 <sht21_measure+0xe>
     a74:	0f 92       	push	r0
     a76:	cd b7       	in	r28, 0x3d	; 61
     a78:	de b7       	in	r29, 0x3e	; 62
     a7a:	89 83       	std	Y+1, r24	; 0x01
0xE4	Arbitration lost in read NAK
0xE5	Arbitration lost in write
0xF8	Unknown error
0xFF	Illegal START or STOP condition
	*/
	TWIStart();		
     a7c:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <TWIStart>
	ret=TWIGetStatus();						//start TWI
     a80:	0e 94 0d 05 	call	0xa1a	; 0xa1a <TWIGetStatus>
     a84:	8d 83       	std	Y+5, r24	; 0x05
	if(ret != 0x08)return ret; 	//start condition transmitted?
     a86:	90 e0       	ldi	r25, 0x00	; 0
     a88:	88 30       	cpi	r24, 0x08	; 8
     a8a:	59 f0       	breq	.+22     	; 0xaa2 <sht21_measure+0x3c>
	 
	if(sht21_checksum(raw,2,raw[2])) 	//check result with checksum
	{
		return 1;
	}else return rueckgabewert;	
}//End of SHT21_read_temp
     a8c:	0f 90       	pop	r0
     a8e:	0f 90       	pop	r0
     a90:	0f 90       	pop	r0
     a92:	0f 90       	pop	r0
     a94:	0f 90       	pop	r0
     a96:	df 91       	pop	r29
     a98:	cf 91       	pop	r28
     a9a:	1f 91       	pop	r17
     a9c:	0f 91       	pop	r16
     a9e:	ff 90       	pop	r15
     aa0:	08 95       	ret
	TWIWrite(SHT21_W);			//send write adress
     aa2:	80 e8       	ldi	r24, 0x80	; 128
     aa4:	0e 94 ee 04 	call	0x9dc	; 0x9dc <TWIWrite>
	if(TWIGetStatus() != 0x18)return 22;	//SLA+W transmitted?
     aa8:	0e 94 0d 05 	call	0xa1a	; 0xa1a <TWIGetStatus>
     aac:	88 31       	cpi	r24, 0x18	; 24
     aae:	e9 f4       	brne	.+58     	; 0xaea <sht21_measure+0x84>
	switch(measure_mode)
     ab0:	29 81       	ldd	r18, Y+1	; 0x01
     ab2:	22 23       	and	r18, r18
     ab4:	b1 f0       	breq	.+44     	; 0xae2 <sht21_measure+0x7c>
     ab6:	21 30       	cpi	r18, 0x01	; 1
     ab8:	39 f0       	breq	.+14     	; 0xac8 <sht21_measure+0x62>
	if(TWIGetStatus() != 0x28)return 33;	//kontrolle ob erfolgreich sonst Abbruch mit Error Code
     aba:	0e 94 0d 05 	call	0xa1a	; 0xa1a <TWIGetStatus>
     abe:	88 32       	cpi	r24, 0x28	; 40
     ac0:	39 f0       	breq	.+14     	; 0xad0 <sht21_measure+0x6a>
     ac2:	81 e2       	ldi	r24, 0x21	; 33
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	e2 cf       	rjmp	.-60     	; 0xa8c <sht21_measure+0x26>
		case RH_HOLD:	TWIWrite(SHT21_HUM_HOLDMASTER);break;	//Modus = Temperatur master hold = on
     ac8:	83 ef       	ldi	r24, 0xF3	; 243
     aca:	0e 94 ee 04 	call	0x9dc	; 0x9dc <TWIWrite>
     ace:	f5 cf       	rjmp	.-22     	; 0xaba <sht21_measure+0x54>
	TWIStart();								//restart TWI
     ad0:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <TWIStart>
	if(TWIGetStatus() != 0x10)return 44; 	//kontrolle ob erfolgreich sonst Abbruch mit Error Code
     ad4:	0e 94 0d 05 	call	0xa1a	; 0xa1a <TWIGetStatus>
     ad8:	80 31       	cpi	r24, 0x10	; 16
     ada:	51 f0       	breq	.+20     	; 0xaf0 <sht21_measure+0x8a>
     adc:	8c e2       	ldi	r24, 0x2C	; 44
     ade:	90 e0       	ldi	r25, 0x00	; 0
     ae0:	d5 cf       	rjmp	.-86     	; 0xa8c <sht21_measure+0x26>
		case T_HOLD:	TWIWrite(SHT21_TEMP_HOLDMASTER);break;	//Modus = Temperatur master hold = on
     ae2:	83 ee       	ldi	r24, 0xE3	; 227
     ae4:	0e 94 ee 04 	call	0x9dc	; 0x9dc <TWIWrite>
     ae8:	e8 cf       	rjmp	.-48     	; 0xaba <sht21_measure+0x54>
	if(TWIGetStatus() != 0x18)return 22;	//SLA+W transmitted?
     aea:	86 e1       	ldi	r24, 0x16	; 22
     aec:	90 e0       	ldi	r25, 0x00	; 0
     aee:	ce cf       	rjmp	.-100    	; 0xa8c <sht21_measure+0x26>
	TWIWrite(SHT21_R);						//Adresse und lesen
     af0:	81 e8       	ldi	r24, 0x81	; 129
     af2:	0e 94 ee 04 	call	0x9dc	; 0x9dc <TWIWrite>
	if(TWIGetStatus() != 0x40)return 55;	//kontrolle ob erfolgreich sonst Abbruch mit Error Code
     af6:	0e 94 0d 05 	call	0xa1a	; 0xa1a <TWIGetStatus>
     afa:	80 34       	cpi	r24, 0x40	; 64
     afc:	09 f0       	breq	.+2      	; 0xb00 <sht21_measure+0x9a>
     afe:	76 c0       	rjmp	.+236    	; 0xbec <sht21_measure+0x186>
	DDRC &= ~(1<<PC5);					//set SCL as Input
     b00:	3d 98       	cbi	0x07, 5	; 7
     b02:	28 ee       	ldi	r18, 0xE8	; 232
     b04:	33 e0       	ldi	r19, 0x03	; 3
     b06:	03 c0       	rjmp	.+6      	; 0xb0e <sht21_measure+0xa8>
	for(i=0;i<1000;i++)					//wait for timeout or
     b08:	21 50       	subi	r18, 0x01	; 1
     b0a:	31 09       	sbc	r19, r1
     b0c:	29 f0       	breq	.+10     	; 0xb18 <sht21_measure+0xb2>
		if(PINC &= ~(1<<PC5))break;		//wait for end of conversion (Master hold mode)
     b0e:	96 b1       	in	r25, 0x06	; 6
     b10:	9f 7d       	andi	r25, 0xDF	; 223
     b12:	96 b9       	out	0x06, r25	; 6
     b14:	99 23       	and	r25, r25
     b16:	c1 f3       	breq	.-16     	; 0xb08 <sht21_measure+0xa2>
	DDRC |= (1<<PC5);					//set SCL as Output again
     b18:	3d 9a       	sbi	0x07, 5	; 7
	raw[0] = TWIReadACK();				//empfange MSB
     b1a:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <TWIReadACK>
     b1e:	18 2f       	mov	r17, r24
	if(TWIGetStatus() != 0x50)return 66;	//kontrolle ob erfolgreich sonst Abbruch mit Error Code
     b20:	0e 94 0d 05 	call	0xa1a	; 0xa1a <TWIGetStatus>
     b24:	80 35       	cpi	r24, 0x50	; 80
     b26:	09 f0       	breq	.+2      	; 0xb2a <sht21_measure+0xc4>
     b28:	64 c0       	rjmp	.+200    	; 0xbf2 <sht21_measure+0x18c>
	raw[1] = TWIReadACK();				//empfange LSB / durch NACK wird checksumme nicht empfangen
     b2a:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <TWIReadACK>
     b2e:	08 2f       	mov	r16, r24
	if(TWIGetStatus() != 0x50)return 77;	//kontrolle ob erfolgreich sonst Abbruch mit Error Code
     b30:	0e 94 0d 05 	call	0xa1a	; 0xa1a <TWIGetStatus>
     b34:	80 35       	cpi	r24, 0x50	; 80
     b36:	09 f0       	breq	.+2      	; 0xb3a <sht21_measure+0xd4>
     b38:	5f c0       	rjmp	.+190    	; 0xbf8 <sht21_measure+0x192>
	raw[2] = TWIReadNACK();				//receive checksum
     b3a:	0e 94 03 05 	call	0xa06	; 0xa06 <TWIReadNACK>
     b3e:	f8 2e       	mov	r15, r24
	TWIStop();							//close TWI
     b40:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <TWIStop>
	messwert=(raw[0]<<8)|raw[1];						//8 bit werte zu 16bit Wert zusammensetzen
     b44:	c8 01       	movw	r24, r16
	messwert &= ~0x003;								//Loescht letzte 2 Bits (Status Bits)
     b46:	8c 7f       	andi	r24, 0xFC	; 252
	switch(measure_mode)
     b48:	39 81       	ldd	r19, Y+1	; 0x01
     b4a:	33 23       	and	r19, r19
     b4c:	09 f4       	brne	.+2      	; 0xb50 <sht21_measure+0xea>
     b4e:	6e c0       	rjmp	.+220    	; 0xc2c <sht21_measure+0x1c6>
     b50:	31 30       	cpi	r19, 0x01	; 1
     b52:	09 f0       	breq	.+2      	; 0xb56 <sht21_measure+0xf0>
     b54:	68 c0       	rjmp	.+208    	; 0xc26 <sht21_measure+0x1c0>
		case RH_HOLD:	rueckgabewert = 100*(-6.0 + 125.0/65536 * messwert);break; // return relative humidity;break;	//Modus = Temperatur master hold = on
     b56:	9c 01       	movw	r18, r24
     b58:	50 e0       	ldi	r21, 0x00	; 0
     b5a:	40 e0       	ldi	r20, 0x00	; 0
     b5c:	29 83       	std	Y+1, r18	; 0x01
     b5e:	3a 83       	std	Y+2, r19	; 0x02
     b60:	4b 83       	std	Y+3, r20	; 0x03
     b62:	5c 83       	std	Y+4, r21	; 0x04
     b64:	ca 01       	movw	r24, r20
     b66:	b9 01       	movw	r22, r18
     b68:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__floatunsisf>
     b6c:	20 e0       	ldi	r18, 0x00	; 0
     b6e:	30 e0       	ldi	r19, 0x00	; 0
     b70:	4a ef       	ldi	r20, 0xFA	; 250
     b72:	5a e3       	ldi	r21, 0x3A	; 58
     b74:	69 83       	std	Y+1, r22	; 0x01
     b76:	7a 83       	std	Y+2, r23	; 0x02
     b78:	8b 83       	std	Y+3, r24	; 0x03
     b7a:	9c 83       	std	Y+4, r25	; 0x04
     b7c:	69 81       	ldd	r22, Y+1	; 0x01
     b7e:	7a 81       	ldd	r23, Y+2	; 0x02
     b80:	8b 81       	ldd	r24, Y+3	; 0x03
     b82:	9c 81       	ldd	r25, Y+4	; 0x04
     b84:	0e 94 9a 0a 	call	0x1534	; 0x1534 <__mulsf3>
     b88:	20 e0       	ldi	r18, 0x00	; 0
     b8a:	30 e0       	ldi	r19, 0x00	; 0
     b8c:	40 ec       	ldi	r20, 0xC0	; 192
     b8e:	50 e4       	ldi	r21, 0x40	; 64
     b90:	69 83       	std	Y+1, r22	; 0x01
     b92:	7a 83       	std	Y+2, r23	; 0x02
     b94:	8b 83       	std	Y+3, r24	; 0x03
     b96:	9c 83       	std	Y+4, r25	; 0x04
     b98:	69 81       	ldd	r22, Y+1	; 0x01
     b9a:	7a 81       	ldd	r23, Y+2	; 0x02
     b9c:	8b 81       	ldd	r24, Y+3	; 0x03
     b9e:	9c 81       	ldd	r25, Y+4	; 0x04
     ba0:	0e 94 69 09 	call	0x12d2	; 0x12d2 <__subsf3>
     ba4:	20 e0       	ldi	r18, 0x00	; 0
     ba6:	30 e0       	ldi	r19, 0x00	; 0
     ba8:	48 ec       	ldi	r20, 0xC8	; 200
     baa:	52 e4       	ldi	r21, 0x42	; 66
     bac:	69 83       	std	Y+1, r22	; 0x01
     bae:	7a 83       	std	Y+2, r23	; 0x02
     bb0:	8b 83       	std	Y+3, r24	; 0x03
     bb2:	9c 83       	std	Y+4, r25	; 0x04
     bb4:	69 81       	ldd	r22, Y+1	; 0x01
     bb6:	7a 81       	ldd	r23, Y+2	; 0x02
     bb8:	8b 81       	ldd	r24, Y+3	; 0x03
     bba:	9c 81       	ldd	r25, Y+4	; 0x04
     bbc:	0e 94 9a 0a 	call	0x1534	; 0x1534 <__mulsf3>
     bc0:	69 83       	std	Y+1, r22	; 0x01
     bc2:	7a 83       	std	Y+2, r23	; 0x02
     bc4:	8b 83       	std	Y+3, r24	; 0x03
     bc6:	9c 83       	std	Y+4, r25	; 0x04
     bc8:	69 81       	ldd	r22, Y+1	; 0x01
     bca:	7a 81       	ldd	r23, Y+2	; 0x02
     bcc:	8b 81       	ldd	r24, Y+3	; 0x03
     bce:	9c 81       	ldd	r25, Y+4	; 0x04
     bd0:	0e 94 d6 09 	call	0x13ac	; 0x13ac <__fixsfsi>
     bd4:	cb 01       	movw	r24, r22
	switch(measure_mode)
     bd6:	28 e0       	ldi	r18, 0x08	; 8

 	 //calculates 8-Bit checksum with given polynomial
  	for (byteCtr = 0; byteCtr < no_of_bytes; ++byteCtr)
 	 { crc ^= (data[byteCtr]);
 	   for (uint8_t bit = 8; bit > 0; --bit)
 	   { if (crc & 0x80) crc = (crc << 1) ^ POLYNOMINAL;
     bd8:	31 e3       	ldi	r19, 0x31	; 49
     bda:	03 c0       	rjmp	.+6      	; 0xbe2 <sht21_measure+0x17c>
 	     else crc = (crc << 1);
     bdc:	11 0f       	add	r17, r17
 	   for (uint8_t bit = 8; bit > 0; --bit)
     bde:	21 50       	subi	r18, 0x01	; 1
     be0:	71 f0       	breq	.+28     	; 0xbfe <sht21_measure+0x198>
 	   { if (crc & 0x80) crc = (crc << 1) ^ POLYNOMINAL;
     be2:	17 ff       	sbrs	r17, 7
     be4:	fb cf       	rjmp	.-10     	; 0xbdc <sht21_measure+0x176>
     be6:	11 0f       	add	r17, r17
     be8:	13 27       	eor	r17, r19
     bea:	f9 cf       	rjmp	.-14     	; 0xbde <sht21_measure+0x178>
	if(TWIGetStatus() != 0x40)return 55;	//kontrolle ob erfolgreich sonst Abbruch mit Error Code
     bec:	87 e3       	ldi	r24, 0x37	; 55
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	4d cf       	rjmp	.-358    	; 0xa8c <sht21_measure+0x26>
	if(TWIGetStatus() != 0x50)return 66;	//kontrolle ob erfolgreich sonst Abbruch mit Error Code
     bf2:	82 e4       	ldi	r24, 0x42	; 66
     bf4:	90 e0       	ldi	r25, 0x00	; 0
     bf6:	4a cf       	rjmp	.-364    	; 0xa8c <sht21_measure+0x26>
	if(TWIGetStatus() != 0x50)return 77;	//kontrolle ob erfolgreich sonst Abbruch mit Error Code
     bf8:	8d e4       	ldi	r24, 0x4D	; 77
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	47 cf       	rjmp	.-370    	; 0xa8c <sht21_measure+0x26>
 	 { crc ^= (data[byteCtr]);
     bfe:	10 27       	eor	r17, r16
 	   { if (crc & 0x80) crc = (crc << 1) ^ POLYNOMINAL;
     c00:	21 e3       	ldi	r18, 0x31	; 49
     c02:	06 c0       	rjmp	.+12     	; 0xc10 <sht21_measure+0x1aa>
 	     else crc = (crc << 1);
     c04:	11 0f       	add	r17, r17
 	   for (uint8_t bit = 8; bit > 0; --bit)
     c06:	3d 81       	ldd	r19, Y+5	; 0x05
     c08:	31 50       	subi	r19, 0x01	; 1
     c0a:	3d 83       	std	Y+5, r19	; 0x05
     c0c:	33 23       	and	r19, r19
     c0e:	29 f0       	breq	.+10     	; 0xc1a <sht21_measure+0x1b4>
 	   { if (crc & 0x80) crc = (crc << 1) ^ POLYNOMINAL;
     c10:	17 ff       	sbrs	r17, 7
     c12:	f8 cf       	rjmp	.-16     	; 0xc04 <sht21_measure+0x19e>
     c14:	11 0f       	add	r17, r17
     c16:	12 27       	eor	r17, r18
     c18:	f6 cf       	rjmp	.-20     	; 0xc06 <sht21_measure+0x1a0>
 	   }
 	 }
 	 if (crc != checksum) return 1;
     c1a:	f1 16       	cp	r15, r17
     c1c:	09 f4       	brne	.+2      	; 0xc20 <sht21_measure+0x1ba>
     c1e:	36 cf       	rjmp	.-404    	; 0xa8c <sht21_measure+0x26>
		return 1;
     c20:	81 e0       	ldi	r24, 0x01	; 1
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	33 cf       	rjmp	.-410    	; 0xa8c <sht21_measure+0x26>
	switch(measure_mode)
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	80 e0       	ldi	r24, 0x00	; 0
     c2a:	d5 cf       	rjmp	.-86     	; 0xbd6 <sht21_measure+0x170>
		case T_HOLD:	rueckgabewert = 100*(-46.85 + 175.72/65536 * messwert);break;
     c2c:	9c 01       	movw	r18, r24
     c2e:	50 e0       	ldi	r21, 0x00	; 0
     c30:	40 e0       	ldi	r20, 0x00	; 0
     c32:	29 83       	std	Y+1, r18	; 0x01
     c34:	3a 83       	std	Y+2, r19	; 0x02
     c36:	4b 83       	std	Y+3, r20	; 0x03
     c38:	5c 83       	std	Y+4, r21	; 0x04
     c3a:	ca 01       	movw	r24, r20
     c3c:	b9 01       	movw	r22, r18
     c3e:	0e 94 0c 0a 	call	0x1418	; 0x1418 <__floatunsisf>
     c42:	22 e5       	ldi	r18, 0x52	; 82
     c44:	38 eb       	ldi	r19, 0xB8	; 184
     c46:	4f e2       	ldi	r20, 0x2F	; 47
     c48:	5b e3       	ldi	r21, 0x3B	; 59
     c4a:	69 83       	std	Y+1, r22	; 0x01
     c4c:	7a 83       	std	Y+2, r23	; 0x02
     c4e:	8b 83       	std	Y+3, r24	; 0x03
     c50:	9c 83       	std	Y+4, r25	; 0x04
     c52:	69 81       	ldd	r22, Y+1	; 0x01
     c54:	7a 81       	ldd	r23, Y+2	; 0x02
     c56:	8b 81       	ldd	r24, Y+3	; 0x03
     c58:	9c 81       	ldd	r25, Y+4	; 0x04
     c5a:	0e 94 9a 0a 	call	0x1534	; 0x1534 <__mulsf3>
     c5e:	26 e6       	ldi	r18, 0x66	; 102
     c60:	36 e6       	ldi	r19, 0x66	; 102
     c62:	4b e3       	ldi	r20, 0x3B	; 59
     c64:	52 e4       	ldi	r21, 0x42	; 66
     c66:	94 cf       	rjmp	.-216    	; 0xb90 <sht21_measure+0x12a>

00000c68 <sht21_checksum>:
  	for (byteCtr = 0; byteCtr < no_of_bytes; ++byteCtr)
     c68:	66 23       	and	r22, r22
     c6a:	c9 f0       	breq	.+50     	; 0xc9e <sht21_checksum+0x36>
     c6c:	fc 01       	movw	r30, r24
     c6e:	9c 01       	movw	r18, r24
     c70:	2f 5f       	subi	r18, 0xFF	; 255
     c72:	3f 4f       	sbci	r19, 0xFF	; 255
     c74:	61 50       	subi	r22, 0x01	; 1
     c76:	26 0f       	add	r18, r22
     c78:	31 1d       	adc	r19, r1
	uint8_t crc = 0;	
     c7a:	60 e0       	ldi	r22, 0x00	; 0
 	   { if (crc & 0x80) crc = (crc << 1) ^ POLYNOMINAL;
     c7c:	91 e3       	ldi	r25, 0x31	; 49
 	 { crc ^= (data[byteCtr]);
     c7e:	81 91       	ld	r24, Z+
     c80:	68 27       	eor	r22, r24
     c82:	88 e0       	ldi	r24, 0x08	; 8
     c84:	03 c0       	rjmp	.+6      	; 0xc8c <sht21_checksum+0x24>
 	     else crc = (crc << 1);
     c86:	66 0f       	add	r22, r22
 	   for (uint8_t bit = 8; bit > 0; --bit)
     c88:	81 50       	subi	r24, 0x01	; 1
     c8a:	31 f0       	breq	.+12     	; 0xc98 <sht21_checksum+0x30>
 	   { if (crc & 0x80) crc = (crc << 1) ^ POLYNOMINAL;
     c8c:	67 ff       	sbrs	r22, 7
     c8e:	fb cf       	rjmp	.-10     	; 0xc86 <sht21_checksum+0x1e>
     c90:	66 0f       	add	r22, r22
     c92:	69 27       	eor	r22, r25
 	   for (uint8_t bit = 8; bit > 0; --bit)
     c94:	81 50       	subi	r24, 0x01	; 1
     c96:	d1 f7       	brne	.-12     	; 0xc8c <sht21_checksum+0x24>
  	for (byteCtr = 0; byteCtr < no_of_bytes; ++byteCtr)
     c98:	e2 17       	cp	r30, r18
     c9a:	f3 07       	cpc	r31, r19
     c9c:	81 f7       	brne	.-32     	; 0xc7e <sht21_checksum+0x16>
 	 if (crc != checksum) return 1;
     c9e:	81 e0       	ldi	r24, 0x01	; 1
     ca0:	46 13       	cpse	r20, r22
 	 else return 0;
}
     ca2:	08 95       	ret
 	 if (crc != checksum) return 1;
     ca4:	80 e0       	ldi	r24, 0x00	; 0
}
     ca6:	08 95       	ret

00000ca8 <Display_Init>:
void Display_Init(void)
{
	/*Init session according datasheet and sample code:
	 *https://www.buydisplay.com/serial-spi-0-71-inch-white-48x64-graphic-oled-display-ssd1306
	 * */
	DISP_RST_1;
     ca8:	29 9a       	sbi	0x05, 1	; 5
	__asm__ volatile (
     caa:	80 e2       	ldi	r24, 0x20	; 32
     cac:	9e e4       	ldi	r25, 0x4E	; 78
     cae:	fc 01       	movw	r30, r24
     cb0:	31 97       	sbiw	r30, 0x01	; 1
     cb2:	f1 f7       	brne	.-4      	; 0xcb0 <Display_Init+0x8>
	_delay_ms(10);
	DISP_RST_0;
     cb4:	29 98       	cbi	0x05, 1	; 5
     cb6:	e0 e4       	ldi	r30, 0x40	; 64
     cb8:	fc e9       	ldi	r31, 0x9C	; 156
     cba:	31 97       	sbiw	r30, 0x01	; 1
     cbc:	f1 f7       	brne	.-4      	; 0xcba <Display_Init+0x12>
	_delay_ms(20);
	DISP_RST_1;
     cbe:	29 9a       	sbi	0x05, 1	; 5
     cc0:	01 97       	sbiw	r24, 0x01	; 1
     cc2:	f1 f7       	brne	.-4      	; 0xcc0 <Display_Init+0x18>
	_delay_ms(10);
	DISP_COMM;
     cc4:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;		
     cc6:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(data);
	CS_DISP_1;
}
void send_command(char command)
{
	DISP_COMM;
     cc8:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     cca:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     ccc:	8e ea       	ldi	r24, 0xAE	; 174
     cce:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     cd2:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     cd4:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     cd6:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     cd8:	85 ed       	ldi	r24, 0xD5	; 213
     cda:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     cde:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     ce0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     ce2:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     ce4:	80 e8       	ldi	r24, 0x80	; 128
     ce6:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     cea:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     cec:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     cee:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     cf0:	88 ea       	ldi	r24, 0xA8	; 168
     cf2:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     cf6:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     cf8:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     cfa:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     cfc:	8f e3       	ldi	r24, 0x3F	; 63
     cfe:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     d02:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d04:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d06:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     d08:	83 ed       	ldi	r24, 0xD3	; 211
     d0a:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     d0e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d10:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d12:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     d14:	80 e0       	ldi	r24, 0x00	; 0
     d16:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     d1a:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d1c:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d1e:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     d20:	8d e8       	ldi	r24, 0x8D	; 141
     d22:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     d26:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d28:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d2a:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     d2c:	84 e1       	ldi	r24, 0x14	; 20
     d2e:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     d32:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d34:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d36:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     d38:	86 ea       	ldi	r24, 0xA6	; 166
     d3a:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     d3e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d40:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d42:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     d44:	84 ea       	ldi	r24, 0xA4	; 164
     d46:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     d4a:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d4c:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d4e:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     d50:	81 ea       	ldi	r24, 0xA1	; 161
     d52:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     d56:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d58:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d5a:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     d5c:	88 ec       	ldi	r24, 0xC8	; 200
     d5e:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     d62:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d64:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d66:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     d68:	8a ed       	ldi	r24, 0xDA	; 218
     d6a:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     d6e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d70:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d72:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     d74:	82 e1       	ldi	r24, 0x12	; 18
     d76:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     d7a:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d7c:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d7e:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     d80:	81 e8       	ldi	r24, 0x81	; 129
     d82:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     d86:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d88:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d8a:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     d8c:	81 e0       	ldi	r24, 0x01	; 1
     d8e:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     d92:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d94:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d96:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     d98:	89 ed       	ldi	r24, 0xD9	; 217
     d9a:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     d9e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     da0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     da2:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     da4:	81 ef       	ldi	r24, 0xF1	; 241
     da6:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     daa:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     dac:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     dae:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     db0:	8b ed       	ldi	r24, 0xDB	; 219
     db2:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     db6:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     db8:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     dba:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     dbc:	80 e4       	ldi	r24, 0x40	; 64
     dbe:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     dc2:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     dc4:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     dc6:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     dc8:	8f ea       	ldi	r24, 0xAF	; 175
     dca:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     dce:	28 9a       	sbi	0x05, 0	; 5
	CS_DISP_1;		   //release chip select
     dd0:	28 9a       	sbi	0x05, 0	; 5
	DISP_DATA;
     dd2:	2a 9a       	sbi	0x05, 2	; 5
}
     dd4:	08 95       	ret

00000dd6 <send_data>:
	DISP_DATA;
     dd6:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
     dd8:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(data);
     dda:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     dde:	28 9a       	sbi	0x05, 0	; 5
}
     de0:	08 95       	ret

00000de2 <send_command>:
	DISP_COMM;
     de2:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     de4:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     de6:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     dea:	28 9a       	sbi	0x05, 0	; 5
}
     dec:	08 95       	ret

00000dee <Set_Page_Address>:
	DISP_COMM;
     dee:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     df0:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     df2:	80 6b       	ori	r24, 0xB0	; 176
     df4:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     df8:	28 9a       	sbi	0x05, 0	; 5
void Set_Page_Address(unsigned char add)
{
    add=0xb0|add;
    send_command(add);
	return;
}
     dfa:	08 95       	ret

00000dfc <Set_Column_Address>:
void Set_Column_Address(unsigned char add)
{	 add+=40;
     dfc:	cf 93       	push	r28
     dfe:	c8 e2       	ldi	r28, 0x28	; 40
     e00:	c8 0f       	add	r28, r24
	DISP_COMM;
     e02:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     e04:	28 98       	cbi	0x05, 0	; 5
    send_command((0x10|(add>>4)));
     e06:	8c 2f       	mov	r24, r28
     e08:	82 95       	swap	r24
     e0a:	8f 70       	andi	r24, 0x0F	; 15
	SPI_MasterTransmit(command);
     e0c:	80 61       	ori	r24, 0x10	; 16
     e0e:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     e12:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     e14:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     e16:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     e18:	8c 2f       	mov	r24, r28
     e1a:	8f 70       	andi	r24, 0x0F	; 15
     e1c:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     e20:	28 9a       	sbi	0x05, 0	; 5
	send_command((0x0f&add));
	return;
}
     e22:	cf 91       	pop	r28
     e24:	08 95       	ret

00000e26 <Set_Contrast_Control_Register>:
void Set_Contrast_Control_Register(unsigned char mod)
{
     e26:	cf 93       	push	r28
     e28:	c8 2f       	mov	r28, r24
	DISP_COMM;
     e2a:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     e2c:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     e2e:	81 e8       	ldi	r24, 0x81	; 129
     e30:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     e34:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     e36:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     e38:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     e3a:	8c 2f       	mov	r24, r28
     e3c:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     e40:	28 9a       	sbi	0x05, 0	; 5
    send_command(0x81);
	send_command(mod);
	return;
}
     e42:	cf 91       	pop	r28
     e44:	08 95       	ret

00000e46 <Display_Picture>:
void Display_Picture(const unsigned char pic[])
{
     e46:	ff 92       	push	r15
     e48:	0f 93       	push	r16
     e4a:	1f 93       	push	r17
     e4c:	cf 93       	push	r28
     e4e:	df 93       	push	r29
	//Display picture 48x64
    unsigned char i,j;
	for(i=0;i<0x08;i++)
     e50:	8c 01       	movw	r16, r24
     e52:	00 5d       	subi	r16, 0xD0	; 208
     e54:	1f 4f       	sbci	r17, 0xFF	; 255
     e56:	f1 2c       	mov	r15, r1
	DISP_COMM;
     e58:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     e5a:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     e5c:	8f 2d       	mov	r24, r15
     e5e:	80 6b       	ori	r24, 0xB0	; 176
     e60:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     e64:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     e66:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     e68:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     e6a:	82 e1       	ldi	r24, 0x12	; 18
     e6c:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     e70:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     e72:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     e74:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     e76:	88 e0       	ldi	r24, 0x08	; 8
     e78:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     e7c:	28 9a       	sbi	0x05, 0	; 5
	{
	Set_Page_Address(i);
    Set_Column_Address(0x00);
        for(j=0;j<0x30;j++)
     e7e:	e8 01       	movw	r28, r16
     e80:	e0 97       	sbiw	r28, 0x30	; 48
		{
		    send_data(pgm_read_byte(&pic[i*0x30+j]));
     e82:	fe 01       	movw	r30, r28
     e84:	84 91       	lpm	r24, Z
	DISP_DATA;
     e86:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
     e88:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(data);
     e8a:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     e8e:	28 9a       	sbi	0x05, 0	; 5
        for(j=0;j<0x30;j++)
     e90:	21 96       	adiw	r28, 0x01	; 1
     e92:	c0 17       	cp	r28, r16
     e94:	d1 07       	cpc	r29, r17
     e96:	a9 f7       	brne	.-22     	; 0xe82 <Display_Picture+0x3c>
	for(i=0;i<0x08;i++)
     e98:	f3 94       	inc	r15
     e9a:	8e 01       	movw	r16, r28
     e9c:	00 5d       	subi	r16, 0xD0	; 208
     e9e:	1f 4f       	sbci	r17, 0xFF	; 255
     ea0:	f8 e0       	ldi	r31, 0x08	; 8
     ea2:	ff 12       	cpse	r15, r31
     ea4:	d9 cf       	rjmp	.-78     	; 0xe58 <Display_Picture+0x12>
		}
	}
    return;
}
     ea6:	df 91       	pop	r29
     ea8:	cf 91       	pop	r28
     eaa:	1f 91       	pop	r17
     eac:	0f 91       	pop	r16
     eae:	ff 90       	pop	r15
     eb0:	08 95       	ret

00000eb2 <Display_Clear>:
void Display_Clear(void)
{
     eb2:	cf 93       	push	r28
     eb4:	df 93       	push	r29
	//clear whole display
	unsigned char i,j;
	for(i=0;i<0x08;i++)
     eb6:	d0 e0       	ldi	r29, 0x00	; 0
	DISP_COMM;
     eb8:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     eba:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     ebc:	8d 2f       	mov	r24, r29
     ebe:	80 6b       	ori	r24, 0xB0	; 176
     ec0:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     ec4:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     ec6:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     ec8:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     eca:	82 e1       	ldi	r24, 0x12	; 18
     ecc:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     ed0:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     ed2:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     ed4:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     ed6:	88 e0       	ldi	r24, 0x08	; 8
     ed8:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     edc:	28 9a       	sbi	0x05, 0	; 5
     ede:	c0 e3       	ldi	r28, 0x30	; 48
	DISP_DATA;
     ee0:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
     ee2:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(data);
     ee4:	80 e0       	ldi	r24, 0x00	; 0
     ee6:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     eea:	28 9a       	sbi	0x05, 0	; 5
	{
	Set_Page_Address(i);
    Set_Column_Address(0x00);
        for(j=0;j<0x30;j++)
     eec:	c1 50       	subi	r28, 0x01	; 1
     eee:	c1 f7       	brne	.-16     	; 0xee0 <Display_Clear+0x2e>
	for(i=0;i<0x08;i++)
     ef0:	df 5f       	subi	r29, 0xFF	; 255
     ef2:	d8 30       	cpi	r29, 0x08	; 8
     ef4:	09 f7       	brne	.-62     	; 0xeb8 <Display_Clear+0x6>
		{
		    send_data(0x00);
		}
	}
    return;
}
     ef6:	df 91       	pop	r29
     ef8:	cf 91       	pop	r28
     efa:	08 95       	ret

00000efc <Char_Position>:
void Char_Position(uint8_t fontsize, uint8_t row, uint8_t pos)
{
     efc:	cf 93       	push	r28
     efe:	df 93       	push	r29
     f00:	d8 2f       	mov	r29, r24
     f02:	c6 2f       	mov	r28, r22
	DISP_COMM;
     f04:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     f06:	28 98       	cbi	0x05, 0	; 5
	//set position for new char (font size 8x14)
	Set_Page_Address(7-pos);	//0-7 	(* 8 bit)
     f08:	87 e0       	ldi	r24, 0x07	; 7
     f0a:	84 1b       	sub	r24, r20
	SPI_MasterTransmit(command);
     f0c:	80 6b       	ori	r24, 0xB0	; 176
     f0e:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     f12:	28 9a       	sbi	0x05, 0	; 5
	Set_Column_Address(row*fontsize);	//0-3	(* 14 collums / char)
     f14:	cd 9f       	mul	r28, r29
     f16:	c0 2d       	mov	r28, r0
     f18:	11 24       	eor	r1, r1
{	 add+=40;
     f1a:	c8 5d       	subi	r28, 0xD8	; 216
	DISP_COMM;
     f1c:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     f1e:	28 98       	cbi	0x05, 0	; 5
    send_command((0x10|(add>>4)));
     f20:	8c 2f       	mov	r24, r28
     f22:	82 95       	swap	r24
     f24:	8f 70       	andi	r24, 0x0F	; 15
	SPI_MasterTransmit(command);
     f26:	80 61       	ori	r24, 0x10	; 16
     f28:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     f2c:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     f2e:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     f30:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     f32:	8c 2f       	mov	r24, r28
     f34:	8f 70       	andi	r24, 0x0F	; 15
     f36:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     f3a:	28 9a       	sbi	0x05, 0	; 5
}
     f3c:	df 91       	pop	r29
     f3e:	cf 91       	pop	r28
     f40:	08 95       	ret

00000f42 <Write_Char>:

void Write_Char(uint8_t fontsize, char n)
{
     f42:	0f 93       	push	r16
     f44:	1f 93       	push	r17
     f46:	cf 93       	push	r28
     f48:	df 93       	push	r29
     f4a:	08 2f       	mov	r16, r24
	switch(fontsize)		//variable height and fixed width (8 Pixel)
	{
		case 8:fontpointer=font8;break;
		case 14:fontpointer=font14;break;
	}
	n-=0x20;			//jump to position in asci table
     f4c:	60 52       	subi	r22, 0x20	; 32
	switch(fontsize)		//variable height and fixed width (8 Pixel)
     f4e:	88 30       	cpi	r24, 0x08	; 8
     f50:	f1 f0       	breq	.+60     	; 0xf8e <Write_Char+0x4c>
     f52:	8e 30       	cpi	r24, 0x0E	; 14
     f54:	c9 f0       	breq	.+50     	; 0xf88 <Write_Char+0x46>
	for(x=0;x<fontsize;x++) 
     f56:	d0 e0       	ldi	r29, 0x00	; 0
     f58:	c0 e0       	ldi	r28, 0x00	; 0
     f5a:	88 23       	and	r24, r24
     f5c:	81 f0       	breq	.+32     	; 0xf7e <Write_Char+0x3c>
     f5e:	06 9f       	mul	r16, r22
     f60:	c0 0d       	add	r28, r0
     f62:	d1 1d       	adc	r29, r1
     f64:	11 24       	eor	r1, r1
	{
		send_data(pgm_read_byte(&fontpointer[(n*fontsize)+x]));
     f66:	10 e0       	ldi	r17, 0x00	; 0
     f68:	fe 01       	movw	r30, r28
     f6a:	84 91       	lpm	r24, Z
	DISP_DATA;
     f6c:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
     f6e:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(data);
     f70:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     f74:	28 9a       	sbi	0x05, 0	; 5
	for(x=0;x<fontsize;x++) 
     f76:	1f 5f       	subi	r17, 0xFF	; 255
     f78:	21 96       	adiw	r28, 0x01	; 1
     f7a:	10 17       	cp	r17, r16
     f7c:	a8 f3       	brcs	.-22     	; 0xf68 <Write_Char+0x26>
	}
	
}
     f7e:	df 91       	pop	r29
     f80:	cf 91       	pop	r28
     f82:	1f 91       	pop	r17
     f84:	0f 91       	pop	r16
     f86:	08 95       	ret
	switch(fontsize)		//variable height and fixed width (8 Pixel)
     f88:	c4 eb       	ldi	r28, 0xB4	; 180
     f8a:	d0 e0       	ldi	r29, 0x00	; 0
     f8c:	e8 cf       	rjmp	.-48     	; 0xf5e <Write_Char+0x1c>
		case 8:fontpointer=font8;break;
     f8e:	ce ea       	ldi	r28, 0xAE	; 174
     f90:	d5 e0       	ldi	r29, 0x05	; 5
     f92:	e5 cf       	rjmp	.-54     	; 0xf5e <Write_Char+0x1c>

00000f94 <Write_String>:
void Write_String(uint8_t fontsize, uint8_t row, uint8_t pos, const char str[]) 
{
     f94:	af 92       	push	r10
     f96:	bf 92       	push	r11
     f98:	cf 92       	push	r12
     f9a:	df 92       	push	r13
     f9c:	ef 92       	push	r14
     f9e:	ff 92       	push	r15
     fa0:	0f 93       	push	r16
     fa2:	1f 93       	push	r17
     fa4:	cf 93       	push	r28
     fa6:	df 93       	push	r29
     fa8:	e8 2e       	mov	r14, r24
     faa:	89 01       	movw	r16, r18
			Write_Char(fontsize, *str++);
			pos++;
		 }
	}else
	{
		while(*str)
     fac:	f9 01       	movw	r30, r18
     fae:	80 81       	ld	r24, Z
	if(fontsize==26)
     fb0:	fa e1       	ldi	r31, 0x1A	; 26
     fb2:	ef 16       	cp	r14, r31
     fb4:	d1 f1       	breq	.+116    	; 0x102a <Write_String+0x96>
		while(*str)
     fb6:	88 23       	and	r24, r24
     fb8:	69 f1       	breq	.+90     	; 0x1014 <Write_String+0x80>
		{
			Set_Page_Address(7-pos);			//0-7 	(* 8 bit)
			Set_Column_Address(row*fontsize);	//0-3	(* 14 collums / char)
     fba:	e6 9e       	mul	r14, r22
     fbc:	60 2d       	mov	r22, r0
     fbe:	11 24       	eor	r1, r1
{	 add+=40;
     fc0:	68 5d       	subi	r22, 0xD8	; 216
    send_command((0x10|(add>>4)));
     fc2:	86 2f       	mov	r24, r22
     fc4:	82 95       	swap	r24
     fc6:	8f 70       	andi	r24, 0x0F	; 15
     fc8:	d8 2e       	mov	r13, r24
     fca:	68 94       	set
     fcc:	d4 f8       	bld	r13, 4
	send_command((0x0f&add));
     fce:	6f 70       	andi	r22, 0x0F	; 15
     fd0:	f6 2e       	mov	r15, r22
     fd2:	e9 01       	movw	r28, r18
     fd4:	12 2f       	mov	r17, r18
     fd6:	19 5f       	subi	r17, 0xF9	; 249
    add=0xb0|add;
     fd8:	14 1b       	sub	r17, r20
	DISP_COMM;
     fda:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     fdc:	28 98       	cbi	0x05, 0	; 5
    add=0xb0|add;
     fde:	81 2f       	mov	r24, r17
     fe0:	8c 1b       	sub	r24, r28
	SPI_MasterTransmit(command);
     fe2:	80 6b       	ori	r24, 0xB0	; 176
     fe4:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     fe8:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     fea:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     fec:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     fee:	8d 2d       	mov	r24, r13
     ff0:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
     ff4:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     ff6:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     ff8:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
     ffa:	8f 2d       	mov	r24, r15
     ffc:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
    1000:	28 9a       	sbi	0x05, 0	; 5
			Write_Char(fontsize, *str++);
    1002:	fe 01       	movw	r30, r28
    1004:	21 96       	adiw	r28, 0x01	; 1
    1006:	60 81       	ld	r22, Z
    1008:	8e 2d       	mov	r24, r14
    100a:	0e 94 a1 07 	call	0xf42	; 0xf42 <Write_Char>
		while(*str)
    100e:	98 81       	ld	r25, Y
    1010:	91 11       	cpse	r25, r1
    1012:	e3 cf       	rjmp	.-58     	; 0xfda <Write_String+0x46>
			pos++;
		 }
	}
}
    1014:	df 91       	pop	r29
    1016:	cf 91       	pop	r28
    1018:	1f 91       	pop	r17
    101a:	0f 91       	pop	r16
    101c:	ff 90       	pop	r15
    101e:	ef 90       	pop	r14
    1020:	df 90       	pop	r13
    1022:	cf 90       	pop	r12
    1024:	bf 90       	pop	r11
    1026:	af 90       	pop	r10
    1028:	08 95       	ret
		while(*str)
    102a:	88 23       	and	r24, r24
    102c:	99 f3       	breq	.-26     	; 0x1014 <Write_String+0x80>
			Set_Column_Address(row*fontsize);	//0-3	(* 14 collums / char)
    102e:	6e 9d       	mul	r22, r14
    1030:	60 2d       	mov	r22, r0
    1032:	11 24       	eor	r1, r1
{	 add+=40;
    1034:	68 5d       	subi	r22, 0xD8	; 216
    send_command((0x10|(add>>4)));
    1036:	86 2f       	mov	r24, r22
    1038:	82 95       	swap	r24
    103a:	8f 70       	andi	r24, 0x0F	; 15
    103c:	b8 2e       	mov	r11, r24
    103e:	68 94       	set
    1040:	b4 f8       	bld	r11, 4
	send_command((0x0f&add));
    1042:	6f 70       	andi	r22, 0x0F	; 15
    1044:	d6 2e       	mov	r13, r22
    1046:	44 0f       	add	r20, r20
    1048:	97 e0       	ldi	r25, 0x07	; 7
    104a:	c9 2e       	mov	r12, r25
    104c:	c4 1a       	sub	r12, r20
		send_data(pgm_read_byte(&fontpointer[(n*fontsize)+x]));
    104e:	8a e1       	ldi	r24, 0x1A	; 26
    1050:	a8 2e       	mov	r10, r24
	DISP_COMM;
    1052:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
    1054:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
    1056:	8c 2d       	mov	r24, r12
    1058:	80 6b       	ori	r24, 0xB0	; 176
    105a:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
    105e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
    1060:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
    1062:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
    1064:	8b 2d       	mov	r24, r11
    1066:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
    106a:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
    106c:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
    106e:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(command);
    1070:	8d 2d       	mov	r24, r13
    1072:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
    1076:	28 9a       	sbi	0x05, 0	; 5
			Write_Char(fontsize, *str++);
    1078:	f8 01       	movw	r30, r16
	n-=0x20;			//jump to position in asci table
    107a:	c0 81       	ld	r28, Z
    107c:	0f 5f       	subi	r16, 0xFF	; 255
    107e:	1f 4f       	sbci	r17, 0xFF	; 255
    1080:	c0 52       	subi	r28, 0x20	; 32
		send_data(pgm_read_byte(&fontpointer[(n*fontsize)+x]));
    1082:	ca 9d       	mul	r28, r10
    1084:	e0 01       	movw	r28, r0
    1086:	11 24       	eor	r1, r1
    1088:	7e 01       	movw	r14, r28
    108a:	8a e1       	ldi	r24, 0x1A	; 26
    108c:	e8 0e       	add	r14, r24
    108e:	f1 1c       	adc	r15, r1
    1090:	fe 01       	movw	r30, r28
    1092:	84 91       	lpm	r24, Z
	DISP_DATA;
    1094:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
    1096:	28 98       	cbi	0x05, 0	; 5
	SPI_MasterTransmit(data);
    1098:	0e 94 5d 08 	call	0x10ba	; 0x10ba <SPI_MasterTransmit>
	CS_DISP_1;
    109c:	28 9a       	sbi	0x05, 0	; 5
	for(x=0;x<fontsize;x++) 
    109e:	21 96       	adiw	r28, 0x01	; 1
    10a0:	ec 16       	cp	r14, r28
    10a2:	fd 06       	cpc	r15, r29
    10a4:	a9 f7       	brne	.-22     	; 0x1090 <Write_String+0xfc>
		while(*str)
    10a6:	ca 94       	dec	r12
    10a8:	ca 94       	dec	r12
    10aa:	f8 01       	movw	r30, r16
    10ac:	80 81       	ld	r24, Z
    10ae:	81 11       	cpse	r24, r1
    10b0:	d0 cf       	rjmp	.-96     	; 0x1052 <Write_String+0xbe>
    10b2:	b0 cf       	rjmp	.-160    	; 0x1014 <Write_String+0x80>

000010b4 <SPI_MasterInit>:
void SPI_MasterInit(void)
{
	/* Set MOSI and SCK output, all others input */
	//DDRB = (1<<MOSI)|(1<<SCK);
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR0 = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
    10b4:	81 e5       	ldi	r24, 0x51	; 81
    10b6:	8c bd       	out	0x2c, r24	; 44
}
    10b8:	08 95       	ret

000010ba <SPI_MasterTransmit>:
void SPI_MasterTransmit(char cData)
{
	/* Start transmission */
	SPDR0 = cData;
    10ba:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while(!(SPSR0 & (1<<SPIF)));
    10bc:	0d b4       	in	r0, 0x2d	; 45
    10be:	07 fe       	sbrs	r0, 7
    10c0:	fd cf       	rjmp	.-6      	; 0x10bc <SPI_MasterTransmit+0x2>
}
    10c2:	08 95       	ret

000010c4 <main>:
	DDRB 	|= (1<<PB0) | (1<<PB1) | (1<<PB2) | (1<<PB3) | (1<<PB5);//set CS_DISP and RES and D/C output
    10c4:	84 b1       	in	r24, 0x04	; 4
    10c6:	8f 62       	ori	r24, 0x2F	; 47
    10c8:	84 b9       	out	0x04, r24	; 4
	PORTB	|= (1<<PB0) | (1<<PB1) | (1<<PB2) | (1<<PB3) | (1<<PB5);//set CS_DISP and RES and D/C high
    10ca:	85 b1       	in	r24, 0x05	; 5
    10cc:	8f 62       	ori	r24, 0x2F	; 47
    10ce:	85 b9       	out	0x05, r24	; 5
	DDRC |= (1<<PC5) | (1<<PC4);	//set pins for SCL und SDA as output
    10d0:	87 b1       	in	r24, 0x07	; 7
    10d2:	80 63       	ori	r24, 0x30	; 48
    10d4:	87 b9       	out	0x07, r24	; 7
	PORTC |= (1<<PC5) | (1<<PC4);	//set pins high
    10d6:	88 b1       	in	r24, 0x08	; 8
    10d8:	80 63       	ori	r24, 0x30	; 48
    10da:	88 b9       	out	0x08, r24	; 8
	PORTC &= ~(1<<PC5);
    10dc:	45 98       	cbi	0x08, 5	; 8
	DDRD |= (1<<PD1)|(1<<PD2);//set TX0 and SDO as output
    10de:	8a b1       	in	r24, 0x0a	; 10
    10e0:	86 60       	ori	r24, 0x06	; 6
    10e2:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1<<PD1);
    10e4:	59 9a       	sbi	0x0b, 1	; 11
	PORTD &= ~(1<<PD2);
    10e6:	5a 98       	cbi	0x0b, 2	; 11
	DDRD &= ~(1<<PD3) | (1<<PD0);	//Button and RX0 as input(red LED)
    10e8:	53 98       	cbi	0x0a, 3	; 10
	PORTD |= (1<<PD3);	//activate Pullup
    10ea:	5b 9a       	sbi	0x0b, 3	; 11
	SPI_MasterInit();
    10ec:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <SPI_MasterInit>
	OCR1A = 1249;	//OCR1A = 0x3D08;==1sec
    10f0:	81 ee       	ldi	r24, 0xE1	; 225
    10f2:	94 e0       	ldi	r25, 0x04	; 4
    10f4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    10f8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    TCCR1B |= (1 << WGM12);
    10fc:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1100:	88 60       	ori	r24, 0x08	; 8
    1102:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    TIMSK1 |= (1 << OCIE1A);
    1106:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    110a:	82 60       	ori	r24, 0x02	; 2
    110c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    TCCR1B |= (1 << CS11) | (1 << CS10);
    1110:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    1114:	83 60       	ori	r24, 0x03	; 3
    1116:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    sei();
    111a:	78 94       	sei
    ms10=0;
    111c:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <ms10>
    ms100=0;
    1120:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <ms100>
    sec=0;
    1124:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <sec>
    min=0;
    1128:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <min>
    entprell=0;
    112c:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <entprell>
    screentoggle=3;
    1130:	83 e0       	ldi	r24, 0x03	; 3
    1132:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <screentoggle>
    toggle=0;
    1136:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <toggle>
    toggle_alt=toggle;
    113a:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <toggle>
    113e:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <toggle_alt>
	Display_Init();
    1142:	0e 94 54 06 	call	0xca8	; 0xca8 <Display_Init>
	Display_Clear();
    1146:	0e 94 59 07 	call	0xeb2	; 0xeb2 <Display_Clear>
	Set_Page_Address(0);
    114a:	80 e0       	ldi	r24, 0x00	; 0
    114c:	0e 94 f7 06 	call	0xdee	; 0xdee <Set_Page_Address>
    Set_Column_Address(0);
    1150:	80 e0       	ldi	r24, 0x00	; 0
    1152:	0e 94 fe 06 	call	0xdfc	; 0xdfc <Set_Column_Address>
    TWIInit();
    1156:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <TWIInit>
	sht21_init();
    115a:	0e 94 11 05 	call	0xa22	; 0xa22 <sht21_init>
   state = MEASURE;
    115e:	82 e0       	ldi	r24, 0x02	; 2
    1160:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <state>
								state=MEASURE;
    1164:	92 e0       	ldi	r25, 0x02	; 2
    1166:	c9 2e       	mov	r12, r25
								entprell=RELOAD_ENTPRELL;
    1168:	28 e2       	ldi	r18, 0x28	; 40
    116a:	d2 2e       	mov	r13, r18
							sprintf(buffer,"%02X",temp);
    116c:	c1 e5       	ldi	r28, 0x51	; 81
    116e:	d1 e0       	ldi	r29, 0x01	; 1
    1170:	3a e6       	ldi	r19, 0x6A	; 106
    1172:	e3 2e       	mov	r14, r19
    1174:	31 e0       	ldi	r19, 0x01	; 1
    1176:	f3 2e       	mov	r15, r19
							sprintf(buff,"%02X",hum);
    1178:	06 e5       	ldi	r16, 0x56	; 86
    117a:	11 e0       	ldi	r17, 0x01	; 1
		switch(state)
    117c:	81 30       	cpi	r24, 0x01	; 1
    117e:	51 f1       	breq	.+84     	; 0x11d4 <main+0x110>
    1180:	82 30       	cpi	r24, 0x02	; 2
    1182:	09 f4       	brne	.+2      	; 0x1186 <main+0xc2>
    1184:	42 c0       	rjmp	.+132    	; 0x120a <main+0x146>
    1186:	81 11       	cpse	r24, r1
    1188:	f9 cf       	rjmp	.-14     	; 0x117c <main+0xb8>
			case GREETER:	if(BUTTON)
    118a:	4b 99       	sbic	0x09, 3	; 9
    118c:	05 c0       	rjmp	.+10     	; 0x1198 <main+0xd4>
    118e:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <entprell>
    1192:	88 23       	and	r24, r24
    1194:	09 f4       	brne	.+2      	; 0x1198 <main+0xd4>
    1196:	82 c0       	rjmp	.+260    	; 0x129c <main+0x1d8>
							if(toggle)
    1198:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <toggle>
    119c:	88 23       	and	r24, r24
    119e:	09 f4       	brne	.+2      	; 0x11a2 <main+0xde>
    11a0:	6c c0       	rjmp	.+216    	; 0x127a <main+0x1b6>
									Write_String(14,0,0,"If found");
    11a2:	2b e1       	ldi	r18, 0x1B	; 27
    11a4:	31 e0       	ldi	r19, 0x01	; 1
    11a6:	40 e0       	ldi	r20, 0x00	; 0
    11a8:	60 e0       	ldi	r22, 0x00	; 0
    11aa:	8e e0       	ldi	r24, 0x0E	; 14
    11ac:	0e 94 ca 07 	call	0xf94	; 0xf94 <Write_String>
									Write_String(14,1,0,"please  ");
    11b0:	24 e2       	ldi	r18, 0x24	; 36
    11b2:	31 e0       	ldi	r19, 0x01	; 1
    11b4:	40 e0       	ldi	r20, 0x00	; 0
    11b6:	61 e0       	ldi	r22, 0x01	; 1
    11b8:	8e e0       	ldi	r24, 0x0E	; 14
    11ba:	0e 94 ca 07 	call	0xf94	; 0xf94 <Write_String>
									Write_String(14,2,0, "contact ");
    11be:	2d e2       	ldi	r18, 0x2D	; 45
    11c0:	31 e0       	ldi	r19, 0x01	; 1
								Write_String(14,2,0, "  ZERO  ");
    11c2:	40 e0       	ldi	r20, 0x00	; 0
    11c4:	62 e0       	ldi	r22, 0x02	; 2
    11c6:	8e e0       	ldi	r24, 0x0E	; 14
    11c8:	0e 94 ca 07 	call	0xf94	; 0xf94 <Write_String>
		switch(state)
    11cc:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <state>
    11d0:	81 30       	cpi	r24, 0x01	; 1
    11d2:	b1 f6       	brne	.-84     	; 0x1180 <main+0xbc>
			case ZERO:		if(BUTTON)
    11d4:	4b 99       	sbic	0x09, 3	; 9
    11d6:	fe cf       	rjmp	.-4      	; 0x11d4 <main+0x110>
    11d8:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <entprell>
    11dc:	81 11       	cpse	r24, r1
    11de:	fa cf       	rjmp	.-12     	; 0x11d4 <main+0x110>
								state=MEASURE;
    11e0:	c0 92 86 01 	sts	0x0186, r12	; 0x800186 <state>
								entprell=RELOAD_ENTPRELL;
    11e4:	d0 92 81 01 	sts	0x0181, r13	; 0x800181 <entprell>
								Write_String(14,0,0," Button ");
    11e8:	20 e0       	ldi	r18, 0x00	; 0
    11ea:	31 e0       	ldi	r19, 0x01	; 1
    11ec:	40 e0       	ldi	r20, 0x00	; 0
    11ee:	60 e0       	ldi	r22, 0x00	; 0
    11f0:	8e e0       	ldi	r24, 0x0E	; 14
    11f2:	0e 94 ca 07 	call	0xf94	; 0xf94 <Write_String>
								Write_String(14,1,0,"   to   ");
    11f6:	29 e0       	ldi	r18, 0x09	; 9
    11f8:	31 e0       	ldi	r19, 0x01	; 1
    11fa:	40 e0       	ldi	r20, 0x00	; 0
    11fc:	61 e0       	ldi	r22, 0x01	; 1
    11fe:	8e e0       	ldi	r24, 0x0E	; 14
    1200:	0e 94 ca 07 	call	0xf94	; 0xf94 <Write_String>
								Write_String(14,2,0, "  ZERO  ");
    1204:	22 e1       	ldi	r18, 0x12	; 18
    1206:	31 e0       	ldi	r19, 0x01	; 1
    1208:	dc cf       	rjmp	.-72     	; 0x11c2 <main+0xfe>
			case MEASURE:	temp = sht21_measure(1);
    120a:	81 e0       	ldi	r24, 0x01	; 1
    120c:	0e 94 33 05 	call	0xa66	; 0xa66 <sht21_measure>
    1210:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <temp>
    1214:	90 93 8c 01 	sts	0x018C, r25	; 0x80018c <temp+0x1>
							sprintf(buffer,"%02X",temp);
    1218:	9f 93       	push	r25
    121a:	8f 93       	push	r24
    121c:	df 93       	push	r29
    121e:	cf 93       	push	r28
    1220:	ff 92       	push	r15
    1222:	ef 92       	push	r14
    1224:	0e 94 29 0b 	call	0x1652	; 0x1652 <sprintf>
							Write_String(14,0,0,buffer);
    1228:	2a e6       	ldi	r18, 0x6A	; 106
    122a:	31 e0       	ldi	r19, 0x01	; 1
    122c:	40 e0       	ldi	r20, 0x00	; 0
    122e:	60 e0       	ldi	r22, 0x00	; 0
    1230:	8e e0       	ldi	r24, 0x0E	; 14
    1232:	0e 94 ca 07 	call	0xf94	; 0xf94 <Write_String>
							hum = sht21_measure(0);
    1236:	80 e0       	ldi	r24, 0x00	; 0
    1238:	0e 94 33 05 	call	0xa66	; 0xa66 <sht21_measure>
    123c:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <hum>
    1240:	90 93 88 01 	sts	0x0188, r25	; 0x800188 <hum+0x1>
							sprintf(buff,"%02X",hum);
    1244:	9f 93       	push	r25
    1246:	8f 93       	push	r24
    1248:	df 93       	push	r29
    124a:	cf 93       	push	r28
    124c:	1f 93       	push	r17
    124e:	0f 93       	push	r16
    1250:	0e 94 29 0b 	call	0x1652	; 0x1652 <sprintf>
							Write_String(14,1,0,buff);
    1254:	26 e5       	ldi	r18, 0x56	; 86
    1256:	31 e0       	ldi	r19, 0x01	; 1
    1258:	40 e0       	ldi	r20, 0x00	; 0
    125a:	61 e0       	ldi	r22, 0x01	; 1
    125c:	8e e0       	ldi	r24, 0x0E	; 14
    125e:	0e 94 ca 07 	call	0xf94	; 0xf94 <Write_String>
		switch(state)
    1262:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <state>
							break;
    1266:	2d b7       	in	r18, 0x3d	; 61
    1268:	3e b7       	in	r19, 0x3e	; 62
    126a:	24 5f       	subi	r18, 0xF4	; 244
    126c:	3f 4f       	sbci	r19, 0xFF	; 255
    126e:	0f b6       	in	r0, 0x3f	; 63
    1270:	f8 94       	cli
    1272:	3e bf       	out	0x3e, r19	; 62
    1274:	0f be       	out	0x3f, r0	; 63
    1276:	2d bf       	out	0x3d, r18	; 61
    1278:	81 cf       	rjmp	.-254    	; 0x117c <main+0xb8>
									Write_String(14,0,0,"rgroener");
    127a:	26 e3       	ldi	r18, 0x36	; 54
    127c:	31 e0       	ldi	r19, 0x01	; 1
    127e:	40 e0       	ldi	r20, 0x00	; 0
    1280:	60 e0       	ldi	r22, 0x00	; 0
    1282:	8e e0       	ldi	r24, 0x0E	; 14
    1284:	0e 94 ca 07 	call	0xf94	; 0xf94 <Write_String>
									Write_String(14,1,0,"@mailbox");
    1288:	2f e3       	ldi	r18, 0x3F	; 63
    128a:	31 e0       	ldi	r19, 0x01	; 1
    128c:	40 e0       	ldi	r20, 0x00	; 0
    128e:	61 e0       	ldi	r22, 0x01	; 1
    1290:	8e e0       	ldi	r24, 0x0E	; 14
    1292:	0e 94 ca 07 	call	0xf94	; 0xf94 <Write_String>
									Write_String(14,2,0, ".org    ");	
    1296:	28 e4       	ldi	r18, 0x48	; 72
    1298:	31 e0       	ldi	r19, 0x01	; 1
    129a:	93 cf       	rjmp	.-218    	; 0x11c2 <main+0xfe>
								state=ZERO;
    129c:	81 e0       	ldi	r24, 0x01	; 1
    129e:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <state>
								entprell=RELOAD_ENTPRELL;
    12a2:	d0 92 81 01 	sts	0x0181, r13	; 0x800181 <entprell>
								Write_String(14,0,0," Button ");
    12a6:	20 e0       	ldi	r18, 0x00	; 0
    12a8:	31 e0       	ldi	r19, 0x01	; 1
    12aa:	40 e0       	ldi	r20, 0x00	; 0
    12ac:	60 e0       	ldi	r22, 0x00	; 0
    12ae:	8e e0       	ldi	r24, 0x0E	; 14
    12b0:	0e 94 ca 07 	call	0xf94	; 0xf94 <Write_String>
								Write_String(14,1,0,"   to   ");
    12b4:	29 e0       	ldi	r18, 0x09	; 9
    12b6:	31 e0       	ldi	r19, 0x01	; 1
    12b8:	40 e0       	ldi	r20, 0x00	; 0
    12ba:	61 e0       	ldi	r22, 0x01	; 1
    12bc:	8e e0       	ldi	r24, 0x0E	; 14
    12be:	0e 94 ca 07 	call	0xf94	; 0xf94 <Write_String>
								Write_String(14,2,0, "  ZERO  ");
    12c2:	22 e1       	ldi	r18, 0x12	; 18
    12c4:	31 e0       	ldi	r19, 0x01	; 1
    12c6:	40 e0       	ldi	r20, 0x00	; 0
    12c8:	62 e0       	ldi	r22, 0x02	; 2
    12ca:	8e e0       	ldi	r24, 0x0E	; 14
    12cc:	0e 94 ca 07 	call	0xf94	; 0xf94 <Write_String>
    12d0:	63 cf       	rjmp	.-314    	; 0x1198 <main+0xd4>

000012d2 <__subsf3>:
    12d2:	50 58       	subi	r21, 0x80	; 128

000012d4 <__addsf3>:
    12d4:	bb 27       	eor	r27, r27
    12d6:	aa 27       	eor	r26, r26
    12d8:	0e 94 81 09 	call	0x1302	; 0x1302 <__addsf3x>
    12dc:	0c 94 60 0a 	jmp	0x14c0	; 0x14c0 <__fp_round>
    12e0:	0e 94 52 0a 	call	0x14a4	; 0x14a4 <__fp_pscA>
    12e4:	38 f0       	brcs	.+14     	; 0x12f4 <__addsf3+0x20>
    12e6:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__fp_pscB>
    12ea:	20 f0       	brcs	.+8      	; 0x12f4 <__addsf3+0x20>
    12ec:	39 f4       	brne	.+14     	; 0x12fc <__addsf3+0x28>
    12ee:	9f 3f       	cpi	r25, 0xFF	; 255
    12f0:	19 f4       	brne	.+6      	; 0x12f8 <__addsf3+0x24>
    12f2:	26 f4       	brtc	.+8      	; 0x12fc <__addsf3+0x28>
    12f4:	0c 94 4f 0a 	jmp	0x149e	; 0x149e <__fp_nan>
    12f8:	0e f4       	brtc	.+2      	; 0x12fc <__addsf3+0x28>
    12fa:	e0 95       	com	r30
    12fc:	e7 fb       	bst	r30, 7
    12fe:	0c 94 49 0a 	jmp	0x1492	; 0x1492 <__fp_inf>

00001302 <__addsf3x>:
    1302:	e9 2f       	mov	r30, r25
    1304:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <__fp_split3>
    1308:	58 f3       	brcs	.-42     	; 0x12e0 <__addsf3+0xc>
    130a:	ba 17       	cp	r27, r26
    130c:	62 07       	cpc	r22, r18
    130e:	73 07       	cpc	r23, r19
    1310:	84 07       	cpc	r24, r20
    1312:	95 07       	cpc	r25, r21
    1314:	20 f0       	brcs	.+8      	; 0x131e <__addsf3x+0x1c>
    1316:	79 f4       	brne	.+30     	; 0x1336 <__addsf3x+0x34>
    1318:	a6 f5       	brtc	.+104    	; 0x1382 <__addsf3x+0x80>
    131a:	0c 94 93 0a 	jmp	0x1526	; 0x1526 <__fp_zero>
    131e:	0e f4       	brtc	.+2      	; 0x1322 <__addsf3x+0x20>
    1320:	e0 95       	com	r30
    1322:	0b 2e       	mov	r0, r27
    1324:	ba 2f       	mov	r27, r26
    1326:	a0 2d       	mov	r26, r0
    1328:	0b 01       	movw	r0, r22
    132a:	b9 01       	movw	r22, r18
    132c:	90 01       	movw	r18, r0
    132e:	0c 01       	movw	r0, r24
    1330:	ca 01       	movw	r24, r20
    1332:	a0 01       	movw	r20, r0
    1334:	11 24       	eor	r1, r1
    1336:	ff 27       	eor	r31, r31
    1338:	59 1b       	sub	r21, r25
    133a:	99 f0       	breq	.+38     	; 0x1362 <__addsf3x+0x60>
    133c:	59 3f       	cpi	r21, 0xF9	; 249
    133e:	50 f4       	brcc	.+20     	; 0x1354 <__addsf3x+0x52>
    1340:	50 3e       	cpi	r21, 0xE0	; 224
    1342:	68 f1       	brcs	.+90     	; 0x139e <__addsf3x+0x9c>
    1344:	1a 16       	cp	r1, r26
    1346:	f0 40       	sbci	r31, 0x00	; 0
    1348:	a2 2f       	mov	r26, r18
    134a:	23 2f       	mov	r18, r19
    134c:	34 2f       	mov	r19, r20
    134e:	44 27       	eor	r20, r20
    1350:	58 5f       	subi	r21, 0xF8	; 248
    1352:	f3 cf       	rjmp	.-26     	; 0x133a <__addsf3x+0x38>
    1354:	46 95       	lsr	r20
    1356:	37 95       	ror	r19
    1358:	27 95       	ror	r18
    135a:	a7 95       	ror	r26
    135c:	f0 40       	sbci	r31, 0x00	; 0
    135e:	53 95       	inc	r21
    1360:	c9 f7       	brne	.-14     	; 0x1354 <__addsf3x+0x52>
    1362:	7e f4       	brtc	.+30     	; 0x1382 <__addsf3x+0x80>
    1364:	1f 16       	cp	r1, r31
    1366:	ba 0b       	sbc	r27, r26
    1368:	62 0b       	sbc	r22, r18
    136a:	73 0b       	sbc	r23, r19
    136c:	84 0b       	sbc	r24, r20
    136e:	ba f0       	brmi	.+46     	; 0x139e <__addsf3x+0x9c>
    1370:	91 50       	subi	r25, 0x01	; 1
    1372:	a1 f0       	breq	.+40     	; 0x139c <__addsf3x+0x9a>
    1374:	ff 0f       	add	r31, r31
    1376:	bb 1f       	adc	r27, r27
    1378:	66 1f       	adc	r22, r22
    137a:	77 1f       	adc	r23, r23
    137c:	88 1f       	adc	r24, r24
    137e:	c2 f7       	brpl	.-16     	; 0x1370 <__addsf3x+0x6e>
    1380:	0e c0       	rjmp	.+28     	; 0x139e <__addsf3x+0x9c>
    1382:	ba 0f       	add	r27, r26
    1384:	62 1f       	adc	r22, r18
    1386:	73 1f       	adc	r23, r19
    1388:	84 1f       	adc	r24, r20
    138a:	48 f4       	brcc	.+18     	; 0x139e <__addsf3x+0x9c>
    138c:	87 95       	ror	r24
    138e:	77 95       	ror	r23
    1390:	67 95       	ror	r22
    1392:	b7 95       	ror	r27
    1394:	f7 95       	ror	r31
    1396:	9e 3f       	cpi	r25, 0xFE	; 254
    1398:	08 f0       	brcs	.+2      	; 0x139c <__addsf3x+0x9a>
    139a:	b0 cf       	rjmp	.-160    	; 0x12fc <__addsf3+0x28>
    139c:	93 95       	inc	r25
    139e:	88 0f       	add	r24, r24
    13a0:	08 f0       	brcs	.+2      	; 0x13a4 <__addsf3x+0xa2>
    13a2:	99 27       	eor	r25, r25
    13a4:	ee 0f       	add	r30, r30
    13a6:	97 95       	ror	r25
    13a8:	87 95       	ror	r24
    13aa:	08 95       	ret

000013ac <__fixsfsi>:
    13ac:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__fixunssfsi>
    13b0:	68 94       	set
    13b2:	b1 11       	cpse	r27, r1
    13b4:	0c 94 94 0a 	jmp	0x1528	; 0x1528 <__fp_szero>
    13b8:	08 95       	ret

000013ba <__fixunssfsi>:
    13ba:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <__fp_splitA>
    13be:	88 f0       	brcs	.+34     	; 0x13e2 <__fixunssfsi+0x28>
    13c0:	9f 57       	subi	r25, 0x7F	; 127
    13c2:	98 f0       	brcs	.+38     	; 0x13ea <__fixunssfsi+0x30>
    13c4:	b9 2f       	mov	r27, r25
    13c6:	99 27       	eor	r25, r25
    13c8:	b7 51       	subi	r27, 0x17	; 23
    13ca:	b0 f0       	brcs	.+44     	; 0x13f8 <__fixunssfsi+0x3e>
    13cc:	e1 f0       	breq	.+56     	; 0x1406 <__fixunssfsi+0x4c>
    13ce:	66 0f       	add	r22, r22
    13d0:	77 1f       	adc	r23, r23
    13d2:	88 1f       	adc	r24, r24
    13d4:	99 1f       	adc	r25, r25
    13d6:	1a f0       	brmi	.+6      	; 0x13de <__fixunssfsi+0x24>
    13d8:	ba 95       	dec	r27
    13da:	c9 f7       	brne	.-14     	; 0x13ce <__fixunssfsi+0x14>
    13dc:	14 c0       	rjmp	.+40     	; 0x1406 <__fixunssfsi+0x4c>
    13de:	b1 30       	cpi	r27, 0x01	; 1
    13e0:	91 f0       	breq	.+36     	; 0x1406 <__fixunssfsi+0x4c>
    13e2:	0e 94 93 0a 	call	0x1526	; 0x1526 <__fp_zero>
    13e6:	b1 e0       	ldi	r27, 0x01	; 1
    13e8:	08 95       	ret
    13ea:	0c 94 93 0a 	jmp	0x1526	; 0x1526 <__fp_zero>
    13ee:	67 2f       	mov	r22, r23
    13f0:	78 2f       	mov	r23, r24
    13f2:	88 27       	eor	r24, r24
    13f4:	b8 5f       	subi	r27, 0xF8	; 248
    13f6:	39 f0       	breq	.+14     	; 0x1406 <__fixunssfsi+0x4c>
    13f8:	b9 3f       	cpi	r27, 0xF9	; 249
    13fa:	cc f3       	brlt	.-14     	; 0x13ee <__fixunssfsi+0x34>
    13fc:	86 95       	lsr	r24
    13fe:	77 95       	ror	r23
    1400:	67 95       	ror	r22
    1402:	b3 95       	inc	r27
    1404:	d9 f7       	brne	.-10     	; 0x13fc <__fixunssfsi+0x42>
    1406:	3e f4       	brtc	.+14     	; 0x1416 <__fixunssfsi+0x5c>
    1408:	90 95       	com	r25
    140a:	80 95       	com	r24
    140c:	70 95       	com	r23
    140e:	61 95       	neg	r22
    1410:	7f 4f       	sbci	r23, 0xFF	; 255
    1412:	8f 4f       	sbci	r24, 0xFF	; 255
    1414:	9f 4f       	sbci	r25, 0xFF	; 255
    1416:	08 95       	ret

00001418 <__floatunsisf>:
    1418:	e8 94       	clt
    141a:	09 c0       	rjmp	.+18     	; 0x142e <__floatsisf+0x12>

0000141c <__floatsisf>:
    141c:	97 fb       	bst	r25, 7
    141e:	3e f4       	brtc	.+14     	; 0x142e <__floatsisf+0x12>
    1420:	90 95       	com	r25
    1422:	80 95       	com	r24
    1424:	70 95       	com	r23
    1426:	61 95       	neg	r22
    1428:	7f 4f       	sbci	r23, 0xFF	; 255
    142a:	8f 4f       	sbci	r24, 0xFF	; 255
    142c:	9f 4f       	sbci	r25, 0xFF	; 255
    142e:	99 23       	and	r25, r25
    1430:	a9 f0       	breq	.+42     	; 0x145c <__floatsisf+0x40>
    1432:	f9 2f       	mov	r31, r25
    1434:	96 e9       	ldi	r25, 0x96	; 150
    1436:	bb 27       	eor	r27, r27
    1438:	93 95       	inc	r25
    143a:	f6 95       	lsr	r31
    143c:	87 95       	ror	r24
    143e:	77 95       	ror	r23
    1440:	67 95       	ror	r22
    1442:	b7 95       	ror	r27
    1444:	f1 11       	cpse	r31, r1
    1446:	f8 cf       	rjmp	.-16     	; 0x1438 <__floatsisf+0x1c>
    1448:	fa f4       	brpl	.+62     	; 0x1488 <__floatsisf+0x6c>
    144a:	bb 0f       	add	r27, r27
    144c:	11 f4       	brne	.+4      	; 0x1452 <__floatsisf+0x36>
    144e:	60 ff       	sbrs	r22, 0
    1450:	1b c0       	rjmp	.+54     	; 0x1488 <__floatsisf+0x6c>
    1452:	6f 5f       	subi	r22, 0xFF	; 255
    1454:	7f 4f       	sbci	r23, 0xFF	; 255
    1456:	8f 4f       	sbci	r24, 0xFF	; 255
    1458:	9f 4f       	sbci	r25, 0xFF	; 255
    145a:	16 c0       	rjmp	.+44     	; 0x1488 <__floatsisf+0x6c>
    145c:	88 23       	and	r24, r24
    145e:	11 f0       	breq	.+4      	; 0x1464 <__floatsisf+0x48>
    1460:	96 e9       	ldi	r25, 0x96	; 150
    1462:	11 c0       	rjmp	.+34     	; 0x1486 <__floatsisf+0x6a>
    1464:	77 23       	and	r23, r23
    1466:	21 f0       	breq	.+8      	; 0x1470 <__floatsisf+0x54>
    1468:	9e e8       	ldi	r25, 0x8E	; 142
    146a:	87 2f       	mov	r24, r23
    146c:	76 2f       	mov	r23, r22
    146e:	05 c0       	rjmp	.+10     	; 0x147a <__floatsisf+0x5e>
    1470:	66 23       	and	r22, r22
    1472:	71 f0       	breq	.+28     	; 0x1490 <__floatsisf+0x74>
    1474:	96 e8       	ldi	r25, 0x86	; 134
    1476:	86 2f       	mov	r24, r22
    1478:	70 e0       	ldi	r23, 0x00	; 0
    147a:	60 e0       	ldi	r22, 0x00	; 0
    147c:	2a f0       	brmi	.+10     	; 0x1488 <__floatsisf+0x6c>
    147e:	9a 95       	dec	r25
    1480:	66 0f       	add	r22, r22
    1482:	77 1f       	adc	r23, r23
    1484:	88 1f       	adc	r24, r24
    1486:	da f7       	brpl	.-10     	; 0x147e <__floatsisf+0x62>
    1488:	88 0f       	add	r24, r24
    148a:	96 95       	lsr	r25
    148c:	87 95       	ror	r24
    148e:	97 f9       	bld	r25, 7
    1490:	08 95       	ret

00001492 <__fp_inf>:
    1492:	97 f9       	bld	r25, 7
    1494:	9f 67       	ori	r25, 0x7F	; 127
    1496:	80 e8       	ldi	r24, 0x80	; 128
    1498:	70 e0       	ldi	r23, 0x00	; 0
    149a:	60 e0       	ldi	r22, 0x00	; 0
    149c:	08 95       	ret

0000149e <__fp_nan>:
    149e:	9f ef       	ldi	r25, 0xFF	; 255
    14a0:	80 ec       	ldi	r24, 0xC0	; 192
    14a2:	08 95       	ret

000014a4 <__fp_pscA>:
    14a4:	00 24       	eor	r0, r0
    14a6:	0a 94       	dec	r0
    14a8:	16 16       	cp	r1, r22
    14aa:	17 06       	cpc	r1, r23
    14ac:	18 06       	cpc	r1, r24
    14ae:	09 06       	cpc	r0, r25
    14b0:	08 95       	ret

000014b2 <__fp_pscB>:
    14b2:	00 24       	eor	r0, r0
    14b4:	0a 94       	dec	r0
    14b6:	12 16       	cp	r1, r18
    14b8:	13 06       	cpc	r1, r19
    14ba:	14 06       	cpc	r1, r20
    14bc:	05 06       	cpc	r0, r21
    14be:	08 95       	ret

000014c0 <__fp_round>:
    14c0:	09 2e       	mov	r0, r25
    14c2:	03 94       	inc	r0
    14c4:	00 0c       	add	r0, r0
    14c6:	11 f4       	brne	.+4      	; 0x14cc <__fp_round+0xc>
    14c8:	88 23       	and	r24, r24
    14ca:	52 f0       	brmi	.+20     	; 0x14e0 <__fp_round+0x20>
    14cc:	bb 0f       	add	r27, r27
    14ce:	40 f4       	brcc	.+16     	; 0x14e0 <__fp_round+0x20>
    14d0:	bf 2b       	or	r27, r31
    14d2:	11 f4       	brne	.+4      	; 0x14d8 <__fp_round+0x18>
    14d4:	60 ff       	sbrs	r22, 0
    14d6:	04 c0       	rjmp	.+8      	; 0x14e0 <__fp_round+0x20>
    14d8:	6f 5f       	subi	r22, 0xFF	; 255
    14da:	7f 4f       	sbci	r23, 0xFF	; 255
    14dc:	8f 4f       	sbci	r24, 0xFF	; 255
    14de:	9f 4f       	sbci	r25, 0xFF	; 255
    14e0:	08 95       	ret

000014e2 <__fp_split3>:
    14e2:	57 fd       	sbrc	r21, 7
    14e4:	90 58       	subi	r25, 0x80	; 128
    14e6:	44 0f       	add	r20, r20
    14e8:	55 1f       	adc	r21, r21
    14ea:	59 f0       	breq	.+22     	; 0x1502 <__fp_splitA+0x10>
    14ec:	5f 3f       	cpi	r21, 0xFF	; 255
    14ee:	71 f0       	breq	.+28     	; 0x150c <__fp_splitA+0x1a>
    14f0:	47 95       	ror	r20

000014f2 <__fp_splitA>:
    14f2:	88 0f       	add	r24, r24
    14f4:	97 fb       	bst	r25, 7
    14f6:	99 1f       	adc	r25, r25
    14f8:	61 f0       	breq	.+24     	; 0x1512 <__fp_splitA+0x20>
    14fa:	9f 3f       	cpi	r25, 0xFF	; 255
    14fc:	79 f0       	breq	.+30     	; 0x151c <__fp_splitA+0x2a>
    14fe:	87 95       	ror	r24
    1500:	08 95       	ret
    1502:	12 16       	cp	r1, r18
    1504:	13 06       	cpc	r1, r19
    1506:	14 06       	cpc	r1, r20
    1508:	55 1f       	adc	r21, r21
    150a:	f2 cf       	rjmp	.-28     	; 0x14f0 <__fp_split3+0xe>
    150c:	46 95       	lsr	r20
    150e:	f1 df       	rcall	.-30     	; 0x14f2 <__fp_splitA>
    1510:	08 c0       	rjmp	.+16     	; 0x1522 <__fp_splitA+0x30>
    1512:	16 16       	cp	r1, r22
    1514:	17 06       	cpc	r1, r23
    1516:	18 06       	cpc	r1, r24
    1518:	99 1f       	adc	r25, r25
    151a:	f1 cf       	rjmp	.-30     	; 0x14fe <__fp_splitA+0xc>
    151c:	86 95       	lsr	r24
    151e:	71 05       	cpc	r23, r1
    1520:	61 05       	cpc	r22, r1
    1522:	08 94       	sec
    1524:	08 95       	ret

00001526 <__fp_zero>:
    1526:	e8 94       	clt

00001528 <__fp_szero>:
    1528:	bb 27       	eor	r27, r27
    152a:	66 27       	eor	r22, r22
    152c:	77 27       	eor	r23, r23
    152e:	cb 01       	movw	r24, r22
    1530:	97 f9       	bld	r25, 7
    1532:	08 95       	ret

00001534 <__mulsf3>:
    1534:	0e 94 ad 0a 	call	0x155a	; 0x155a <__mulsf3x>
    1538:	0c 94 60 0a 	jmp	0x14c0	; 0x14c0 <__fp_round>
    153c:	0e 94 52 0a 	call	0x14a4	; 0x14a4 <__fp_pscA>
    1540:	38 f0       	brcs	.+14     	; 0x1550 <__mulsf3+0x1c>
    1542:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__fp_pscB>
    1546:	20 f0       	brcs	.+8      	; 0x1550 <__mulsf3+0x1c>
    1548:	95 23       	and	r25, r21
    154a:	11 f0       	breq	.+4      	; 0x1550 <__mulsf3+0x1c>
    154c:	0c 94 49 0a 	jmp	0x1492	; 0x1492 <__fp_inf>
    1550:	0c 94 4f 0a 	jmp	0x149e	; 0x149e <__fp_nan>
    1554:	11 24       	eor	r1, r1
    1556:	0c 94 94 0a 	jmp	0x1528	; 0x1528 <__fp_szero>

0000155a <__mulsf3x>:
    155a:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <__fp_split3>
    155e:	70 f3       	brcs	.-36     	; 0x153c <__mulsf3+0x8>

00001560 <__mulsf3_pse>:
    1560:	95 9f       	mul	r25, r21
    1562:	c1 f3       	breq	.-16     	; 0x1554 <__mulsf3+0x20>
    1564:	95 0f       	add	r25, r21
    1566:	50 e0       	ldi	r21, 0x00	; 0
    1568:	55 1f       	adc	r21, r21
    156a:	62 9f       	mul	r22, r18
    156c:	f0 01       	movw	r30, r0
    156e:	72 9f       	mul	r23, r18
    1570:	bb 27       	eor	r27, r27
    1572:	f0 0d       	add	r31, r0
    1574:	b1 1d       	adc	r27, r1
    1576:	63 9f       	mul	r22, r19
    1578:	aa 27       	eor	r26, r26
    157a:	f0 0d       	add	r31, r0
    157c:	b1 1d       	adc	r27, r1
    157e:	aa 1f       	adc	r26, r26
    1580:	64 9f       	mul	r22, r20
    1582:	66 27       	eor	r22, r22
    1584:	b0 0d       	add	r27, r0
    1586:	a1 1d       	adc	r26, r1
    1588:	66 1f       	adc	r22, r22
    158a:	82 9f       	mul	r24, r18
    158c:	22 27       	eor	r18, r18
    158e:	b0 0d       	add	r27, r0
    1590:	a1 1d       	adc	r26, r1
    1592:	62 1f       	adc	r22, r18
    1594:	73 9f       	mul	r23, r19
    1596:	b0 0d       	add	r27, r0
    1598:	a1 1d       	adc	r26, r1
    159a:	62 1f       	adc	r22, r18
    159c:	83 9f       	mul	r24, r19
    159e:	a0 0d       	add	r26, r0
    15a0:	61 1d       	adc	r22, r1
    15a2:	22 1f       	adc	r18, r18
    15a4:	74 9f       	mul	r23, r20
    15a6:	33 27       	eor	r19, r19
    15a8:	a0 0d       	add	r26, r0
    15aa:	61 1d       	adc	r22, r1
    15ac:	23 1f       	adc	r18, r19
    15ae:	84 9f       	mul	r24, r20
    15b0:	60 0d       	add	r22, r0
    15b2:	21 1d       	adc	r18, r1
    15b4:	82 2f       	mov	r24, r18
    15b6:	76 2f       	mov	r23, r22
    15b8:	6a 2f       	mov	r22, r26
    15ba:	11 24       	eor	r1, r1
    15bc:	9f 57       	subi	r25, 0x7F	; 127
    15be:	50 40       	sbci	r21, 0x00	; 0
    15c0:	9a f0       	brmi	.+38     	; 0x15e8 <__mulsf3_pse+0x88>
    15c2:	f1 f0       	breq	.+60     	; 0x1600 <__mulsf3_pse+0xa0>
    15c4:	88 23       	and	r24, r24
    15c6:	4a f0       	brmi	.+18     	; 0x15da <__mulsf3_pse+0x7a>
    15c8:	ee 0f       	add	r30, r30
    15ca:	ff 1f       	adc	r31, r31
    15cc:	bb 1f       	adc	r27, r27
    15ce:	66 1f       	adc	r22, r22
    15d0:	77 1f       	adc	r23, r23
    15d2:	88 1f       	adc	r24, r24
    15d4:	91 50       	subi	r25, 0x01	; 1
    15d6:	50 40       	sbci	r21, 0x00	; 0
    15d8:	a9 f7       	brne	.-22     	; 0x15c4 <__mulsf3_pse+0x64>
    15da:	9e 3f       	cpi	r25, 0xFE	; 254
    15dc:	51 05       	cpc	r21, r1
    15de:	80 f0       	brcs	.+32     	; 0x1600 <__mulsf3_pse+0xa0>
    15e0:	0c 94 49 0a 	jmp	0x1492	; 0x1492 <__fp_inf>
    15e4:	0c 94 94 0a 	jmp	0x1528	; 0x1528 <__fp_szero>
    15e8:	5f 3f       	cpi	r21, 0xFF	; 255
    15ea:	e4 f3       	brlt	.-8      	; 0x15e4 <__mulsf3_pse+0x84>
    15ec:	98 3e       	cpi	r25, 0xE8	; 232
    15ee:	d4 f3       	brlt	.-12     	; 0x15e4 <__mulsf3_pse+0x84>
    15f0:	86 95       	lsr	r24
    15f2:	77 95       	ror	r23
    15f4:	67 95       	ror	r22
    15f6:	b7 95       	ror	r27
    15f8:	f7 95       	ror	r31
    15fa:	e7 95       	ror	r30
    15fc:	9f 5f       	subi	r25, 0xFF	; 255
    15fe:	c1 f7       	brne	.-16     	; 0x15f0 <__mulsf3_pse+0x90>
    1600:	fe 2b       	or	r31, r30
    1602:	88 0f       	add	r24, r24
    1604:	91 1d       	adc	r25, r1
    1606:	96 95       	lsr	r25
    1608:	87 95       	ror	r24
    160a:	97 f9       	bld	r25, 7
    160c:	08 95       	ret

0000160e <__udivmodsi4>:
    160e:	a1 e2       	ldi	r26, 0x21	; 33
    1610:	1a 2e       	mov	r1, r26
    1612:	aa 1b       	sub	r26, r26
    1614:	bb 1b       	sub	r27, r27
    1616:	fd 01       	movw	r30, r26
    1618:	0d c0       	rjmp	.+26     	; 0x1634 <__udivmodsi4_ep>

0000161a <__udivmodsi4_loop>:
    161a:	aa 1f       	adc	r26, r26
    161c:	bb 1f       	adc	r27, r27
    161e:	ee 1f       	adc	r30, r30
    1620:	ff 1f       	adc	r31, r31
    1622:	a2 17       	cp	r26, r18
    1624:	b3 07       	cpc	r27, r19
    1626:	e4 07       	cpc	r30, r20
    1628:	f5 07       	cpc	r31, r21
    162a:	20 f0       	brcs	.+8      	; 0x1634 <__udivmodsi4_ep>
    162c:	a2 1b       	sub	r26, r18
    162e:	b3 0b       	sbc	r27, r19
    1630:	e4 0b       	sbc	r30, r20
    1632:	f5 0b       	sbc	r31, r21

00001634 <__udivmodsi4_ep>:
    1634:	66 1f       	adc	r22, r22
    1636:	77 1f       	adc	r23, r23
    1638:	88 1f       	adc	r24, r24
    163a:	99 1f       	adc	r25, r25
    163c:	1a 94       	dec	r1
    163e:	69 f7       	brne	.-38     	; 0x161a <__udivmodsi4_loop>
    1640:	60 95       	com	r22
    1642:	70 95       	com	r23
    1644:	80 95       	com	r24
    1646:	90 95       	com	r25
    1648:	9b 01       	movw	r18, r22
    164a:	ac 01       	movw	r20, r24
    164c:	bd 01       	movw	r22, r26
    164e:	cf 01       	movw	r24, r30
    1650:	08 95       	ret

00001652 <sprintf>:
    1652:	ae e0       	ldi	r26, 0x0E	; 14
    1654:	b0 e0       	ldi	r27, 0x00	; 0
    1656:	ef e2       	ldi	r30, 0x2F	; 47
    1658:	fb e0       	ldi	r31, 0x0B	; 11
    165a:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__prologue_saves__+0x1c>
    165e:	0d 89       	ldd	r16, Y+21	; 0x15
    1660:	1e 89       	ldd	r17, Y+22	; 0x16
    1662:	86 e0       	ldi	r24, 0x06	; 6
    1664:	8c 83       	std	Y+4, r24	; 0x04
    1666:	1a 83       	std	Y+2, r17	; 0x02
    1668:	09 83       	std	Y+1, r16	; 0x01
    166a:	8f ef       	ldi	r24, 0xFF	; 255
    166c:	9f e7       	ldi	r25, 0x7F	; 127
    166e:	9e 83       	std	Y+6, r25	; 0x06
    1670:	8d 83       	std	Y+5, r24	; 0x05
    1672:	ae 01       	movw	r20, r28
    1674:	47 5e       	subi	r20, 0xE7	; 231
    1676:	5f 4f       	sbci	r21, 0xFF	; 255
    1678:	6f 89       	ldd	r22, Y+23	; 0x17
    167a:	78 8d       	ldd	r23, Y+24	; 0x18
    167c:	ce 01       	movw	r24, r28
    167e:	01 96       	adiw	r24, 0x01	; 1
    1680:	0e 94 4c 0b 	call	0x1698	; 0x1698 <vfprintf>
    1684:	2f 81       	ldd	r18, Y+7	; 0x07
    1686:	38 85       	ldd	r19, Y+8	; 0x08
    1688:	02 0f       	add	r16, r18
    168a:	13 1f       	adc	r17, r19
    168c:	f8 01       	movw	r30, r16
    168e:	10 82       	st	Z, r1
    1690:	2e 96       	adiw	r28, 0x0e	; 14
    1692:	e4 e0       	ldi	r30, 0x04	; 4
    1694:	0c 94 ed 0d 	jmp	0x1bda	; 0x1bda <__epilogue_restores__+0x1c>

00001698 <vfprintf>:
    1698:	af e0       	ldi	r26, 0x0F	; 15
    169a:	b0 e0       	ldi	r27, 0x00	; 0
    169c:	e2 e5       	ldi	r30, 0x52	; 82
    169e:	fb e0       	ldi	r31, 0x0B	; 11
    16a0:	0c 94 c3 0d 	jmp	0x1b86	; 0x1b86 <__prologue_saves__>
    16a4:	7c 01       	movw	r14, r24
    16a6:	3b 01       	movw	r6, r22
    16a8:	8a 01       	movw	r16, r20
    16aa:	dc 01       	movw	r26, r24
    16ac:	17 96       	adiw	r26, 0x07	; 7
    16ae:	1c 92       	st	X, r1
    16b0:	1e 92       	st	-X, r1
    16b2:	16 97       	sbiw	r26, 0x06	; 6
    16b4:	13 96       	adiw	r26, 0x03	; 3
    16b6:	8c 91       	ld	r24, X
    16b8:	81 ff       	sbrs	r24, 1
    16ba:	be c1       	rjmp	.+892    	; 0x1a38 <vfprintf+0x3a0>
    16bc:	9a e0       	ldi	r25, 0x0A	; 10
    16be:	29 2e       	mov	r2, r25
    16c0:	fe 01       	movw	r30, r28
    16c2:	31 96       	adiw	r30, 0x01	; 1
    16c4:	4f 01       	movw	r8, r30
    16c6:	d7 01       	movw	r26, r14
    16c8:	13 96       	adiw	r26, 0x03	; 3
    16ca:	9c 91       	ld	r25, X
    16cc:	f3 01       	movw	r30, r6
    16ce:	93 fd       	sbrc	r25, 3
    16d0:	85 91       	lpm	r24, Z+
    16d2:	93 ff       	sbrs	r25, 3
    16d4:	81 91       	ld	r24, Z+
    16d6:	3f 01       	movw	r6, r30
    16d8:	88 23       	and	r24, r24
    16da:	09 f4       	brne	.+2      	; 0x16de <vfprintf+0x46>
    16dc:	44 c1       	rjmp	.+648    	; 0x1966 <vfprintf+0x2ce>
    16de:	85 32       	cpi	r24, 0x25	; 37
    16e0:	39 f4       	brne	.+14     	; 0x16f0 <vfprintf+0x58>
    16e2:	93 fd       	sbrc	r25, 3
    16e4:	85 91       	lpm	r24, Z+
    16e6:	93 ff       	sbrs	r25, 3
    16e8:	81 91       	ld	r24, Z+
    16ea:	3f 01       	movw	r6, r30
    16ec:	85 32       	cpi	r24, 0x25	; 37
    16ee:	29 f4       	brne	.+10     	; 0x16fa <vfprintf+0x62>
    16f0:	b7 01       	movw	r22, r14
    16f2:	90 e0       	ldi	r25, 0x00	; 0
    16f4:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <fputc>
    16f8:	e6 cf       	rjmp	.-52     	; 0x16c6 <vfprintf+0x2e>
    16fa:	b1 2c       	mov	r11, r1
    16fc:	41 2c       	mov	r4, r1
    16fe:	51 2c       	mov	r5, r1
    1700:	bf e1       	ldi	r27, 0x1F	; 31
    1702:	b5 15       	cp	r27, r5
    1704:	38 f0       	brcs	.+14     	; 0x1714 <vfprintf+0x7c>
    1706:	8b 32       	cpi	r24, 0x2B	; 43
    1708:	09 f1       	breq	.+66     	; 0x174c <vfprintf+0xb4>
    170a:	88 f4       	brcc	.+34     	; 0x172e <vfprintf+0x96>
    170c:	80 32       	cpi	r24, 0x20	; 32
    170e:	01 f1       	breq	.+64     	; 0x1750 <vfprintf+0xb8>
    1710:	83 32       	cpi	r24, 0x23	; 35
    1712:	21 f1       	breq	.+72     	; 0x175c <vfprintf+0xc4>
    1714:	57 fc       	sbrc	r5, 7
    1716:	3a c0       	rjmp	.+116    	; 0x178c <vfprintf+0xf4>
    1718:	20 ed       	ldi	r18, 0xD0	; 208
    171a:	28 0f       	add	r18, r24
    171c:	2a 30       	cpi	r18, 0x0A	; 10
    171e:	40 f5       	brcc	.+80     	; 0x1770 <vfprintf+0xd8>
    1720:	56 fe       	sbrs	r5, 6
    1722:	1f c0       	rjmp	.+62     	; 0x1762 <vfprintf+0xca>
    1724:	b2 9c       	mul	r11, r2
    1726:	20 0d       	add	r18, r0
    1728:	11 24       	eor	r1, r1
    172a:	b2 2e       	mov	r11, r18
    172c:	06 c0       	rjmp	.+12     	; 0x173a <vfprintf+0xa2>
    172e:	8d 32       	cpi	r24, 0x2D	; 45
    1730:	91 f0       	breq	.+36     	; 0x1756 <vfprintf+0xbe>
    1732:	80 33       	cpi	r24, 0x30	; 48
    1734:	79 f7       	brne	.-34     	; 0x1714 <vfprintf+0x7c>
    1736:	68 94       	set
    1738:	50 f8       	bld	r5, 0
    173a:	f3 01       	movw	r30, r6
    173c:	93 fd       	sbrc	r25, 3
    173e:	85 91       	lpm	r24, Z+
    1740:	93 ff       	sbrs	r25, 3
    1742:	81 91       	ld	r24, Z+
    1744:	3f 01       	movw	r6, r30
    1746:	81 11       	cpse	r24, r1
    1748:	db cf       	rjmp	.-74     	; 0x1700 <vfprintf+0x68>
    174a:	20 c0       	rjmp	.+64     	; 0x178c <vfprintf+0xf4>
    174c:	68 94       	set
    174e:	51 f8       	bld	r5, 1
    1750:	68 94       	set
    1752:	52 f8       	bld	r5, 2
    1754:	f2 cf       	rjmp	.-28     	; 0x173a <vfprintf+0xa2>
    1756:	68 94       	set
    1758:	53 f8       	bld	r5, 3
    175a:	ef cf       	rjmp	.-34     	; 0x173a <vfprintf+0xa2>
    175c:	68 94       	set
    175e:	54 f8       	bld	r5, 4
    1760:	ec cf       	rjmp	.-40     	; 0x173a <vfprintf+0xa2>
    1762:	42 9c       	mul	r4, r2
    1764:	20 0d       	add	r18, r0
    1766:	11 24       	eor	r1, r1
    1768:	42 2e       	mov	r4, r18
    176a:	68 94       	set
    176c:	55 f8       	bld	r5, 5
    176e:	e5 cf       	rjmp	.-54     	; 0x173a <vfprintf+0xa2>
    1770:	8e 32       	cpi	r24, 0x2E	; 46
    1772:	29 f4       	brne	.+10     	; 0x177e <vfprintf+0xe6>
    1774:	56 fc       	sbrc	r5, 6
    1776:	f7 c0       	rjmp	.+494    	; 0x1966 <vfprintf+0x2ce>
    1778:	68 94       	set
    177a:	56 f8       	bld	r5, 6
    177c:	de cf       	rjmp	.-68     	; 0x173a <vfprintf+0xa2>
    177e:	8c 36       	cpi	r24, 0x6C	; 108
    1780:	19 f4       	brne	.+6      	; 0x1788 <vfprintf+0xf0>
    1782:	68 94       	set
    1784:	57 f8       	bld	r5, 7
    1786:	d9 cf       	rjmp	.-78     	; 0x173a <vfprintf+0xa2>
    1788:	88 36       	cpi	r24, 0x68	; 104
    178a:	b9 f2       	breq	.-82     	; 0x173a <vfprintf+0xa2>
    178c:	98 2f       	mov	r25, r24
    178e:	9f 7d       	andi	r25, 0xDF	; 223
    1790:	95 54       	subi	r25, 0x45	; 69
    1792:	93 30       	cpi	r25, 0x03	; 3
    1794:	c0 f0       	brcs	.+48     	; 0x17c6 <vfprintf+0x12e>
    1796:	83 36       	cpi	r24, 0x63	; 99
    1798:	a1 f1       	breq	.+104    	; 0x1802 <vfprintf+0x16a>
    179a:	83 37       	cpi	r24, 0x73	; 115
    179c:	c1 f1       	breq	.+112    	; 0x180e <vfprintf+0x176>
    179e:	83 35       	cpi	r24, 0x53	; 83
    17a0:	09 f0       	breq	.+2      	; 0x17a4 <vfprintf+0x10c>
    17a2:	5b c0       	rjmp	.+182    	; 0x185a <vfprintf+0x1c2>
    17a4:	d8 01       	movw	r26, r16
    17a6:	cd 90       	ld	r12, X+
    17a8:	dd 90       	ld	r13, X+
    17aa:	8d 01       	movw	r16, r26
    17ac:	6b 2d       	mov	r22, r11
    17ae:	70 e0       	ldi	r23, 0x00	; 0
    17b0:	56 fc       	sbrc	r5, 6
    17b2:	02 c0       	rjmp	.+4      	; 0x17b8 <vfprintf+0x120>
    17b4:	6f ef       	ldi	r22, 0xFF	; 255
    17b6:	7f ef       	ldi	r23, 0xFF	; 255
    17b8:	c6 01       	movw	r24, r12
    17ba:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <strnlen_P>
    17be:	5c 01       	movw	r10, r24
    17c0:	68 94       	set
    17c2:	57 f8       	bld	r5, 7
    17c4:	0a c0       	rjmp	.+20     	; 0x17da <vfprintf+0x142>
    17c6:	0c 5f       	subi	r16, 0xFC	; 252
    17c8:	1f 4f       	sbci	r17, 0xFF	; 255
    17ca:	ef e3       	ldi	r30, 0x3F	; 63
    17cc:	e9 83       	std	Y+1, r30	; 0x01
    17ce:	aa 24       	eor	r10, r10
    17d0:	a3 94       	inc	r10
    17d2:	b1 2c       	mov	r11, r1
    17d4:	64 01       	movw	r12, r8
    17d6:	e8 94       	clt
    17d8:	57 f8       	bld	r5, 7
    17da:	53 fc       	sbrc	r5, 3
    17dc:	04 c0       	rjmp	.+8      	; 0x17e6 <vfprintf+0x14e>
    17de:	4a 14       	cp	r4, r10
    17e0:	1b 04       	cpc	r1, r11
    17e2:	09 f0       	breq	.+2      	; 0x17e6 <vfprintf+0x14e>
    17e4:	18 f5       	brcc	.+70     	; 0x182c <vfprintf+0x194>
    17e6:	34 2c       	mov	r3, r4
    17e8:	a1 14       	cp	r10, r1
    17ea:	b1 04       	cpc	r11, r1
    17ec:	31 f5       	brne	.+76     	; 0x183a <vfprintf+0x1a2>
    17ee:	33 20       	and	r3, r3
    17f0:	09 f4       	brne	.+2      	; 0x17f4 <vfprintf+0x15c>
    17f2:	69 cf       	rjmp	.-302    	; 0x16c6 <vfprintf+0x2e>
    17f4:	b7 01       	movw	r22, r14
    17f6:	80 e2       	ldi	r24, 0x20	; 32
    17f8:	90 e0       	ldi	r25, 0x00	; 0
    17fa:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <fputc>
    17fe:	3a 94       	dec	r3
    1800:	f6 cf       	rjmp	.-20     	; 0x17ee <vfprintf+0x156>
    1802:	d8 01       	movw	r26, r16
    1804:	8c 91       	ld	r24, X
    1806:	89 83       	std	Y+1, r24	; 0x01
    1808:	0e 5f       	subi	r16, 0xFE	; 254
    180a:	1f 4f       	sbci	r17, 0xFF	; 255
    180c:	e0 cf       	rjmp	.-64     	; 0x17ce <vfprintf+0x136>
    180e:	f8 01       	movw	r30, r16
    1810:	c1 90       	ld	r12, Z+
    1812:	d1 90       	ld	r13, Z+
    1814:	8f 01       	movw	r16, r30
    1816:	6b 2d       	mov	r22, r11
    1818:	70 e0       	ldi	r23, 0x00	; 0
    181a:	56 fc       	sbrc	r5, 6
    181c:	02 c0       	rjmp	.+4      	; 0x1822 <vfprintf+0x18a>
    181e:	6f ef       	ldi	r22, 0xFF	; 255
    1820:	7f ef       	ldi	r23, 0xFF	; 255
    1822:	c6 01       	movw	r24, r12
    1824:	0e 94 2a 0d 	call	0x1a54	; 0x1a54 <strnlen>
    1828:	5c 01       	movw	r10, r24
    182a:	d5 cf       	rjmp	.-86     	; 0x17d6 <vfprintf+0x13e>
    182c:	b7 01       	movw	r22, r14
    182e:	80 e2       	ldi	r24, 0x20	; 32
    1830:	90 e0       	ldi	r25, 0x00	; 0
    1832:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <fputc>
    1836:	4a 94       	dec	r4
    1838:	d2 cf       	rjmp	.-92     	; 0x17de <vfprintf+0x146>
    183a:	f6 01       	movw	r30, r12
    183c:	57 fc       	sbrc	r5, 7
    183e:	85 91       	lpm	r24, Z+
    1840:	57 fe       	sbrs	r5, 7
    1842:	81 91       	ld	r24, Z+
    1844:	6f 01       	movw	r12, r30
    1846:	b7 01       	movw	r22, r14
    1848:	90 e0       	ldi	r25, 0x00	; 0
    184a:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <fputc>
    184e:	31 10       	cpse	r3, r1
    1850:	3a 94       	dec	r3
    1852:	b1 e0       	ldi	r27, 0x01	; 1
    1854:	ab 1a       	sub	r10, r27
    1856:	b1 08       	sbc	r11, r1
    1858:	c7 cf       	rjmp	.-114    	; 0x17e8 <vfprintf+0x150>
    185a:	84 36       	cpi	r24, 0x64	; 100
    185c:	19 f0       	breq	.+6      	; 0x1864 <vfprintf+0x1cc>
    185e:	89 36       	cpi	r24, 0x69	; 105
    1860:	09 f0       	breq	.+2      	; 0x1864 <vfprintf+0x1cc>
    1862:	71 c0       	rjmp	.+226    	; 0x1946 <vfprintf+0x2ae>
    1864:	f8 01       	movw	r30, r16
    1866:	57 fe       	sbrs	r5, 7
    1868:	67 c0       	rjmp	.+206    	; 0x1938 <vfprintf+0x2a0>
    186a:	61 91       	ld	r22, Z+
    186c:	71 91       	ld	r23, Z+
    186e:	81 91       	ld	r24, Z+
    1870:	91 91       	ld	r25, Z+
    1872:	8f 01       	movw	r16, r30
    1874:	e5 2d       	mov	r30, r5
    1876:	ef 76       	andi	r30, 0x6F	; 111
    1878:	de 2e       	mov	r13, r30
    187a:	97 ff       	sbrs	r25, 7
    187c:	09 c0       	rjmp	.+18     	; 0x1890 <vfprintf+0x1f8>
    187e:	90 95       	com	r25
    1880:	80 95       	com	r24
    1882:	70 95       	com	r23
    1884:	61 95       	neg	r22
    1886:	7f 4f       	sbci	r23, 0xFF	; 255
    1888:	8f 4f       	sbci	r24, 0xFF	; 255
    188a:	9f 4f       	sbci	r25, 0xFF	; 255
    188c:	68 94       	set
    188e:	d7 f8       	bld	r13, 7
    1890:	2a e0       	ldi	r18, 0x0A	; 10
    1892:	30 e0       	ldi	r19, 0x00	; 0
    1894:	a4 01       	movw	r20, r8
    1896:	0e 94 65 0d 	call	0x1aca	; 0x1aca <__ultoa_invert>
    189a:	c8 2e       	mov	r12, r24
    189c:	c8 18       	sub	r12, r8
    189e:	ac 2c       	mov	r10, r12
    18a0:	5d 2c       	mov	r5, r13
    18a2:	d6 fe       	sbrs	r13, 6
    18a4:	0c c0       	rjmp	.+24     	; 0x18be <vfprintf+0x226>
    18a6:	e8 94       	clt
    18a8:	50 f8       	bld	r5, 0
    18aa:	cb 14       	cp	r12, r11
    18ac:	40 f4       	brcc	.+16     	; 0x18be <vfprintf+0x226>
    18ae:	d4 fe       	sbrs	r13, 4
    18b0:	05 c0       	rjmp	.+10     	; 0x18bc <vfprintf+0x224>
    18b2:	d2 fc       	sbrc	r13, 2
    18b4:	03 c0       	rjmp	.+6      	; 0x18bc <vfprintf+0x224>
    18b6:	5d 2d       	mov	r21, r13
    18b8:	5e 7e       	andi	r21, 0xEE	; 238
    18ba:	55 2e       	mov	r5, r21
    18bc:	ab 2c       	mov	r10, r11
    18be:	54 fe       	sbrs	r5, 4
    18c0:	93 c0       	rjmp	.+294    	; 0x19e8 <vfprintf+0x350>
    18c2:	fe 01       	movw	r30, r28
    18c4:	ec 0d       	add	r30, r12
    18c6:	f1 1d       	adc	r31, r1
    18c8:	80 81       	ld	r24, Z
    18ca:	80 33       	cpi	r24, 0x30	; 48
    18cc:	09 f0       	breq	.+2      	; 0x18d0 <vfprintf+0x238>
    18ce:	85 c0       	rjmp	.+266    	; 0x19da <vfprintf+0x342>
    18d0:	65 2d       	mov	r22, r5
    18d2:	69 7e       	andi	r22, 0xE9	; 233
    18d4:	56 2e       	mov	r5, r22
    18d6:	75 2d       	mov	r23, r5
    18d8:	78 70       	andi	r23, 0x08	; 8
    18da:	37 2e       	mov	r3, r23
    18dc:	53 fc       	sbrc	r5, 3
    18de:	93 c0       	rjmp	.+294    	; 0x1a06 <vfprintf+0x36e>
    18e0:	50 fe       	sbrs	r5, 0
    18e2:	8d c0       	rjmp	.+282    	; 0x19fe <vfprintf+0x366>
    18e4:	bc 2c       	mov	r11, r12
    18e6:	a4 14       	cp	r10, r4
    18e8:	10 f4       	brcc	.+4      	; 0x18ee <vfprintf+0x256>
    18ea:	b4 0c       	add	r11, r4
    18ec:	ba 18       	sub	r11, r10
    18ee:	54 fe       	sbrs	r5, 4
    18f0:	90 c0       	rjmp	.+288    	; 0x1a12 <vfprintf+0x37a>
    18f2:	b7 01       	movw	r22, r14
    18f4:	80 e3       	ldi	r24, 0x30	; 48
    18f6:	90 e0       	ldi	r25, 0x00	; 0
    18f8:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <fputc>
    18fc:	52 fe       	sbrs	r5, 2
    18fe:	07 c0       	rjmp	.+14     	; 0x190e <vfprintf+0x276>
    1900:	88 e7       	ldi	r24, 0x78	; 120
    1902:	51 fc       	sbrc	r5, 1
    1904:	88 e5       	ldi	r24, 0x58	; 88
    1906:	90 e0       	ldi	r25, 0x00	; 0
    1908:	b7 01       	movw	r22, r14
    190a:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <fputc>
    190e:	cb 14       	cp	r12, r11
    1910:	08 f4       	brcc	.+2      	; 0x1914 <vfprintf+0x27c>
    1912:	8b c0       	rjmp	.+278    	; 0x1a2a <vfprintf+0x392>
    1914:	ca 94       	dec	r12
    1916:	d1 2c       	mov	r13, r1
    1918:	8f ef       	ldi	r24, 0xFF	; 255
    191a:	c8 1a       	sub	r12, r24
    191c:	d8 0a       	sbc	r13, r24
    191e:	c8 0c       	add	r12, r8
    1920:	d9 1c       	adc	r13, r9
    1922:	d6 01       	movw	r26, r12
    1924:	8e 91       	ld	r24, -X
    1926:	6d 01       	movw	r12, r26
    1928:	b7 01       	movw	r22, r14
    192a:	90 e0       	ldi	r25, 0x00	; 0
    192c:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <fputc>
    1930:	8c 14       	cp	r8, r12
    1932:	9d 04       	cpc	r9, r13
    1934:	b1 f7       	brne	.-20     	; 0x1922 <vfprintf+0x28a>
    1936:	5b cf       	rjmp	.-330    	; 0x17ee <vfprintf+0x156>
    1938:	61 91       	ld	r22, Z+
    193a:	71 91       	ld	r23, Z+
    193c:	07 2e       	mov	r0, r23
    193e:	00 0c       	add	r0, r0
    1940:	88 0b       	sbc	r24, r24
    1942:	99 0b       	sbc	r25, r25
    1944:	96 cf       	rjmp	.-212    	; 0x1872 <vfprintf+0x1da>
    1946:	d5 2c       	mov	r13, r5
    1948:	e8 94       	clt
    194a:	d4 f8       	bld	r13, 4
    194c:	2a e0       	ldi	r18, 0x0A	; 10
    194e:	85 37       	cpi	r24, 0x75	; 117
    1950:	29 f1       	breq	.+74     	; 0x199c <vfprintf+0x304>
    1952:	f5 2d       	mov	r31, r5
    1954:	f9 7f       	andi	r31, 0xF9	; 249
    1956:	df 2e       	mov	r13, r31
    1958:	80 37       	cpi	r24, 0x70	; 112
    195a:	a1 f0       	breq	.+40     	; 0x1984 <vfprintf+0x2ec>
    195c:	58 f4       	brcc	.+22     	; 0x1974 <vfprintf+0x2dc>
    195e:	88 35       	cpi	r24, 0x58	; 88
    1960:	a1 f0       	breq	.+40     	; 0x198a <vfprintf+0x2f2>
    1962:	8f 36       	cpi	r24, 0x6F	; 111
    1964:	d1 f0       	breq	.+52     	; 0x199a <vfprintf+0x302>
    1966:	f7 01       	movw	r30, r14
    1968:	86 81       	ldd	r24, Z+6	; 0x06
    196a:	97 81       	ldd	r25, Z+7	; 0x07
    196c:	2f 96       	adiw	r28, 0x0f	; 15
    196e:	e2 e1       	ldi	r30, 0x12	; 18
    1970:	0c 94 df 0d 	jmp	0x1bbe	; 0x1bbe <__epilogue_restores__>
    1974:	88 37       	cpi	r24, 0x78	; 120
    1976:	b9 f7       	brne	.-18     	; 0x1966 <vfprintf+0x2ce>
    1978:	d4 fe       	sbrs	r13, 4
    197a:	02 c0       	rjmp	.+4      	; 0x1980 <vfprintf+0x2e8>
    197c:	68 94       	set
    197e:	d2 f8       	bld	r13, 2
    1980:	20 e1       	ldi	r18, 0x10	; 16
    1982:	0c c0       	rjmp	.+24     	; 0x199c <vfprintf+0x304>
    1984:	68 94       	set
    1986:	d4 f8       	bld	r13, 4
    1988:	f7 cf       	rjmp	.-18     	; 0x1978 <vfprintf+0x2e0>
    198a:	54 fe       	sbrs	r5, 4
    198c:	03 c0       	rjmp	.+6      	; 0x1994 <vfprintf+0x2fc>
    198e:	2f 2f       	mov	r18, r31
    1990:	26 60       	ori	r18, 0x06	; 6
    1992:	d2 2e       	mov	r13, r18
    1994:	20 e1       	ldi	r18, 0x10	; 16
    1996:	32 e0       	ldi	r19, 0x02	; 2
    1998:	02 c0       	rjmp	.+4      	; 0x199e <vfprintf+0x306>
    199a:	28 e0       	ldi	r18, 0x08	; 8
    199c:	30 e0       	ldi	r19, 0x00	; 0
    199e:	f8 01       	movw	r30, r16
    19a0:	d7 fe       	sbrs	r13, 7
    19a2:	15 c0       	rjmp	.+42     	; 0x19ce <vfprintf+0x336>
    19a4:	41 91       	ld	r20, Z+
    19a6:	51 91       	ld	r21, Z+
    19a8:	61 91       	ld	r22, Z+
    19aa:	71 91       	ld	r23, Z+
    19ac:	4c 87       	std	Y+12, r20	; 0x0c
    19ae:	5d 87       	std	Y+13, r21	; 0x0d
    19b0:	6e 87       	std	Y+14, r22	; 0x0e
    19b2:	7f 87       	std	Y+15, r23	; 0x0f
    19b4:	8f 01       	movw	r16, r30
    19b6:	a4 01       	movw	r20, r8
    19b8:	6c 85       	ldd	r22, Y+12	; 0x0c
    19ba:	7d 85       	ldd	r23, Y+13	; 0x0d
    19bc:	8e 85       	ldd	r24, Y+14	; 0x0e
    19be:	9f 85       	ldd	r25, Y+15	; 0x0f
    19c0:	0e 94 65 0d 	call	0x1aca	; 0x1aca <__ultoa_invert>
    19c4:	c8 2e       	mov	r12, r24
    19c6:	c8 18       	sub	r12, r8
    19c8:	e8 94       	clt
    19ca:	d7 f8       	bld	r13, 7
    19cc:	68 cf       	rjmp	.-304    	; 0x189e <vfprintf+0x206>
    19ce:	81 91       	ld	r24, Z+
    19d0:	91 91       	ld	r25, Z+
    19d2:	ac 01       	movw	r20, r24
    19d4:	70 e0       	ldi	r23, 0x00	; 0
    19d6:	60 e0       	ldi	r22, 0x00	; 0
    19d8:	e9 cf       	rjmp	.-46     	; 0x19ac <vfprintf+0x314>
    19da:	52 fc       	sbrc	r5, 2
    19dc:	02 c0       	rjmp	.+4      	; 0x19e2 <vfprintf+0x34a>
    19de:	a3 94       	inc	r10
    19e0:	7a cf       	rjmp	.-268    	; 0x18d6 <vfprintf+0x23e>
    19e2:	a3 94       	inc	r10
    19e4:	a3 94       	inc	r10
    19e6:	77 cf       	rjmp	.-274    	; 0x18d6 <vfprintf+0x23e>
    19e8:	85 2d       	mov	r24, r5
    19ea:	86 78       	andi	r24, 0x86	; 134
    19ec:	09 f4       	brne	.+2      	; 0x19f0 <vfprintf+0x358>
    19ee:	73 cf       	rjmp	.-282    	; 0x18d6 <vfprintf+0x23e>
    19f0:	f6 cf       	rjmp	.-20     	; 0x19de <vfprintf+0x346>
    19f2:	b7 01       	movw	r22, r14
    19f4:	80 e2       	ldi	r24, 0x20	; 32
    19f6:	90 e0       	ldi	r25, 0x00	; 0
    19f8:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <fputc>
    19fc:	a3 94       	inc	r10
    19fe:	a4 14       	cp	r10, r4
    1a00:	c0 f3       	brcs	.-16     	; 0x19f2 <vfprintf+0x35a>
    1a02:	31 2c       	mov	r3, r1
    1a04:	74 cf       	rjmp	.-280    	; 0x18ee <vfprintf+0x256>
    1a06:	34 2c       	mov	r3, r4
    1a08:	3a 18       	sub	r3, r10
    1a0a:	a4 14       	cp	r10, r4
    1a0c:	08 f4       	brcc	.+2      	; 0x1a10 <vfprintf+0x378>
    1a0e:	6f cf       	rjmp	.-290    	; 0x18ee <vfprintf+0x256>
    1a10:	f8 cf       	rjmp	.-16     	; 0x1a02 <vfprintf+0x36a>
    1a12:	85 2d       	mov	r24, r5
    1a14:	86 78       	andi	r24, 0x86	; 134
    1a16:	09 f4       	brne	.+2      	; 0x1a1a <vfprintf+0x382>
    1a18:	7a cf       	rjmp	.-268    	; 0x190e <vfprintf+0x276>
    1a1a:	8b e2       	ldi	r24, 0x2B	; 43
    1a1c:	51 fe       	sbrs	r5, 1
    1a1e:	80 e2       	ldi	r24, 0x20	; 32
    1a20:	57 fc       	sbrc	r5, 7
    1a22:	8d e2       	ldi	r24, 0x2D	; 45
    1a24:	b7 01       	movw	r22, r14
    1a26:	90 e0       	ldi	r25, 0x00	; 0
    1a28:	70 cf       	rjmp	.-288    	; 0x190a <vfprintf+0x272>
    1a2a:	b7 01       	movw	r22, r14
    1a2c:	80 e3       	ldi	r24, 0x30	; 48
    1a2e:	90 e0       	ldi	r25, 0x00	; 0
    1a30:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <fputc>
    1a34:	ba 94       	dec	r11
    1a36:	6b cf       	rjmp	.-298    	; 0x190e <vfprintf+0x276>
    1a38:	8f ef       	ldi	r24, 0xFF	; 255
    1a3a:	9f ef       	ldi	r25, 0xFF	; 255
    1a3c:	97 cf       	rjmp	.-210    	; 0x196c <vfprintf+0x2d4>

00001a3e <strnlen_P>:
    1a3e:	fc 01       	movw	r30, r24
    1a40:	05 90       	lpm	r0, Z+
    1a42:	61 50       	subi	r22, 0x01	; 1
    1a44:	70 40       	sbci	r23, 0x00	; 0
    1a46:	01 10       	cpse	r0, r1
    1a48:	d8 f7       	brcc	.-10     	; 0x1a40 <strnlen_P+0x2>
    1a4a:	80 95       	com	r24
    1a4c:	90 95       	com	r25
    1a4e:	8e 0f       	add	r24, r30
    1a50:	9f 1f       	adc	r25, r31
    1a52:	08 95       	ret

00001a54 <strnlen>:
    1a54:	fc 01       	movw	r30, r24
    1a56:	61 50       	subi	r22, 0x01	; 1
    1a58:	70 40       	sbci	r23, 0x00	; 0
    1a5a:	01 90       	ld	r0, Z+
    1a5c:	01 10       	cpse	r0, r1
    1a5e:	d8 f7       	brcc	.-10     	; 0x1a56 <strnlen+0x2>
    1a60:	80 95       	com	r24
    1a62:	90 95       	com	r25
    1a64:	8e 0f       	add	r24, r30
    1a66:	9f 1f       	adc	r25, r31
    1a68:	08 95       	ret

00001a6a <fputc>:
    1a6a:	0f 93       	push	r16
    1a6c:	1f 93       	push	r17
    1a6e:	cf 93       	push	r28
    1a70:	df 93       	push	r29
    1a72:	18 2f       	mov	r17, r24
    1a74:	09 2f       	mov	r16, r25
    1a76:	eb 01       	movw	r28, r22
    1a78:	8b 81       	ldd	r24, Y+3	; 0x03
    1a7a:	81 fd       	sbrc	r24, 1
    1a7c:	09 c0       	rjmp	.+18     	; 0x1a90 <fputc+0x26>
    1a7e:	1f ef       	ldi	r17, 0xFF	; 255
    1a80:	0f ef       	ldi	r16, 0xFF	; 255
    1a82:	81 2f       	mov	r24, r17
    1a84:	90 2f       	mov	r25, r16
    1a86:	df 91       	pop	r29
    1a88:	cf 91       	pop	r28
    1a8a:	1f 91       	pop	r17
    1a8c:	0f 91       	pop	r16
    1a8e:	08 95       	ret
    1a90:	82 ff       	sbrs	r24, 2
    1a92:	14 c0       	rjmp	.+40     	; 0x1abc <fputc+0x52>
    1a94:	2e 81       	ldd	r18, Y+6	; 0x06
    1a96:	3f 81       	ldd	r19, Y+7	; 0x07
    1a98:	8c 81       	ldd	r24, Y+4	; 0x04
    1a9a:	9d 81       	ldd	r25, Y+5	; 0x05
    1a9c:	28 17       	cp	r18, r24
    1a9e:	39 07       	cpc	r19, r25
    1aa0:	3c f4       	brge	.+14     	; 0x1ab0 <fputc+0x46>
    1aa2:	e8 81       	ld	r30, Y
    1aa4:	f9 81       	ldd	r31, Y+1	; 0x01
    1aa6:	cf 01       	movw	r24, r30
    1aa8:	01 96       	adiw	r24, 0x01	; 1
    1aaa:	99 83       	std	Y+1, r25	; 0x01
    1aac:	88 83       	st	Y, r24
    1aae:	10 83       	st	Z, r17
    1ab0:	8e 81       	ldd	r24, Y+6	; 0x06
    1ab2:	9f 81       	ldd	r25, Y+7	; 0x07
    1ab4:	01 96       	adiw	r24, 0x01	; 1
    1ab6:	9f 83       	std	Y+7, r25	; 0x07
    1ab8:	8e 83       	std	Y+6, r24	; 0x06
    1aba:	e3 cf       	rjmp	.-58     	; 0x1a82 <fputc+0x18>
    1abc:	e8 85       	ldd	r30, Y+8	; 0x08
    1abe:	f9 85       	ldd	r31, Y+9	; 0x09
    1ac0:	81 2f       	mov	r24, r17
    1ac2:	09 95       	icall
    1ac4:	89 2b       	or	r24, r25
    1ac6:	a1 f3       	breq	.-24     	; 0x1ab0 <fputc+0x46>
    1ac8:	da cf       	rjmp	.-76     	; 0x1a7e <fputc+0x14>

00001aca <__ultoa_invert>:
    1aca:	fa 01       	movw	r30, r20
    1acc:	aa 27       	eor	r26, r26
    1ace:	28 30       	cpi	r18, 0x08	; 8
    1ad0:	51 f1       	breq	.+84     	; 0x1b26 <__ultoa_invert+0x5c>
    1ad2:	20 31       	cpi	r18, 0x10	; 16
    1ad4:	81 f1       	breq	.+96     	; 0x1b36 <__ultoa_invert+0x6c>
    1ad6:	e8 94       	clt
    1ad8:	6f 93       	push	r22
    1ada:	6e 7f       	andi	r22, 0xFE	; 254
    1adc:	6e 5f       	subi	r22, 0xFE	; 254
    1ade:	7f 4f       	sbci	r23, 0xFF	; 255
    1ae0:	8f 4f       	sbci	r24, 0xFF	; 255
    1ae2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ae4:	af 4f       	sbci	r26, 0xFF	; 255
    1ae6:	b1 e0       	ldi	r27, 0x01	; 1
    1ae8:	3e d0       	rcall	.+124    	; 0x1b66 <__ultoa_invert+0x9c>
    1aea:	b4 e0       	ldi	r27, 0x04	; 4
    1aec:	3c d0       	rcall	.+120    	; 0x1b66 <__ultoa_invert+0x9c>
    1aee:	67 0f       	add	r22, r23
    1af0:	78 1f       	adc	r23, r24
    1af2:	89 1f       	adc	r24, r25
    1af4:	9a 1f       	adc	r25, r26
    1af6:	a1 1d       	adc	r26, r1
    1af8:	68 0f       	add	r22, r24
    1afa:	79 1f       	adc	r23, r25
    1afc:	8a 1f       	adc	r24, r26
    1afe:	91 1d       	adc	r25, r1
    1b00:	a1 1d       	adc	r26, r1
    1b02:	6a 0f       	add	r22, r26
    1b04:	71 1d       	adc	r23, r1
    1b06:	81 1d       	adc	r24, r1
    1b08:	91 1d       	adc	r25, r1
    1b0a:	a1 1d       	adc	r26, r1
    1b0c:	20 d0       	rcall	.+64     	; 0x1b4e <__ultoa_invert+0x84>
    1b0e:	09 f4       	brne	.+2      	; 0x1b12 <__ultoa_invert+0x48>
    1b10:	68 94       	set
    1b12:	3f 91       	pop	r19
    1b14:	2a e0       	ldi	r18, 0x0A	; 10
    1b16:	26 9f       	mul	r18, r22
    1b18:	11 24       	eor	r1, r1
    1b1a:	30 19       	sub	r19, r0
    1b1c:	30 5d       	subi	r19, 0xD0	; 208
    1b1e:	31 93       	st	Z+, r19
    1b20:	de f6       	brtc	.-74     	; 0x1ad8 <__ultoa_invert+0xe>
    1b22:	cf 01       	movw	r24, r30
    1b24:	08 95       	ret
    1b26:	46 2f       	mov	r20, r22
    1b28:	47 70       	andi	r20, 0x07	; 7
    1b2a:	40 5d       	subi	r20, 0xD0	; 208
    1b2c:	41 93       	st	Z+, r20
    1b2e:	b3 e0       	ldi	r27, 0x03	; 3
    1b30:	0f d0       	rcall	.+30     	; 0x1b50 <__ultoa_invert+0x86>
    1b32:	c9 f7       	brne	.-14     	; 0x1b26 <__ultoa_invert+0x5c>
    1b34:	f6 cf       	rjmp	.-20     	; 0x1b22 <__ultoa_invert+0x58>
    1b36:	46 2f       	mov	r20, r22
    1b38:	4f 70       	andi	r20, 0x0F	; 15
    1b3a:	40 5d       	subi	r20, 0xD0	; 208
    1b3c:	4a 33       	cpi	r20, 0x3A	; 58
    1b3e:	18 f0       	brcs	.+6      	; 0x1b46 <__ultoa_invert+0x7c>
    1b40:	49 5d       	subi	r20, 0xD9	; 217
    1b42:	31 fd       	sbrc	r19, 1
    1b44:	40 52       	subi	r20, 0x20	; 32
    1b46:	41 93       	st	Z+, r20
    1b48:	02 d0       	rcall	.+4      	; 0x1b4e <__ultoa_invert+0x84>
    1b4a:	a9 f7       	brne	.-22     	; 0x1b36 <__ultoa_invert+0x6c>
    1b4c:	ea cf       	rjmp	.-44     	; 0x1b22 <__ultoa_invert+0x58>
    1b4e:	b4 e0       	ldi	r27, 0x04	; 4
    1b50:	a6 95       	lsr	r26
    1b52:	97 95       	ror	r25
    1b54:	87 95       	ror	r24
    1b56:	77 95       	ror	r23
    1b58:	67 95       	ror	r22
    1b5a:	ba 95       	dec	r27
    1b5c:	c9 f7       	brne	.-14     	; 0x1b50 <__ultoa_invert+0x86>
    1b5e:	00 97       	sbiw	r24, 0x00	; 0
    1b60:	61 05       	cpc	r22, r1
    1b62:	71 05       	cpc	r23, r1
    1b64:	08 95       	ret
    1b66:	9b 01       	movw	r18, r22
    1b68:	ac 01       	movw	r20, r24
    1b6a:	0a 2e       	mov	r0, r26
    1b6c:	06 94       	lsr	r0
    1b6e:	57 95       	ror	r21
    1b70:	47 95       	ror	r20
    1b72:	37 95       	ror	r19
    1b74:	27 95       	ror	r18
    1b76:	ba 95       	dec	r27
    1b78:	c9 f7       	brne	.-14     	; 0x1b6c <__ultoa_invert+0xa2>
    1b7a:	62 0f       	add	r22, r18
    1b7c:	73 1f       	adc	r23, r19
    1b7e:	84 1f       	adc	r24, r20
    1b80:	95 1f       	adc	r25, r21
    1b82:	a0 1d       	adc	r26, r0
    1b84:	08 95       	ret

00001b86 <__prologue_saves__>:
    1b86:	2f 92       	push	r2
    1b88:	3f 92       	push	r3
    1b8a:	4f 92       	push	r4
    1b8c:	5f 92       	push	r5
    1b8e:	6f 92       	push	r6
    1b90:	7f 92       	push	r7
    1b92:	8f 92       	push	r8
    1b94:	9f 92       	push	r9
    1b96:	af 92       	push	r10
    1b98:	bf 92       	push	r11
    1b9a:	cf 92       	push	r12
    1b9c:	df 92       	push	r13
    1b9e:	ef 92       	push	r14
    1ba0:	ff 92       	push	r15
    1ba2:	0f 93       	push	r16
    1ba4:	1f 93       	push	r17
    1ba6:	cf 93       	push	r28
    1ba8:	df 93       	push	r29
    1baa:	cd b7       	in	r28, 0x3d	; 61
    1bac:	de b7       	in	r29, 0x3e	; 62
    1bae:	ca 1b       	sub	r28, r26
    1bb0:	db 0b       	sbc	r29, r27
    1bb2:	0f b6       	in	r0, 0x3f	; 63
    1bb4:	f8 94       	cli
    1bb6:	de bf       	out	0x3e, r29	; 62
    1bb8:	0f be       	out	0x3f, r0	; 63
    1bba:	cd bf       	out	0x3d, r28	; 61
    1bbc:	09 94       	ijmp

00001bbe <__epilogue_restores__>:
    1bbe:	2a 88       	ldd	r2, Y+18	; 0x12
    1bc0:	39 88       	ldd	r3, Y+17	; 0x11
    1bc2:	48 88       	ldd	r4, Y+16	; 0x10
    1bc4:	5f 84       	ldd	r5, Y+15	; 0x0f
    1bc6:	6e 84       	ldd	r6, Y+14	; 0x0e
    1bc8:	7d 84       	ldd	r7, Y+13	; 0x0d
    1bca:	8c 84       	ldd	r8, Y+12	; 0x0c
    1bcc:	9b 84       	ldd	r9, Y+11	; 0x0b
    1bce:	aa 84       	ldd	r10, Y+10	; 0x0a
    1bd0:	b9 84       	ldd	r11, Y+9	; 0x09
    1bd2:	c8 84       	ldd	r12, Y+8	; 0x08
    1bd4:	df 80       	ldd	r13, Y+7	; 0x07
    1bd6:	ee 80       	ldd	r14, Y+6	; 0x06
    1bd8:	fd 80       	ldd	r15, Y+5	; 0x05
    1bda:	0c 81       	ldd	r16, Y+4	; 0x04
    1bdc:	1b 81       	ldd	r17, Y+3	; 0x03
    1bde:	aa 81       	ldd	r26, Y+2	; 0x02
    1be0:	b9 81       	ldd	r27, Y+1	; 0x01
    1be2:	ce 0f       	add	r28, r30
    1be4:	d1 1d       	adc	r29, r1
    1be6:	0f b6       	in	r0, 0x3f	; 63
    1be8:	f8 94       	cli
    1bea:	de bf       	out	0x3e, r29	; 62
    1bec:	0f be       	out	0x3f, r0	; 63
    1bee:	cd bf       	out	0x3d, r28	; 61
    1bf0:	ed 01       	movw	r28, r26
    1bf2:	08 95       	ret

00001bf4 <_exit>:
    1bf4:	f8 94       	cli

00001bf6 <__stop_program>:
    1bf6:	ff cf       	rjmp	.-2      	; 0x1bf6 <__stop_program>
