
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000052  00800100  00001074  00001108  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001074  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001d  00800152  00800152  0000115a  2**0
                  ALLOC
  3 .comment      00000012  00000000  00000000  0000115a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000116c  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 00000028  00000000  00000000  000011ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   0000221e  00000000  00000000  000011d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000c54  00000000  00000000  000033f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   000022e4  00000000  00000000  00004046  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  00000110  00000000  00000000  0000632c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    000005e1  00000000  00000000  0000643c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_loc    00000fb3  00000000  00000000  00006a1d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges 00000200  00000000  00000000  000079d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 03 05 	jmp	0xa06	; 0xa06 <__ctors_end>
       4:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
       8:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
       c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      10:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      14:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      18:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      1c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      20:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      24:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      28:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      2c:	0c 94 33 07 	jmp	0xe66	; 0xe66 <__vector_11>
      30:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      34:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      38:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      3c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      40:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      44:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      48:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      4c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      50:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      54:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      58:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      5c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      60:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      64:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      68:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      6c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      70:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      74:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      78:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      7c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      80:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      84:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      88:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      8c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      90:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      94:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      98:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      9c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      a0:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      a4:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      a8:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      ac:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      b0:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>

000000b4 <font14>:
	...
      c0:	00 00 00 10 10 10 10 10 10 10 00 10 10 00 00 00     ................
      d0:	24 24 24 24 00 00 00 00 00 00 00 00 00 00 00 09     $$$$............
      e0:	09 12 7f 12 24 ff 24 48 48 00 00 00 10 3c 50 50     ....$.$HH....<PP
      f0:	50 30 18 14 14 14 78 10 00 00 00 61 92 94 94 68     P0....x....a...h
     100:	16 29 29 49 86 00 00 00 00 18 24 24 28 30 d1 89     .))I......$$(0..
     110:	8e c6 7f 00 00 00 10 10 10 10 00 00 00 00 00 00     ................
     120:	00 00 00 00 06 0c 10 10 20 20 20 20 20 10 10 0c     ........     ...
     130:	06 00 60 30 08 08 04 04 04 04 04 08 08 30 60 00     ..`0.........0`.
     140:	00 10 10 66 28 34 24 00 00 00 00 00 00 00 00 00     ...f(4$.........
     150:	00 00 10 10 10 fe 10 10 10 00 00 00 00 00 00 00     ................
     160:	00 00 00 00 00 18 18 08 10 00 00 00 00 00 00 00     ................
     170:	7e 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ~...............
     180:	00 18 18 00 00 00 02 04 04 04 08 08 18 10 10 20     ............... 
     190:	20 20 40 00 00 18 24 42 42 42 42 42 42 24 18 00       @...$BBBBBB$..
     1a0:	00 00 00 08 78 08 08 08 08 08 08 08 7f 00 00 00     ....x...........
     1b0:	00 78 04 04 04 08 08 10 20 40 7c 00 00 00 00 3c     .x...... @|....<
     1c0:	02 02 02 1c 02 02 02 02 3c 00 00 00 00 04 0c 14     ........<.......
     1d0:	14 24 44 7e 04 04 04 00 00 00 00 3e 20 20 20 38     .$D~.......>   8
     1e0:	06 02 02 02 3c 00 00 00 00 1c 20 40 40 5c 62 42     ....<..... @@\bB
     1f0:	42 22 1c 00 00 00 00 7e 02 04 04 08 10 10 10 20     B".....~....... 
     200:	20 00 00 00 00 3c 42 42 44 38 24 42 42 42 3c 00      ....<BBD8$BBB<.
     210:	00 00 00 38 44 42 42 46 3a 02 02 04 38 00 00 00     ...8DBBF:...8...
     220:	00 00 00 00 18 18 00 00 00 18 18 00 00 00 00 00     ................
     230:	00 00 18 18 00 00 00 18 18 08 10 00 00 00 00 00     ................
     240:	02 0c 10 60 10 0c 02 00 00 00 00 00 00 00 00 7e     ...`...........~
     250:	00 00 7e 00 00 00 00 00 00 00 00 00 40 30 08 06     ..~.........@0..
     260:	08 30 40 00 00 00 00 7c 42 02 04 08 10 10 00 10     .0@....|B.......
     270:	10 00 00 00 00 3c 62 4e 92 92 92 96 db 44 3c 00     .....<bN.....D<.
     280:	00 00 00 00 08 18 14 24 24 42 7e 42 81 00 00 00     .......$$B~B....
     290:	00 00 7c 42 42 44 78 44 42 42 7c 00 00 00 00 00     ..|BBDxDBB|.....
     2a0:	3e 40 80 80 80 80 80 40 3e 00 00 00 00 00 f8 84     >@.....@>.......
     2b0:	82 82 82 82 82 84 f8 00 00 00 00 00 7e 40 40 40     ............~@@@
     2c0:	7c 40 40 40 7e 00 00 00 00 00 7e 40 40 40 7c 40     |@@@~.....~@@@|@
     2d0:	40 40 40 00 00 00 00 00 3e 40 80 80 80 8e 82 42     @@@.....>@.....B
     2e0:	3e 00 00 00 00 00 42 42 42 42 7e 42 42 42 42 00     >.....BBBB~BBBB.
     2f0:	00 00 00 00 7c 10 10 10 10 10 10 10 7c 00 00 00     ....|.......|...
     300:	00 00 3c 04 04 04 04 04 04 04 78 00 00 00 00 00     ..<.......x.....
     310:	42 44 48 50 60 50 48 44 42 00 00 00 00 00 40 40     BDHP`PHDB.....@@
     320:	40 40 40 40 40 40 7e 00 00 00 00 00 c6 c6 c6 aa     @@@@@@~.........
     330:	aa aa 92 82 82 00 00 00 00 00 42 62 62 52 52 4a     ..........BbbRRJ
     340:	4a 46 42 00 00 00 00 00 38 44 82 82 82 82 82 44     JFB.....8D.....D
     350:	38 00 00 00 00 00 7c 42 42 42 46 78 40 40 40 00     8.....|BBBFx@@@.
     360:	00 00 00 00 38 44 82 82 82 82 82 44 38 06 03 00     ....8D.....D8...
     370:	00 00 78 44 44 44 78 48 4c 44 42 00 00 00 00 00     ..xDDDxHLDB.....
     380:	3e 40 40 60 18 06 02 02 7c 00 00 00 00 00 fe 10     >@@`....|.......
     390:	10 10 10 10 10 10 10 00 00 00 00 00 42 42 42 42     ............BBBB
     3a0:	42 42 42 42 3c 00 00 00 00 00 81 42 42 44 24 28     BBBB<......BBD$(
     3b0:	28 10 10 00 00 00 00 00 81 81 93 9a 5a 5a 66 66     (...........ZZff
     3c0:	24 00 00 00 00 00 81 42 24 18 18 18 24 42 81 00     $......B$...$B..
     3d0:	00 00 00 00 81 42 44 28 18 10 10 10 10 00 00 00     .....BD(........
     3e0:	00 00 fe 02 04 08 10 20 40 80 fe 00 00 00 1e 10     ....... @.......
     3f0:	10 10 10 10 10 10 10 10 10 10 1e 00 40 20 20 20     ............@   
     400:	10 10 18 08 08 04 04 04 02 00 78 08 08 08 08 08     ..........x.....
     410:	08 08 08 08 08 08 78 00 00 08 08 18 14 14 24 22     ......x.......$"
     420:	42 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     B...............
     430:	00 ff 00 00 08 04 00 00 00 00 00 00 00 00 00 00     ................
     440:	00 00 00 00 00 00 3c 02 02 3e 42 42 3f 00 00 00     ......<..>BB?...
     450:	40 40 40 40 5c 62 42 42 42 62 5c 00 00 00 00 00     @@@@\bBBBb\.....
     460:	00 00 1e 20 40 40 40 20 1e 00 00 00 02 02 02 02     ... @@@ ........
     470:	3a 46 42 42 42 46 3a 00 00 00 00 00 00 00 3c 22     :FBBBF:.......<"
     480:	42 7e 40 40 3e 00 00 00 0e 10 10 10 7e 10 10 10     B~@@>.......~...
     490:	10 10 10 00 00 00 00 00 00 00 3e 46 42 42 42 46     ..........>FBBBF
     4a0:	3a 02 02 3c 40 40 40 40 5c 62 42 42 42 42 42 00     :..<@@@@\bBBBBB.
     4b0:	00 00 18 18 00 00 78 08 08 08 08 08 08 00 00 00     ......x.........
     4c0:	0c 0c 00 00 3c 04 04 04 04 04 04 04 04 78 40 40     ....<........x@@
     4d0:	40 40 44 48 50 60 58 44 42 00 00 00 78 08 08 08     @@DHP`XDB...x...
     4e0:	08 08 08 08 08 08 08 00 00 00 00 00 00 00 b6 da     ................
     4f0:	92 92 92 92 92 00 00 00 00 00 00 00 5c 62 42 42     ............\bBB
     500:	42 42 42 00 00 00 00 00 00 00 38 44 82 82 82 44     BBB.......8D...D
     510:	38 00 00 00 00 00 00 00 5c 62 42 42 42 62 5c 40     8.......\bBBBb\@
     520:	40 40 00 00 00 00 3a 46 42 42 42 46 3a 02 02 02     @@....:FBBBF:...
     530:	00 00 00 00 5c 64 40 40 40 40 40 00 00 00 00 00     ....\d@@@@@.....
     540:	00 00 3c 40 60 18 04 04 78 00 00 00 00 00 20 20     ..<@`...x.....  
     550:	fe 20 20 20 20 20 1e 00 00 00 00 00 00 00 42 42     .     ........BB
     560:	42 42 42 46 3a 00 00 00 00 00 00 00 81 42 42 44     BBBF:........BBD
     570:	28 28 10 00 00 00 00 00 00 00 81 89 5a 5a 66 24     ((..........ZZf$
     580:	24 00 00 00 00 00 00 00 42 24 18 18 18 24 42 00     $.......B$...$B.
     590:	00 00 00 00 00 00 81 42 42 24 24 18 18 10 30 e0     .......BB$$...0.
     5a0:	00 00 00 00 fe 04 08 10 20 40 fe 00 00 00           ........ @....

000005ae <font8>:
	...
     5b6:	30 78 78 30 30 00 30 00 6c 6c 6c 00 00 00 00 00     0xx00.0.lll.....
     5c6:	6c 6c fe 6c fe 6c 6c 00 30 7c c0 78 0c f8 30 00     ll.l.ll.0|.x..0.
     5d6:	00 c6 cc 18 30 66 c6 00 38 6c 38 76 dc cc 76 00     ....0f..8l8v..v.
     5e6:	60 60 c0 00 00 00 00 00 18 30 60 60 60 30 18 00     ``.......0```0..
     5f6:	60 30 18 18 18 30 60 00 00 66 3c ff 3c 66 00 00     `0...0`..f<.<f..
     606:	00 30 30 fc 30 30 00 00 00 00 00 00 00 70 30 60     .00.00.......p0`
     616:	00 00 00 fc 00 00 00 00 00 00 00 00 00 30 30 00     .............00.
     626:	06 0c 18 30 60 c0 80 00 78 cc dc fc ec cc 78 00     ...0`...x.....x.
     636:	30 f0 30 30 30 30 fc 00 78 cc 0c 38 60 cc fc 00     0.0000..x..8`...
     646:	78 cc 0c 38 0c cc 78 00 1c 3c 6c cc fe 0c 0c 00     x..8..x..<l.....
     656:	fc c0 f8 0c 0c cc 78 00 38 60 c0 f8 cc cc 78 00     ......x.8`....x.
     666:	fc cc 0c 18 30 60 60 00 78 cc cc 78 cc cc 78 00     ....0``.x..x..x.
     676:	78 cc cc 7c 0c 18 70 00 00 00 30 30 00 30 30 00     x..|..p...00.00.
     686:	00 00 30 30 00 70 30 60 18 30 60 c0 60 30 18 00     ..00.p0`.0`.`0..
     696:	00 00 fc 00 fc 00 00 00 60 30 18 0c 18 30 60 00     ........`0...0`.
     6a6:	78 cc 0c 18 30 00 30 00 7c c6 de de de c0 78 00     x...0.0.|.....x.
     6b6:	30 78 cc cc fc cc cc 00 fc 66 66 7c 66 66 fc 00     0x.......ff|ff..
     6c6:	3c 66 c0 c0 c0 66 3c 00 fc 6c 66 66 66 6c fc 00     <f...f<..lfffl..
     6d6:	fe 62 68 78 68 62 fe 00 fe 62 68 78 68 60 f0 00     .bhxhb...bhxh`..
     6e6:	3c 66 c0 c0 ce 66 3e 00 cc cc cc fc cc cc cc 00     <f...f>.........
     6f6:	78 30 30 30 30 30 78 00 1e 0c 0c 0c cc cc 78 00     x00000x.......x.
     706:	e6 66 6c 78 6c 66 e6 00 f0 60 60 60 62 66 fe 00     .flxlf...```bf..
     716:	c6 ee fe d6 c6 c6 c6 00 c6 e6 f6 de ce c6 c6 00     ................
     726:	38 6c c6 c6 c6 6c 38 00 fc 66 66 7c 60 60 f0 00     8l...l8..ff|``..
     736:	78 cc cc cc dc 78 1c 00 fc 66 66 7c 78 6c e6 00     x....x...ff|xl..
     746:	78 cc e0 38 1c cc 78 00 fc b4 30 30 30 30 78 00     x..8..x...0000x.
     756:	cc cc cc cc cc cc fc 00 cc cc cc cc cc 78 30 00     .............x0.
     766:	c6 c6 c6 d6 fe ee c6 00 c6 c6 6c 38 6c c6 c6 00     ..........l8l...
     776:	cc cc cc 78 30 30 78 00 fe cc 98 30 62 c6 fe 00     ...x00x....0b...
     786:	78 60 60 60 60 60 78 00 c0 60 30 18 0c 06 02 00     x`````x..`0.....
     796:	78 18 18 18 18 18 78 00 10 38 6c c6 00 00 00 00     x.....x..8l.....
     7a6:	00 00 00 00 00 00 00 ff 30 30 18 00 00 00 00 00     ........00......
     7b6:	00 00 78 0c 7c cc 76 00 e0 60 7c 66 66 66 bc 00     ..x.|.v..`|fff..
     7c6:	00 00 78 cc c0 cc 78 00 1c 0c 0c 7c cc cc 76 00     ..x...x....|..v.
     7d6:	00 00 78 cc fc c0 78 00 38 6c 60 f0 60 60 f0 00     ..x...x.8l`.``..
     7e6:	00 00 76 cc cc 7c 0c f8 e0 60 6c 76 66 66 e6 00     ..v..|...`lvff..
     7f6:	30 00 70 30 30 30 78 00 18 00 78 18 18 18 d8 70     0.p000x...x....p
     806:	e0 60 66 6c 78 6c e6 00 70 30 30 30 30 30 78 00     .`flxl..p00000x.
     816:	00 00 ec fe d6 c6 c6 00 00 00 f8 cc cc cc cc 00     ................
     826:	00 00 78 cc cc cc 78 00 00 00 dc 66 66 7c 60 f0     ..x...x....ff|`.
     836:	00 00 76 cc cc 7c 0c 1e 00 00 d8 6c 6c 60 f0 00     ..v..|.....ll`..
     846:	00 00 7c c0 78 0c f8 00 10 30 7c 30 30 34 18 00     ..|.x....0|004..
     856:	00 00 cc cc cc cc 76 00 00 00 cc cc cc 78 30 00     ......v......x0.
     866:	00 00 c6 c6 d6 fe 6c 00 00 00 c6 6c 38 6c c6 00     ......l....l8l..
     876:	00 00 cc cc cc 7c 0c f8 00 00 fc 98 30 64 fc 00     .....|......0d..

00000886 <pic>:
     886:	00 00 00 00 00 c0 00 e0 00 f0 00 fc 00 00 00 00     ................
     896:	04 06 12 12 fe ec 00 f8 fc 06 02 22 e6 e4 00 00     ..........."....
     8a6:	00 f0 90 9c 04 f4 04 f4 f4 04 f4 f4 04 04 fc 00     ................
     8b6:	00 00 00 03 00 03 00 03 00 03 00 03 00 00 00 00     ................
     8c6:	01 03 02 02 03 01 00 00 01 03 02 02 03 01 00 00     ................
     8d6:	00 00 00 03 02 02 02 02 02 02 02 02 02 02 03 00     ................
     8e6:	00 00 0c 06 ff ff 00 00 00 0c 06 ff ff 00 00 00     ................
     8f6:	18 18 00 fe ff 01 01 ff fe 00 1c 1f 0b 09 f9 f1     ................
     906:	00 f8 48 48 78 00 f8 30 c0 00 c0 30 f8 00 00 00     ..HHx..0...0....
     916:	00 00 c0 20 23 23 20 40 00 00 80 83 83 00 80 e0     ... ## @........
     926:	83 03 80 01 03 02 82 03 81 00 81 03 02 82 83 01     ................
     936:	e0 03 00 80 80 80 03 00 81 02 01 00 83 00 00 00     ................
     946:	00 00 08 11 11 12 12 0c 00 0d 12 12 0a 1f 00 1f     ................
     956:	10 00 0f 10 10 08 1f 00 1f 01 00 00 0f 10 10 09     ................
     966:	1f 00 0d 12 12 0a 1f 00 01 46 38 06 01 00 00 00     .........F8.....
     976:	f8 04 04 04 88 00 fc 10 10 e0 00 f4 00 f0 10 10     ................
     986:	e0 00 90 50 50 f0 00 fc 18 e0 00 e0 18 fc e0 10     ...PP...........
     996:	10 e0 00 fc 10 10 e0 00 f4 00 fc 00 e0 50 50 60     .............PP`
     9a6:	00 01 01 01 c0 00 01 00 00 01 00 01 00 01 00 00     ................
     9b6:	01 00 81 41 41 41 80 01 00 00 81 40 40 41 80 01     ...AAA.....@@A..
     9c6:	81 40 40 41 81 01 00 80 c1 00 81 40 40 41 81 01     .@@A.......@@A..
     9d6:	00 18 20 20 1f 00 1a 25 25 15 3e 00 3f 01 01 01     ..  ...%%.>.?...
     9e6:	3e 00 1d 22 22 22 1d 00 00 00 20 30 28 24 23 00     >..""".... 0($#.
     9f6:	1f 20 20 20 1f 00 01 00 3f 00 1d 22 22 22 1d 00     .   ....?.."""..

00000a06 <__ctors_end>:
     a06:	11 24       	eor	r1, r1
     a08:	1f be       	out	0x3f, r1	; 63
     a0a:	cf ef       	ldi	r28, 0xFF	; 255
     a0c:	d8 e0       	ldi	r29, 0x08	; 8
     a0e:	de bf       	out	0x3e, r29	; 62
     a10:	cd bf       	out	0x3d, r28	; 61

00000a12 <__do_copy_data>:
     a12:	11 e0       	ldi	r17, 0x01	; 1
     a14:	a0 e0       	ldi	r26, 0x00	; 0
     a16:	b1 e0       	ldi	r27, 0x01	; 1
     a18:	e4 e7       	ldi	r30, 0x74	; 116
     a1a:	f0 e1       	ldi	r31, 0x10	; 16
     a1c:	02 c0       	rjmp	.+4      	; 0xa22 <__do_copy_data+0x10>
     a1e:	05 90       	lpm	r0, Z+
     a20:	0d 92       	st	X+, r0
     a22:	a2 35       	cpi	r26, 0x52	; 82
     a24:	b1 07       	cpc	r27, r17
     a26:	d9 f7       	brne	.-10     	; 0xa1e <__do_copy_data+0xc>

00000a28 <__do_clear_bss>:
     a28:	21 e0       	ldi	r18, 0x01	; 1
     a2a:	a2 e5       	ldi	r26, 0x52	; 82
     a2c:	b1 e0       	ldi	r27, 0x01	; 1
     a2e:	01 c0       	rjmp	.+2      	; 0xa32 <.do_clear_bss_start>

00000a30 <.do_clear_bss_loop>:
     a30:	1d 92       	st	X+, r1

00000a32 <.do_clear_bss_start>:
     a32:	af 36       	cpi	r26, 0x6F	; 111
     a34:	b2 07       	cpc	r27, r18
     a36:	e1 f7       	brne	.-8      	; 0xa30 <.do_clear_bss_loop>
     a38:	0e 94 82 07 	call	0xf04	; 0xf04 <main>
     a3c:	0c 94 38 08 	jmp	0x1070	; 0x1070 <_exit>

00000a40 <__bad_interrupt>:
     a40:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000a44 <SPI_MasterInit>:
void SPI_MasterInit(void)
{
	/* Set MOSI and SCK output, all others input */
	//DDRB = (1<<MOSI)|(1<<SCK);
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR0 = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
     a44:	81 e5       	ldi	r24, 0x51	; 81
     a46:	8c bd       	out	0x2c, r24	; 44
}
     a48:	08 95       	ret

00000a4a <SPI_MasterTransmit>:
void SPI_MasterTransmit(char cData)
{
	/* Start transmission */
	SPDR0 = cData;
     a4a:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while(!(SPSR0 & (1<<SPIF)));
     a4c:	0d b4       	in	r0, 0x2d	; 45
     a4e:	07 fe       	sbrs	r0, 7
     a50:	fd cf       	rjmp	.-6      	; 0xa4c <SPI_MasterTransmit+0x2>
}
     a52:	08 95       	ret

00000a54 <send_data>:
void send_data(char data)
{
	DISP_DATA;
     a54:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
     a56:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     a58:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     a5a:	0d b4       	in	r0, 0x2d	; 45
     a5c:	07 fe       	sbrs	r0, 7
     a5e:	fd cf       	rjmp	.-6      	; 0xa5a <send_data+0x6>
	SPI_MasterTransmit(data);
	CS_DISP_1;
     a60:	28 9a       	sbi	0x05, 0	; 5
}
     a62:	08 95       	ret

00000a64 <send_command>:
void send_command(char command)
{
	DISP_COMM;
     a64:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     a66:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     a68:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     a6a:	0d b4       	in	r0, 0x2d	; 45
     a6c:	07 fe       	sbrs	r0, 7
     a6e:	fd cf       	rjmp	.-6      	; 0xa6a <send_command+0x6>
	SPI_MasterTransmit(command);
	CS_DISP_1;
     a70:	28 9a       	sbi	0x05, 0	; 5
}
     a72:	08 95       	ret

00000a74 <Set_Page_Address>:

void Set_Page_Address(unsigned char add)
{
    add=0xb0|add;
     a74:	80 6b       	ori	r24, 0xB0	; 176
	DISP_COMM;
     a76:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     a78:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     a7a:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     a7c:	0d b4       	in	r0, 0x2d	; 45
     a7e:	07 fe       	sbrs	r0, 7
     a80:	fd cf       	rjmp	.-6      	; 0xa7c <Set_Page_Address+0x8>
	CS_DISP_1;
     a82:	28 9a       	sbi	0x05, 0	; 5
    send_command(add);
	return;
}
     a84:	08 95       	ret

00000a86 <Set_Column_Address>:
void Set_Column_Address(unsigned char add)
{	 add+=40;
     a86:	88 5d       	subi	r24, 0xD8	; 216
    send_command((0x10|(add>>4)));
     a88:	98 2f       	mov	r25, r24
     a8a:	92 95       	swap	r25
     a8c:	9f 70       	andi	r25, 0x0F	; 15
     a8e:	90 61       	ori	r25, 0x10	; 16
	DISP_COMM;
     a90:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     a92:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     a94:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
     a96:	0d b4       	in	r0, 0x2d	; 45
     a98:	07 fe       	sbrs	r0, 7
     a9a:	fd cf       	rjmp	.-6      	; 0xa96 <Set_Column_Address+0x10>
	CS_DISP_1;
     a9c:	28 9a       	sbi	0x05, 0	; 5
	send_command((0x0f&add));
     a9e:	8f 70       	andi	r24, 0x0F	; 15
	DISP_COMM;
     aa0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     aa2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     aa4:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     aa6:	0d b4       	in	r0, 0x2d	; 45
     aa8:	07 fe       	sbrs	r0, 7
     aaa:	fd cf       	rjmp	.-6      	; 0xaa6 <Set_Column_Address+0x20>
	CS_DISP_1;
     aac:	28 9a       	sbi	0x05, 0	; 5
	return;
}
     aae:	08 95       	ret

00000ab0 <Set_Contrast_Control_Register>:
	DISP_COMM;
     ab0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     ab2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     ab4:	91 e8       	ldi	r25, 0x81	; 129
     ab6:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
     ab8:	0d b4       	in	r0, 0x2d	; 45
     aba:	07 fe       	sbrs	r0, 7
     abc:	fd cf       	rjmp	.-6      	; 0xab8 <Set_Contrast_Control_Register+0x8>
	CS_DISP_1;
     abe:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     ac0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     ac2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     ac4:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     ac6:	0d b4       	in	r0, 0x2d	; 45
     ac8:	07 fe       	sbrs	r0, 7
     aca:	fd cf       	rjmp	.-6      	; 0xac6 <Set_Contrast_Control_Register+0x16>
	CS_DISP_1;
     acc:	28 9a       	sbi	0x05, 0	; 5
void Set_Contrast_Control_Register(unsigned char mod)
{
    send_command(0x81);
	send_command(mod);
	return;
}
     ace:	08 95       	ret

00000ad0 <Display_Picture>:
void Display_Picture(const unsigned char pic[])
{
	//Display picture 48x64
    unsigned char i,j;
	for(i=0;i<0x08;i++)
     ad0:	9c 01       	movw	r18, r24
     ad2:	20 5d       	subi	r18, 0xD0	; 208
     ad4:	3f 4f       	sbci	r19, 0xFF	; 255
     ad6:	90 e0       	ldi	r25, 0x00	; 0
	SPDR0 = cData;
     ad8:	52 e1       	ldi	r21, 0x12	; 18
     ada:	48 e0       	ldi	r20, 0x08	; 8
	DISP_COMM;
     adc:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     ade:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     ae0:	89 2f       	mov	r24, r25
     ae2:	80 6b       	ori	r24, 0xB0	; 176
     ae4:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     ae6:	0d b4       	in	r0, 0x2d	; 45
     ae8:	07 fe       	sbrs	r0, 7
     aea:	fd cf       	rjmp	.-6      	; 0xae6 <Display_Picture+0x16>
	CS_DISP_1;
     aec:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     aee:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     af0:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     af2:	5e bd       	out	0x2e, r21	; 46
	while(!(SPSR0 & (1<<SPIF)));
     af4:	0d b4       	in	r0, 0x2d	; 45
     af6:	07 fe       	sbrs	r0, 7
     af8:	fd cf       	rjmp	.-6      	; 0xaf4 <Display_Picture+0x24>
	CS_DISP_1;
     afa:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     afc:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     afe:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     b00:	4e bd       	out	0x2e, r20	; 46
	while(!(SPSR0 & (1<<SPIF)));
     b02:	0d b4       	in	r0, 0x2d	; 45
     b04:	07 fe       	sbrs	r0, 7
     b06:	fd cf       	rjmp	.-6      	; 0xb02 <Display_Picture+0x32>
	CS_DISP_1;
     b08:	28 9a       	sbi	0x05, 0	; 5
	{
	Set_Page_Address(i);
    Set_Column_Address(0x00);
        for(j=0;j<0x30;j++)
     b0a:	f9 01       	movw	r30, r18
     b0c:	f0 97       	sbiw	r30, 0x30	; 48
		{
		    send_data(pgm_read_byte(&pic[i*0x30+j]));
     b0e:	84 91       	lpm	r24, Z
	DISP_DATA;
     b10:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
     b12:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     b14:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     b16:	0d b4       	in	r0, 0x2d	; 45
     b18:	07 fe       	sbrs	r0, 7
     b1a:	fd cf       	rjmp	.-6      	; 0xb16 <Display_Picture+0x46>
	CS_DISP_1;
     b1c:	28 9a       	sbi	0x05, 0	; 5
        for(j=0;j<0x30;j++)
     b1e:	31 96       	adiw	r30, 0x01	; 1
     b20:	e2 17       	cp	r30, r18
     b22:	f3 07       	cpc	r31, r19
     b24:	a1 f7       	brne	.-24     	; 0xb0e <Display_Picture+0x3e>
	for(i=0;i<0x08;i++)
     b26:	9f 5f       	subi	r25, 0xFF	; 255
     b28:	9f 01       	movw	r18, r30
     b2a:	20 5d       	subi	r18, 0xD0	; 208
     b2c:	3f 4f       	sbci	r19, 0xFF	; 255
     b2e:	98 30       	cpi	r25, 0x08	; 8
     b30:	a9 f6       	brne	.-86     	; 0xadc <Display_Picture+0xc>
		}
	}
    return;
}
     b32:	08 95       	ret

00000b34 <Display_Clear>:
void Display_Clear(void)
{
	//clear whole display
	unsigned char i,j;
	for(i=0;i<0x08;i++)
     b34:	90 e0       	ldi	r25, 0x00	; 0
	SPDR0 = cData;
     b36:	32 e1       	ldi	r19, 0x12	; 18
     b38:	28 e0       	ldi	r18, 0x08	; 8
	DISP_COMM;
     b3a:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     b3c:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     b3e:	89 2f       	mov	r24, r25
     b40:	80 6b       	ori	r24, 0xB0	; 176
     b42:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     b44:	0d b4       	in	r0, 0x2d	; 45
     b46:	07 fe       	sbrs	r0, 7
     b48:	fd cf       	rjmp	.-6      	; 0xb44 <Display_Clear+0x10>
	CS_DISP_1;
     b4a:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     b4c:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     b4e:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     b50:	3e bd       	out	0x2e, r19	; 46
	while(!(SPSR0 & (1<<SPIF)));
     b52:	0d b4       	in	r0, 0x2d	; 45
     b54:	07 fe       	sbrs	r0, 7
     b56:	fd cf       	rjmp	.-6      	; 0xb52 <Display_Clear+0x1e>
	CS_DISP_1;
     b58:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     b5a:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     b5c:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     b5e:	2e bd       	out	0x2e, r18	; 46
	while(!(SPSR0 & (1<<SPIF)));
     b60:	0d b4       	in	r0, 0x2d	; 45
     b62:	07 fe       	sbrs	r0, 7
     b64:	fd cf       	rjmp	.-6      	; 0xb60 <Display_Clear+0x2c>
	CS_DISP_1;
     b66:	28 9a       	sbi	0x05, 0	; 5
     b68:	80 e3       	ldi	r24, 0x30	; 48
	DISP_DATA;
     b6a:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
     b6c:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     b6e:	1e bc       	out	0x2e, r1	; 46
	while(!(SPSR0 & (1<<SPIF)));
     b70:	0d b4       	in	r0, 0x2d	; 45
     b72:	07 fe       	sbrs	r0, 7
     b74:	fd cf       	rjmp	.-6      	; 0xb70 <Display_Clear+0x3c>
	CS_DISP_1;
     b76:	28 9a       	sbi	0x05, 0	; 5
	{
	Set_Page_Address(i);
    Set_Column_Address(0x00);
        for(j=0;j<0x30;j++)
     b78:	81 50       	subi	r24, 0x01	; 1
     b7a:	b9 f7       	brne	.-18     	; 0xb6a <Display_Clear+0x36>
	for(i=0;i<0x08;i++)
     b7c:	9f 5f       	subi	r25, 0xFF	; 255
     b7e:	98 30       	cpi	r25, 0x08	; 8
     b80:	e1 f6       	brne	.-72     	; 0xb3a <Display_Clear+0x6>
		{
		    send_data(0x00);
		}
	}
    return;
}
     b82:	08 95       	ret

00000b84 <Write_String>:

void Write_String(uint8_t fontsize, uint8_t row, uint8_t pos, const char str[]) 
{
     b84:	cf 93       	push	r28
     b86:	df 93       	push	r29
     b88:	58 2f       	mov	r21, r24
     b8a:	86 2f       	mov	r24, r22
     b8c:	f9 01       	movw	r30, r18
	//set position for new char (font size 8x14)
	Set_Page_Address(7-pos);	//0-7 	(* 8 bit)
     b8e:	97 e0       	ldi	r25, 0x07	; 7
     b90:	94 1b       	sub	r25, r20
    add=0xb0|add;
     b92:	90 6b       	ori	r25, 0xB0	; 176
	DISP_COMM;
     b94:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     b96:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     b98:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
     b9a:	0d b4       	in	r0, 0x2d	; 45
     b9c:	07 fe       	sbrs	r0, 7
     b9e:	fd cf       	rjmp	.-6      	; 0xb9a <Write_String+0x16>
	CS_DISP_1;
     ba0:	28 9a       	sbi	0x05, 0	; 5
	switch(fontsize)
	{
		case 1:	fontsize = 8;break;		//8x8
		case 2:	fontsize = 14;break;	//8x14
     ba2:	ce e0       	ldi	r28, 0x0E	; 14
	switch(fontsize)
     ba4:	52 30       	cpi	r21, 0x02	; 2
     ba6:	09 f0       	breq	.+2      	; 0xbaa <Write_String+0x26>
		case 1:	fontsize = 8;break;		//8x8
     ba8:	c8 e0       	ldi	r28, 0x08	; 8
		default: fontsize = 8;
	}
	
		Set_Column_Address(row*fontsize);	//0-3	(* 14 collums / char)
     baa:	c8 9f       	mul	r28, r24
     bac:	60 2d       	mov	r22, r0
     bae:	11 24       	eor	r1, r1
{	 add+=40;
     bb0:	68 5d       	subi	r22, 0xD8	; 216
    send_command((0x10|(add>>4)));
     bb2:	d6 2f       	mov	r29, r22
     bb4:	d2 95       	swap	r29
     bb6:	df 70       	andi	r29, 0x0F	; 15
     bb8:	d0 61       	ori	r29, 0x10	; 16
	DISP_COMM;
     bba:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     bbc:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     bbe:	de bd       	out	0x2e, r29	; 46
	while(!(SPSR0 & (1<<SPIF)));
     bc0:	0d b4       	in	r0, 0x2d	; 45
     bc2:	07 fe       	sbrs	r0, 7
     bc4:	fd cf       	rjmp	.-6      	; 0xbc0 <Write_String+0x3c>
	CS_DISP_1;
     bc6:	28 9a       	sbi	0x05, 0	; 5
	send_command((0x0f&add));
     bc8:	6f 70       	andi	r22, 0x0F	; 15
	DISP_COMM;
     bca:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     bcc:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     bce:	6e bd       	out	0x2e, r22	; 46
	while(!(SPSR0 & (1<<SPIF)));
     bd0:	0d b4       	in	r0, 0x2d	; 45
     bd2:	07 fe       	sbrs	r0, 7
     bd4:	fd cf       	rjmp	.-6      	; 0xbd0 <Write_String+0x4c>
	CS_DISP_1;
     bd6:	28 9a       	sbi	0x05, 0	; 5
		while (*str) 
     bd8:	80 81       	ld	r24, Z
     bda:	88 23       	and	r24, r24
     bdc:	09 f4       	brne	.+2      	; 0xbe0 <Write_String+0x5c>
     bde:	40 c0       	rjmp	.+128    	; 0xc60 <Write_String+0xdc>
     be0:	9e 2f       	mov	r25, r30
     be2:	2f 2f       	mov	r18, r31
     be4:	77 e0       	ldi	r23, 0x07	; 7
     be6:	7e 0f       	add	r23, r30
     be8:	ec 2f       	mov	r30, r28
     bea:	f0 e0       	ldi	r31, 0x00	; 0
    add=0xb0|add;
     bec:	74 1b       	sub	r23, r20
     bee:	af 01       	movw	r20, r30
     bf0:	4c 54       	subi	r20, 0x4C	; 76
     bf2:	5f 4f       	sbci	r21, 0xFF	; 255
	DISP_COMM;
     bf4:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     bf6:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     bf8:	de bd       	out	0x2e, r29	; 46
	while(!(SPSR0 & (1<<SPIF)));
     bfa:	0d b4       	in	r0, 0x2d	; 45
     bfc:	07 fe       	sbrs	r0, 7
     bfe:	fd cf       	rjmp	.-6      	; 0xbfa <Write_String+0x76>
	CS_DISP_1;
     c00:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     c02:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     c04:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     c06:	6e bd       	out	0x2e, r22	; 46
	while(!(SPSR0 & (1<<SPIF)));
     c08:	0d b4       	in	r0, 0x2d	; 45
     c0a:	07 fe       	sbrs	r0, 7
     c0c:	fd cf       	rjmp	.-6      	; 0xc08 <Write_String+0x84>
	CS_DISP_1;
     c0e:	28 9a       	sbi	0x05, 0	; 5
    add=0xb0|add;
     c10:	87 2f       	mov	r24, r23
     c12:	89 1b       	sub	r24, r25
     c14:	80 6b       	ori	r24, 0xB0	; 176
	DISP_COMM;
     c16:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     c18:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     c1a:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     c1c:	0d b4       	in	r0, 0x2d	; 45
     c1e:	07 fe       	sbrs	r0, 7
     c20:	fd cf       	rjmp	.-6      	; 0xc1c <Write_String+0x98>
	CS_DISP_1;
     c22:	28 9a       	sbi	0x05, 0	; 5
		{
			Set_Column_Address(row*fontsize);
			Set_Page_Address(7-pos);
			Write_Char(fontsize,*str++);
     c24:	a9 2f       	mov	r26, r25
     c26:	b2 2f       	mov	r27, r18

void Write_Char(uint8_t fontsize, char n)
{
	//uint8_t *fsize;
	uint8_t x;
	n-=0x21;	//jump to position in asci table
     c28:	2d 91       	ld	r18, X+
     c2a:	21 52       	subi	r18, 0x21	; 33
	
	for(x=0;x<fontsize;x++) //print char
	{
			send_data(pgm_read_byte(&font14[(n*fontsize)+x]));
     c2c:	2c 9f       	mul	r18, r28
     c2e:	90 01       	movw	r18, r0
     c30:	11 24       	eor	r1, r1
     c32:	f9 01       	movw	r30, r18
     c34:	ec 54       	subi	r30, 0x4C	; 76
     c36:	ff 4f       	sbci	r31, 0xFF	; 255
     c38:	24 0f       	add	r18, r20
     c3a:	35 1f       	adc	r19, r21
     c3c:	84 91       	lpm	r24, Z
	DISP_DATA;
     c3e:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
     c40:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     c42:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     c44:	0d b4       	in	r0, 0x2d	; 45
     c46:	07 fe       	sbrs	r0, 7
     c48:	fd cf       	rjmp	.-6      	; 0xc44 <Write_String+0xc0>
	CS_DISP_1;
     c4a:	28 9a       	sbi	0x05, 0	; 5
	for(x=0;x<fontsize;x++) //print char
     c4c:	31 96       	adiw	r30, 0x01	; 1
     c4e:	2e 17       	cp	r18, r30
     c50:	3f 07       	cpc	r19, r31
     c52:	a1 f7       	brne	.-24     	; 0xc3c <Write_String+0xb8>
		while (*str) 
     c54:	8c 91       	ld	r24, X
     c56:	88 23       	and	r24, r24
     c58:	19 f0       	breq	.+6      	; 0xc60 <Write_String+0xdc>
			Write_Char(fontsize,*str++);
     c5a:	9a 2f       	mov	r25, r26
     c5c:	2b 2f       	mov	r18, r27
     c5e:	ca cf       	rjmp	.-108    	; 0xbf4 <Write_String+0x70>
}//End of PlotString
     c60:	df 91       	pop	r29
     c62:	cf 91       	pop	r28
     c64:	08 95       	ret

00000c66 <Write_Char>:
	n-=0x21;	//jump to position in asci table
     c66:	61 52       	subi	r22, 0x21	; 33
	for(x=0;x<fontsize;x++) //print char
     c68:	88 23       	and	r24, r24
     c6a:	c1 f0       	breq	.+48     	; 0xc9c <Write_Char+0x36>
			send_data(pgm_read_byte(&font14[(n*fontsize)+x]));
     c6c:	68 9f       	mul	r22, r24
     c6e:	b0 01       	movw	r22, r0
     c70:	11 24       	eor	r1, r1
     c72:	fb 01       	movw	r30, r22
     c74:	ec 54       	subi	r30, 0x4C	; 76
     c76:	ff 4f       	sbci	r31, 0xFF	; 255
     c78:	81 50       	subi	r24, 0x01	; 1
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	8b 54       	subi	r24, 0x4B	; 75
     c7e:	9f 4f       	sbci	r25, 0xFF	; 255
     c80:	86 0f       	add	r24, r22
     c82:	97 1f       	adc	r25, r23
     c84:	24 91       	lpm	r18, Z
	DISP_DATA;
     c86:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
     c88:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     c8a:	2e bd       	out	0x2e, r18	; 46
	while(!(SPSR0 & (1<<SPIF)));
     c8c:	0d b4       	in	r0, 0x2d	; 45
     c8e:	07 fe       	sbrs	r0, 7
     c90:	fd cf       	rjmp	.-6      	; 0xc8c <Write_Char+0x26>
	CS_DISP_1;
     c92:	28 9a       	sbi	0x05, 0	; 5
	for(x=0;x<fontsize;x++) //print char
     c94:	31 96       	adiw	r30, 0x01	; 1
     c96:	e8 17       	cp	r30, r24
     c98:	f9 07       	cpc	r31, r25
     c9a:	a1 f7       	brne	.-24     	; 0xc84 <Write_Char+0x1e>
	}
}
     c9c:	08 95       	ret

00000c9e <Char_Position>:


void Char_Position(uint8_t fontsize, uint8_t row, uint8_t pos)
{
	//set position for new char (font size 8x14)
	Set_Page_Address(7-pos);	//0-7 	(* 8 bit)
     c9e:	97 e0       	ldi	r25, 0x07	; 7
     ca0:	94 1b       	sub	r25, r20
    add=0xb0|add;
     ca2:	90 6b       	ori	r25, 0xB0	; 176
	DISP_COMM;
     ca4:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     ca6:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     ca8:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
     caa:	0d b4       	in	r0, 0x2d	; 45
     cac:	07 fe       	sbrs	r0, 7
     cae:	fd cf       	rjmp	.-6      	; 0xcaa <Char_Position+0xc>
	CS_DISP_1;
     cb0:	28 9a       	sbi	0x05, 0	; 5
	Set_Column_Address(row*fontsize);	//0-3	(* 14 collums / char)
     cb2:	68 9f       	mul	r22, r24
     cb4:	80 2d       	mov	r24, r0
     cb6:	11 24       	eor	r1, r1
{	 add+=40;
     cb8:	88 5d       	subi	r24, 0xD8	; 216
    send_command((0x10|(add>>4)));
     cba:	98 2f       	mov	r25, r24
     cbc:	92 95       	swap	r25
     cbe:	9f 70       	andi	r25, 0x0F	; 15
     cc0:	90 61       	ori	r25, 0x10	; 16
	DISP_COMM;
     cc2:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     cc4:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     cc6:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
     cc8:	0d b4       	in	r0, 0x2d	; 45
     cca:	07 fe       	sbrs	r0, 7
     ccc:	fd cf       	rjmp	.-6      	; 0xcc8 <Char_Position+0x2a>
	CS_DISP_1;
     cce:	28 9a       	sbi	0x05, 0	; 5
	send_command((0x0f&add));
     cd0:	8f 70       	andi	r24, 0x0F	; 15
	DISP_COMM;
     cd2:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     cd4:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     cd6:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     cd8:	0d b4       	in	r0, 0x2d	; 45
     cda:	07 fe       	sbrs	r0, 7
     cdc:	fd cf       	rjmp	.-6      	; 0xcd8 <Char_Position+0x3a>
	CS_DISP_1;
     cde:	28 9a       	sbi	0x05, 0	; 5
}
     ce0:	08 95       	ret

00000ce2 <Display_Init>:
void Display_Init(void)
{
	/*Init session according datasheet and sample code:
	 *https://www.buydisplay.com/serial-spi-0-71-inch-white-48x64-graphic-oled-display-ssd1306
	 * */
	DISP_RST_1;
     ce2:	29 9a       	sbi	0x05, 1	; 5
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     ce4:	80 e2       	ldi	r24, 0x20	; 32
     ce6:	9e e4       	ldi	r25, 0x4E	; 78
     ce8:	fc 01       	movw	r30, r24
     cea:	31 97       	sbiw	r30, 0x01	; 1
     cec:	f1 f7       	brne	.-4      	; 0xcea <Display_Init+0x8>
	_delay_ms(10);
	DISP_RST_0;
     cee:	29 98       	cbi	0x05, 1	; 5
     cf0:	e0 e4       	ldi	r30, 0x40	; 64
     cf2:	fc e9       	ldi	r31, 0x9C	; 156
     cf4:	31 97       	sbiw	r30, 0x01	; 1
     cf6:	f1 f7       	brne	.-4      	; 0xcf4 <Display_Init+0x12>
	_delay_ms(20);
	DISP_RST_1;
     cf8:	29 9a       	sbi	0x05, 1	; 5
     cfa:	01 97       	sbiw	r24, 0x01	; 1
     cfc:	f1 f7       	brne	.-4      	; 0xcfa <Display_Init+0x18>
	_delay_ms(10);
	DISP_COMM;
     cfe:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;		
     d00:	28 98       	cbi	0x05, 0	; 5
	DISP_COMM;
     d02:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d04:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     d06:	8e ea       	ldi	r24, 0xAE	; 174
     d08:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     d0a:	0d b4       	in	r0, 0x2d	; 45
     d0c:	07 fe       	sbrs	r0, 7
     d0e:	fd cf       	rjmp	.-6      	; 0xd0a <Display_Init+0x28>
	CS_DISP_1;
     d10:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d12:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d14:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     d16:	85 ed       	ldi	r24, 0xD5	; 213
     d18:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     d1a:	0d b4       	in	r0, 0x2d	; 45
     d1c:	07 fe       	sbrs	r0, 7
     d1e:	fd cf       	rjmp	.-6      	; 0xd1a <Display_Init+0x38>
	CS_DISP_1;
     d20:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d22:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d24:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     d26:	80 e8       	ldi	r24, 0x80	; 128
     d28:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     d2a:	0d b4       	in	r0, 0x2d	; 45
     d2c:	07 fe       	sbrs	r0, 7
     d2e:	fd cf       	rjmp	.-6      	; 0xd2a <Display_Init+0x48>
	CS_DISP_1;
     d30:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d32:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d34:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     d36:	88 ea       	ldi	r24, 0xA8	; 168
     d38:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     d3a:	0d b4       	in	r0, 0x2d	; 45
     d3c:	07 fe       	sbrs	r0, 7
     d3e:	fd cf       	rjmp	.-6      	; 0xd3a <Display_Init+0x58>
	CS_DISP_1;
     d40:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d42:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d44:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     d46:	8f e3       	ldi	r24, 0x3F	; 63
     d48:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     d4a:	0d b4       	in	r0, 0x2d	; 45
     d4c:	07 fe       	sbrs	r0, 7
     d4e:	fd cf       	rjmp	.-6      	; 0xd4a <Display_Init+0x68>
	CS_DISP_1;
     d50:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d52:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d54:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     d56:	83 ed       	ldi	r24, 0xD3	; 211
     d58:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     d5a:	0d b4       	in	r0, 0x2d	; 45
     d5c:	07 fe       	sbrs	r0, 7
     d5e:	fd cf       	rjmp	.-6      	; 0xd5a <Display_Init+0x78>
	CS_DISP_1;
     d60:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d62:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d64:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     d66:	1e bc       	out	0x2e, r1	; 46
	while(!(SPSR0 & (1<<SPIF)));
     d68:	0d b4       	in	r0, 0x2d	; 45
     d6a:	07 fe       	sbrs	r0, 7
     d6c:	fd cf       	rjmp	.-6      	; 0xd68 <Display_Init+0x86>
	CS_DISP_1;
     d6e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d70:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d72:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     d74:	8d e8       	ldi	r24, 0x8D	; 141
     d76:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     d78:	0d b4       	in	r0, 0x2d	; 45
     d7a:	07 fe       	sbrs	r0, 7
     d7c:	fd cf       	rjmp	.-6      	; 0xd78 <Display_Init+0x96>
	CS_DISP_1;
     d7e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d80:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d82:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     d84:	84 e1       	ldi	r24, 0x14	; 20
     d86:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     d88:	0d b4       	in	r0, 0x2d	; 45
     d8a:	07 fe       	sbrs	r0, 7
     d8c:	fd cf       	rjmp	.-6      	; 0xd88 <Display_Init+0xa6>
	CS_DISP_1;
     d8e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d90:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d92:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     d94:	86 ea       	ldi	r24, 0xA6	; 166
     d96:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     d98:	0d b4       	in	r0, 0x2d	; 45
     d9a:	07 fe       	sbrs	r0, 7
     d9c:	fd cf       	rjmp	.-6      	; 0xd98 <Display_Init+0xb6>
	CS_DISP_1;
     d9e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     da0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     da2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     da4:	84 ea       	ldi	r24, 0xA4	; 164
     da6:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     da8:	0d b4       	in	r0, 0x2d	; 45
     daa:	07 fe       	sbrs	r0, 7
     dac:	fd cf       	rjmp	.-6      	; 0xda8 <Display_Init+0xc6>
	CS_DISP_1;
     dae:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     db0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     db2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     db4:	81 ea       	ldi	r24, 0xA1	; 161
     db6:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     db8:	0d b4       	in	r0, 0x2d	; 45
     dba:	07 fe       	sbrs	r0, 7
     dbc:	fd cf       	rjmp	.-6      	; 0xdb8 <Display_Init+0xd6>
	CS_DISP_1;
     dbe:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     dc0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     dc2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     dc4:	88 ec       	ldi	r24, 0xC8	; 200
     dc6:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     dc8:	0d b4       	in	r0, 0x2d	; 45
     dca:	07 fe       	sbrs	r0, 7
     dcc:	fd cf       	rjmp	.-6      	; 0xdc8 <Display_Init+0xe6>
	CS_DISP_1;
     dce:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     dd0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     dd2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     dd4:	8a ed       	ldi	r24, 0xDA	; 218
     dd6:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     dd8:	0d b4       	in	r0, 0x2d	; 45
     dda:	07 fe       	sbrs	r0, 7
     ddc:	fd cf       	rjmp	.-6      	; 0xdd8 <Display_Init+0xf6>
	CS_DISP_1;
     dde:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     de0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     de2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     de4:	82 e1       	ldi	r24, 0x12	; 18
     de6:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     de8:	0d b4       	in	r0, 0x2d	; 45
     dea:	07 fe       	sbrs	r0, 7
     dec:	fd cf       	rjmp	.-6      	; 0xde8 <Display_Init+0x106>
	CS_DISP_1;
     dee:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     df0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     df2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     df4:	81 e8       	ldi	r24, 0x81	; 129
     df6:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     df8:	0d b4       	in	r0, 0x2d	; 45
     dfa:	07 fe       	sbrs	r0, 7
     dfc:	fd cf       	rjmp	.-6      	; 0xdf8 <Display_Init+0x116>
	CS_DISP_1;
     dfe:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     e00:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     e02:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     e04:	81 e0       	ldi	r24, 0x01	; 1
     e06:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     e08:	0d b4       	in	r0, 0x2d	; 45
     e0a:	07 fe       	sbrs	r0, 7
     e0c:	fd cf       	rjmp	.-6      	; 0xe08 <Display_Init+0x126>
	CS_DISP_1;
     e0e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     e10:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     e12:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     e14:	89 ed       	ldi	r24, 0xD9	; 217
     e16:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     e18:	0d b4       	in	r0, 0x2d	; 45
     e1a:	07 fe       	sbrs	r0, 7
     e1c:	fd cf       	rjmp	.-6      	; 0xe18 <Display_Init+0x136>
	CS_DISP_1;
     e1e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     e20:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     e22:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     e24:	81 ef       	ldi	r24, 0xF1	; 241
     e26:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     e28:	0d b4       	in	r0, 0x2d	; 45
     e2a:	07 fe       	sbrs	r0, 7
     e2c:	fd cf       	rjmp	.-6      	; 0xe28 <Display_Init+0x146>
	CS_DISP_1;
     e2e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     e30:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     e32:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     e34:	8b ed       	ldi	r24, 0xDB	; 219
     e36:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     e38:	0d b4       	in	r0, 0x2d	; 45
     e3a:	07 fe       	sbrs	r0, 7
     e3c:	fd cf       	rjmp	.-6      	; 0xe38 <Display_Init+0x156>
	CS_DISP_1;
     e3e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     e40:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     e42:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     e44:	80 e4       	ldi	r24, 0x40	; 64
     e46:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     e48:	0d b4       	in	r0, 0x2d	; 45
     e4a:	07 fe       	sbrs	r0, 7
     e4c:	fd cf       	rjmp	.-6      	; 0xe48 <Display_Init+0x166>
	CS_DISP_1;
     e4e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     e50:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     e52:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     e54:	8f ea       	ldi	r24, 0xAF	; 175
     e56:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     e58:	0d b4       	in	r0, 0x2d	; 45
     e5a:	07 fe       	sbrs	r0, 7
     e5c:	fd cf       	rjmp	.-6      	; 0xe58 <Display_Init+0x176>
	CS_DISP_1;
     e5e:	28 9a       	sbi	0x05, 0	; 5
	send_command(0xd9);//--set pre-charge period
	send_command(0xf1);
	send_command(0xdb);//--set vcomh
	send_command(0x40);//--set start line address orig 40
	send_command(0xaf);//--turn on oled panel
	CS_DISP_1;		   //release chip select
     e60:	28 9a       	sbi	0x05, 0	; 5
	DISP_DATA;
     e62:	2a 9a       	sbi	0x05, 2	; 5
}
     e64:	08 95       	ret

00000e66 <__vector_11>:



ISR (TIMER1_COMPA_vect)
{
     e66:	1f 92       	push	r1
     e68:	1f b6       	in	r1, 0x3f	; 63
     e6a:	1f 92       	push	r1
     e6c:	11 24       	eor	r1, r1
     e6e:	8f 93       	push	r24
	
		ms10++;
     e70:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <ms10>
     e74:	8f 5f       	subi	r24, 0xFF	; 255
     e76:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <ms10>
		if(entprell)entprell--;
     e7a:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <entprell>
     e7e:	88 23       	and	r24, r24
     e80:	29 f0       	breq	.+10     	; 0xe8c <__vector_11+0x26>
     e82:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <entprell>
     e86:	81 50       	subi	r24, 0x01	; 1
     e88:	80 93 55 01 	sts	0x0155, r24	; 0x800155 <entprell>
			
	if(ms10==10)	//100ms
     e8c:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <ms10>
     e90:	8a 30       	cpi	r24, 0x0A	; 10
     e92:	39 f4       	brne	.+14     	; 0xea2 <__vector_11+0x3c>
	{
		ms10=0;
     e94:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <ms10>
		ms100++;
     e98:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <ms100>
     e9c:	8f 5f       	subi	r24, 0xFF	; 255
     e9e:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <ms100>
	
		
	}
    if(ms100==10)	//sec
     ea2:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <ms100>
     ea6:	8a 30       	cpi	r24, 0x0A	; 10
     ea8:	81 f0       	breq	.+32     	; 0xeca <__vector_11+0x64>
			{
				toggle = 1;
			}else toggle =0;
		}
	}
	if(sec==60)	//Minute
     eaa:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <sec>
     eae:	8c 33       	cpi	r24, 0x3C	; 60
     eb0:	39 f4       	brne	.+14     	; 0xec0 <__vector_11+0x5a>
	{
		sec=0;
     eb2:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <sec>
		min++;
     eb6:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <min>
     eba:	8f 5f       	subi	r24, 0xFF	; 255
     ebc:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <min>
	}
}//end of isr
     ec0:	8f 91       	pop	r24
     ec2:	1f 90       	pop	r1
     ec4:	1f be       	out	0x3f, r1	; 63
     ec6:	1f 90       	pop	r1
     ec8:	18 95       	reti
		ms100=0;
     eca:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <ms100>
		sec++;
     ece:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <sec>
     ed2:	8f 5f       	subi	r24, 0xFF	; 255
     ed4:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <sec>
		screentoggle++;
     ed8:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <screentoggle>
     edc:	8f 5f       	subi	r24, 0xFF	; 255
     ede:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <screentoggle>
		if(screentoggle==TOGGLEMAX)
     ee2:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <screentoggle>
     ee6:	84 30       	cpi	r24, 0x04	; 4
     ee8:	01 f7       	brne	.-64     	; 0xeaa <__vector_11+0x44>
			screentoggle=0;
     eea:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <screentoggle>
			if(toggle==0)
     eee:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <toggle>
     ef2:	81 11       	cpse	r24, r1
     ef4:	04 c0       	rjmp	.+8      	; 0xefe <__vector_11+0x98>
				toggle = 1;
     ef6:	81 e0       	ldi	r24, 0x01	; 1
     ef8:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <toggle>
     efc:	d6 cf       	rjmp	.-84     	; 0xeaa <__vector_11+0x44>
			}else toggle =0;
     efe:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <toggle>
     f02:	d3 cf       	rjmp	.-90     	; 0xeaa <__vector_11+0x44>

00000f04 <main>:
	DDRB 	|= (1<<PB0) | (1<<PB1) | (1<<PB2) | (1<<PB3) | (1<<PB5);//set CS_DISP and RES and D/C output
     f04:	84 b1       	in	r24, 0x04	; 4
     f06:	8f 62       	ori	r24, 0x2F	; 47
     f08:	84 b9       	out	0x04, r24	; 4
	PORTB	|= (1<<PB0) | (1<<PB1) | (1<<PB2) | (1<<PB3) | (1<<PB5);//set CS_DISP and RES and D/C high
     f0a:	85 b1       	in	r24, 0x05	; 5
     f0c:	8f 62       	ori	r24, 0x2F	; 47
     f0e:	85 b9       	out	0x05, r24	; 5
	DDRC |= (1<<PC5);	//SCL
     f10:	3d 9a       	sbi	0x07, 5	; 7
	PORTC |= (1<<PC5);
     f12:	45 9a       	sbi	0x08, 5	; 8
	PORTC &= ~(1<<PC5);
     f14:	45 98       	cbi	0x08, 5	; 8
	DDRD &= ~(1<<PD3);	//Button
     f16:	53 98       	cbi	0x0a, 3	; 10
	PORTD |= (1<<PD3);	//activate Pullup
     f18:	5b 9a       	sbi	0x0b, 3	; 11
	SPCR0 = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
     f1a:	81 e5       	ldi	r24, 0x51	; 81
     f1c:	8c bd       	out	0x2c, r24	; 44
	OCR1A = 1249;	//OCR1A = 0x3D08;==1sec
     f1e:	81 ee       	ldi	r24, 0xE1	; 225
     f20:	94 e0       	ldi	r25, 0x04	; 4
     f22:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     f26:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    TCCR1B |= (1 << WGM12);
     f2a:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
     f2e:	88 60       	ori	r24, 0x08	; 8
     f30:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    TIMSK1 |= (1 << OCIE1A);
     f34:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
     f38:	82 60       	ori	r24, 0x02	; 2
     f3a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    TCCR1B |= (1 << CS11) | (1 << CS10);
     f3e:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
     f42:	83 60       	ori	r24, 0x03	; 3
     f44:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    sei();
     f48:	78 94       	sei
    ms10=0;
     f4a:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <ms10>
    ms100=0;
     f4e:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <ms100>
    sec=0;
     f52:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <sec>
    min=0;
     f56:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <min>
    entprell=0;
     f5a:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <entprell>
    screentoggle=3;
     f5e:	83 e0       	ldi	r24, 0x03	; 3
     f60:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <screentoggle>
    toggle=0;
     f64:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <toggle>
    toggle_alt=toggle;
     f68:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <toggle>
     f6c:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <toggle_alt>
	Display_Init();
     f70:	0e 94 71 06 	call	0xce2	; 0xce2 <Display_Init>
	Display_Clear();
     f74:	0e 94 9a 05 	call	0xb34	; 0xb34 <Display_Clear>
    send_command(add);
     f78:	80 eb       	ldi	r24, 0xB0	; 176
     f7a:	0e 94 32 05 	call	0xa64	; 0xa64 <send_command>
    send_command((0x10|(add>>4)));
     f7e:	82 e1       	ldi	r24, 0x12	; 18
     f80:	0e 94 32 05 	call	0xa64	; 0xa64 <send_command>
	send_command((0x0f&add));
     f84:	88 e0       	ldi	r24, 0x08	; 8
     f86:	0e 94 32 05 	call	0xa64	; 0xa64 <send_command>
   state = GREETER;
     f8a:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <state>
     f8e:	80 e0       	ldi	r24, 0x00	; 0
								entprell=RELOAD_ENTPRELL;
     f90:	c8 e2       	ldi	r28, 0x28	; 40
		switch(state)
     f92:	88 23       	and	r24, r24
     f94:	31 f1       	breq	.+76     	; 0xfe2 <main+0xde>
     f96:	81 30       	cpi	r24, 0x01	; 1
     f98:	e1 f7       	brne	.-8      	; 0xf92 <main+0x8e>
			case ZERO:		if(BUTTON)
     f9a:	4b 99       	sbic	0x09, 3	; 9
     f9c:	fe cf       	rjmp	.-4      	; 0xf9a <main+0x96>
     f9e:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <entprell>
     fa2:	81 11       	cpse	r24, r1
     fa4:	fa cf       	rjmp	.-12     	; 0xf9a <main+0x96>
								state=MEASURE;
     fa6:	82 e0       	ldi	r24, 0x02	; 2
     fa8:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <state>
								entprell=RELOAD_ENTPRELL;
     fac:	c0 93 55 01 	sts	0x0155, r28	; 0x800155 <entprell>
								Write_String(14,0,0," Button ");
     fb0:	20 e0       	ldi	r18, 0x00	; 0
     fb2:	31 e0       	ldi	r19, 0x01	; 1
     fb4:	40 e0       	ldi	r20, 0x00	; 0
     fb6:	60 e0       	ldi	r22, 0x00	; 0
     fb8:	8e e0       	ldi	r24, 0x0E	; 14
     fba:	0e 94 c2 05 	call	0xb84	; 0xb84 <Write_String>
								Write_String(14,1,0,"   to   ");
     fbe:	29 e0       	ldi	r18, 0x09	; 9
     fc0:	31 e0       	ldi	r19, 0x01	; 1
     fc2:	40 e0       	ldi	r20, 0x00	; 0
     fc4:	61 e0       	ldi	r22, 0x01	; 1
     fc6:	8e e0       	ldi	r24, 0x0E	; 14
     fc8:	0e 94 c2 05 	call	0xb84	; 0xb84 <Write_String>
								Write_String(14,2,0, "  ZERO  ");
     fcc:	22 e1       	ldi	r18, 0x12	; 18
     fce:	31 e0       	ldi	r19, 0x01	; 1
     fd0:	40 e0       	ldi	r20, 0x00	; 0
     fd2:	62 e0       	ldi	r22, 0x02	; 2
     fd4:	8e e0       	ldi	r24, 0x0E	; 14
     fd6:	0e 94 c2 05 	call	0xb84	; 0xb84 <Write_String>
		switch(state)
     fda:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <state>
     fde:	81 11       	cpse	r24, r1
     fe0:	da cf       	rjmp	.-76     	; 0xf96 <main+0x92>
			case GREETER:	if(BUTTON)
     fe2:	4b 99       	sbic	0x09, 3	; 9
     fe4:	04 c0       	rjmp	.+8      	; 0xfee <main+0xea>
     fe6:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <entprell>
     fea:	88 23       	and	r24, r24
     fec:	31 f1       	breq	.+76     	; 0x103a <main+0x136>
							if(toggle)
     fee:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <toggle>
     ff2:	88 23       	and	r24, r24
     ff4:	89 f0       	breq	.+34     	; 0x1018 <main+0x114>
									Write_String(14,0,0,"If found");
     ff6:	2b e1       	ldi	r18, 0x1B	; 27
     ff8:	31 e0       	ldi	r19, 0x01	; 1
     ffa:	40 e0       	ldi	r20, 0x00	; 0
     ffc:	60 e0       	ldi	r22, 0x00	; 0
     ffe:	8e e0       	ldi	r24, 0x0E	; 14
    1000:	0e 94 c2 05 	call	0xb84	; 0xb84 <Write_String>
									Write_String(14,1,0,"please  ");
    1004:	24 e2       	ldi	r18, 0x24	; 36
    1006:	31 e0       	ldi	r19, 0x01	; 1
    1008:	40 e0       	ldi	r20, 0x00	; 0
    100a:	61 e0       	ldi	r22, 0x01	; 1
    100c:	8e e0       	ldi	r24, 0x0E	; 14
    100e:	0e 94 c2 05 	call	0xb84	; 0xb84 <Write_String>
									Write_String(14,2,0, "contact ");
    1012:	2d e2       	ldi	r18, 0x2D	; 45
    1014:	31 e0       	ldi	r19, 0x01	; 1
    1016:	dc cf       	rjmp	.-72     	; 0xfd0 <main+0xcc>
									Write_String(14,0,0,"rgroener");
    1018:	26 e3       	ldi	r18, 0x36	; 54
    101a:	31 e0       	ldi	r19, 0x01	; 1
    101c:	40 e0       	ldi	r20, 0x00	; 0
    101e:	60 e0       	ldi	r22, 0x00	; 0
    1020:	8e e0       	ldi	r24, 0x0E	; 14
    1022:	0e 94 c2 05 	call	0xb84	; 0xb84 <Write_String>
									Write_String(14,1,0,"@mailbox");
    1026:	2f e3       	ldi	r18, 0x3F	; 63
    1028:	31 e0       	ldi	r19, 0x01	; 1
    102a:	40 e0       	ldi	r20, 0x00	; 0
    102c:	61 e0       	ldi	r22, 0x01	; 1
    102e:	8e e0       	ldi	r24, 0x0E	; 14
    1030:	0e 94 c2 05 	call	0xb84	; 0xb84 <Write_String>
									Write_String(14,2,0, ".org    ");	
    1034:	28 e4       	ldi	r18, 0x48	; 72
    1036:	31 e0       	ldi	r19, 0x01	; 1
    1038:	cb cf       	rjmp	.-106    	; 0xfd0 <main+0xcc>
								state=ZERO;
    103a:	81 e0       	ldi	r24, 0x01	; 1
    103c:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <state>
								entprell=RELOAD_ENTPRELL;
    1040:	c0 93 55 01 	sts	0x0155, r28	; 0x800155 <entprell>
								Write_String(14,0,0," Button ");
    1044:	20 e0       	ldi	r18, 0x00	; 0
    1046:	31 e0       	ldi	r19, 0x01	; 1
    1048:	40 e0       	ldi	r20, 0x00	; 0
    104a:	60 e0       	ldi	r22, 0x00	; 0
    104c:	8e e0       	ldi	r24, 0x0E	; 14
    104e:	0e 94 c2 05 	call	0xb84	; 0xb84 <Write_String>
								Write_String(14,1,0,"   to   ");
    1052:	29 e0       	ldi	r18, 0x09	; 9
    1054:	31 e0       	ldi	r19, 0x01	; 1
    1056:	40 e0       	ldi	r20, 0x00	; 0
    1058:	61 e0       	ldi	r22, 0x01	; 1
    105a:	8e e0       	ldi	r24, 0x0E	; 14
    105c:	0e 94 c2 05 	call	0xb84	; 0xb84 <Write_String>
								Write_String(14,2,0, "  ZERO  ");
    1060:	22 e1       	ldi	r18, 0x12	; 18
    1062:	31 e0       	ldi	r19, 0x01	; 1
    1064:	40 e0       	ldi	r20, 0x00	; 0
    1066:	62 e0       	ldi	r22, 0x02	; 2
    1068:	8e e0       	ldi	r24, 0x0E	; 14
    106a:	0e 94 c2 05 	call	0xb84	; 0xb84 <Write_String>
    106e:	bf cf       	rjmp	.-130    	; 0xfee <main+0xea>

00001070 <_exit>:
    1070:	f8 94       	cli

00001072 <__stop_program>:
    1072:	ff cf       	rjmp	.-2      	; 0x1072 <__stop_program>
