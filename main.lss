
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  00000ee6  00000f5a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ee6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000012  00000000  00000000  00000f76  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f88  2**2
                  CONTENTS, READONLY, OCTETS
  4 .debug_aranges 00000028  00000000  00000000  00000fc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_info   00002041  00000000  00000000  00000ff0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_abbrev 00000b2f  00000000  00000000  00003031  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   00001fe1  00000000  00000000  00003b60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_frame  0000011c  00000000  00000000  00005b44  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_str    00000593  00000000  00000000  00005c60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_loc    00001087  00000000  00000000  000061f3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_ranges 00000200  00000000  00000000  0000727a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 f8 04 	jmp	0x9f0	; 0x9f0 <__ctors_end>
   4:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
   8:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
   c:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  10:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  14:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  18:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  1c:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  20:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  24:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  28:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  2c:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  30:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  34:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  38:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  3c:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  40:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  44:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  48:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  4c:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  50:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  54:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  58:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  5c:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  60:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  64:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  68:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  6c:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  70:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  74:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  78:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  7c:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  80:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  84:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  88:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  8c:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  90:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  94:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  98:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  9c:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  a0:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  a4:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  a8:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  ac:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>
  b0:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <__bad_interrupt>

000000b4 <font14>:
  b4:	00 10 10 10 10 10 10 10 00 10 10 00 00 00 24 24     ..............$$
  c4:	24 24 00 00 00 00 00 00 00 00 00 00 00 09 09 12     $$..............
  d4:	7f 12 24 ff 24 48 48 00 00 00 10 3c 50 50 50 30     ..$.$HH....<PPP0
  e4:	18 14 14 14 78 10 00 00 00 61 92 94 94 68 16 29     ....x....a...h.)
  f4:	29 49 86 00 00 00 00 18 24 24 28 30 d1 89 8e c6     )I......$$(0....
 104:	7f 00 00 00 10 10 10 10 00 00 00 00 00 00 00 00     ................
 114:	00 00 06 0c 10 10 20 20 20 20 20 10 10 0c 06 00     ......     .....
 124:	60 30 08 08 04 04 04 04 04 08 08 30 60 00 00 10     `0.........0`...
 134:	10 66 28 34 24 00 00 00 00 00 00 00 00 00 00 00     .f(4$...........
 144:	10 10 10 fe 10 10 10 00 00 00 00 00 00 00 00 00     ................
 154:	00 00 00 18 18 08 10 00 00 00 00 00 00 00 7e 00     ..............~.
	...
 170:	00 00 00 18 18 00 00 00 02 04 04 04 08 08 18 10     ................
 180:	10 20 20 20 40 00 00 18 24 42 42 42 42 42 42 24     .   @...$BBBBBB$
 190:	18 00 00 00 00 08 78 08 08 08 08 08 08 08 7f 00     ......x.........
 1a0:	00 00 00 78 04 04 04 08 08 10 20 40 7c 00 00 00     ...x...... @|...
 1b0:	00 3c 02 02 02 1c 02 02 02 02 3c 00 00 00 00 04     .<........<.....
 1c0:	0c 14 14 24 44 7e 04 04 04 00 00 00 00 3e 20 20     ...$D~.......>  
 1d0:	20 38 06 02 02 02 3c 00 00 00 00 1c 20 40 40 5c      8....<..... @@\
 1e0:	62 42 42 22 1c 00 00 00 00 7e 02 04 04 08 10 10     bBB".....~......
 1f0:	10 20 20 00 00 00 00 3c 42 42 44 38 24 42 42 42     .  ....<BBD8$BBB
 200:	3c 00 00 00 00 38 44 42 42 46 3a 02 02 04 38 00     <....8DBBF:...8.
 210:	00 00 00 00 00 00 18 18 00 00 00 18 18 00 00 00     ................
 220:	00 00 00 00 18 18 00 00 00 18 18 08 10 00 00 00     ................
 230:	00 00 02 0c 10 60 10 0c 02 00 00 00 00 00 00 00     .....`..........
 240:	00 7e 00 00 7e 00 00 00 00 00 00 00 00 00 40 30     .~..~.........@0
 250:	08 06 08 30 40 00 00 00 00 7c 42 02 04 08 10 10     ...0@....|B.....
 260:	00 10 10 00 00 00 00 3c 62 4e 92 92 92 96 db 44     .......<bN.....D
 270:	3c 00 00 00 00 00 08 18 14 24 24 42 7e 42 81 00     <........$$B~B..
 280:	00 00 00 00 7c 42 42 44 78 44 42 42 7c 00 00 00     ....|BBDxDBB|...
 290:	00 00 3e 40 80 80 80 80 80 40 3e 00 00 00 00 00     ..>@.....@>.....
 2a0:	f8 84 82 82 82 82 82 84 f8 00 00 00 00 00 7e 40     ..............~@
 2b0:	40 40 7c 40 40 40 7e 00 00 00 00 00 7e 40 40 40     @@|@@@~.....~@@@
 2c0:	7c 40 40 40 40 00 00 00 00 00 3e 40 80 80 80 8e     |@@@@.....>@....
 2d0:	82 42 3e 00 00 00 00 00 42 42 42 42 7e 42 42 42     .B>.....BBBB~BBB
 2e0:	42 00 00 00 00 00 7c 10 10 10 10 10 10 10 7c 00     B.....|.......|.
 2f0:	00 00 00 00 3c 04 04 04 04 04 04 04 78 00 00 00     ....<.......x...
 300:	00 00 42 44 48 50 60 50 48 44 42 00 00 00 00 00     ..BDHP`PHDB.....
 310:	40 40 40 40 40 40 40 40 7e 00 00 00 00 00 c6 c6     @@@@@@@@~.......
 320:	c6 aa aa aa 92 82 82 00 00 00 00 00 42 62 62 52     ............BbbR
 330:	52 4a 4a 46 42 00 00 00 00 00 38 44 82 82 82 82     RJJFB.....8D....
 340:	82 44 38 00 00 00 00 00 7c 42 42 42 46 78 40 40     .D8.....|BBBFx@@
 350:	40 00 00 00 00 00 38 44 82 82 82 82 82 44 38 06     @.....8D.....D8.
 360:	03 00 00 00 78 44 44 44 78 48 4c 44 42 00 00 00     ....xDDDxHLDB...
 370:	00 00 3e 40 40 60 18 06 02 02 7c 00 00 00 00 00     ..>@@`....|.....
 380:	fe 10 10 10 10 10 10 10 10 00 00 00 00 00 42 42     ..............BB
 390:	42 42 42 42 42 42 3c 00 00 00 00 00 81 42 42 44     BBBBBB<......BBD
 3a0:	24 28 28 10 10 00 00 00 00 00 81 81 93 9a 5a 5a     $((...........ZZ
 3b0:	66 66 24 00 00 00 00 00 81 42 24 18 18 18 24 42     ff$......B$...$B
 3c0:	81 00 00 00 00 00 81 42 44 28 18 10 10 10 10 00     .......BD(......
 3d0:	00 00 00 00 fe 02 04 08 10 20 40 80 fe 00 00 00     ......... @.....
 3e0:	1e 10 10 10 10 10 10 10 10 10 10 10 1e 00 40 20     ..............@ 
 3f0:	20 20 10 10 18 08 08 04 04 04 02 00 78 08 08 08       ..........x...
 400:	08 08 08 08 08 08 08 08 78 00 00 08 08 18 14 14     ........x.......
 410:	24 22 42 00 00 00 00 00 00 00 00 00 00 00 00 00     $"B.............
 420:	00 00 00 ff 00 00 08 04 00 00 00 00 00 00 00 00     ................
	...
 438:	3c 02 02 3e 42 42 3f 00 00 00 40 40 40 40 5c 62     <..>BB?...@@@@\b
 448:	42 42 42 62 5c 00 00 00 00 00 00 00 1e 20 40 40     BBBb\........ @@
 458:	40 20 1e 00 00 00 02 02 02 02 3a 46 42 42 42 46     @ ........:FBBBF
 468:	3a 00 00 00 00 00 00 00 3c 22 42 7e 40 40 3e 00     :.......<"B~@@>.
 478:	00 00 0e 10 10 10 7e 10 10 10 10 10 10 00 00 00     ......~.........
 488:	00 00 00 00 3e 46 42 42 42 46 3a 02 02 3c 40 40     ....>FBBBF:..<@@
 498:	40 40 5c 62 42 42 42 42 42 00 00 00 18 18 00 00     @@\bBBBBB.......
 4a8:	78 08 08 08 08 08 08 00 00 00 0c 0c 00 00 3c 04     x.............<.
 4b8:	04 04 04 04 04 04 04 78 40 40 40 40 44 48 50 60     .......x@@@@DHP`
 4c8:	58 44 42 00 00 00 78 08 08 08 08 08 08 08 08 08     XDB...x.........
 4d8:	08 00 00 00 00 00 00 00 b6 da 92 92 92 92 92 00     ................
 4e8:	00 00 00 00 00 00 5c 62 42 42 42 42 42 00 00 00     ......\bBBBBB...
 4f8:	00 00 00 00 38 44 82 82 82 44 38 00 00 00 00 00     ....8D...D8.....
 508:	00 00 5c 62 42 42 42 62 5c 40 40 40 00 00 00 00     ..\bBBBb\@@@....
 518:	3a 46 42 42 42 46 3a 02 02 02 00 00 00 00 5c 64     :FBBBF:.......\d
 528:	40 40 40 40 40 00 00 00 00 00 00 00 3c 40 60 18     @@@@@.......<@`.
 538:	04 04 78 00 00 00 00 00 20 20 fe 20 20 20 20 20     ..x.....  .     
 548:	1e 00 00 00 00 00 00 00 42 42 42 42 42 46 3a 00     ........BBBBBF:.
 558:	00 00 00 00 00 00 81 42 42 44 28 28 10 00 00 00     .......BBD((....
 568:	00 00 00 00 81 89 5a 5a 66 24 24 00 00 00 00 00     ......ZZf$$.....
 578:	00 00 42 24 18 18 18 24 42 00 00 00 00 00 00 00     ..B$...$B.......
 588:	81 42 42 24 24 18 18 10 30 e0 00 00 00 00 fe 04     .BB$$...0.......
 598:	08 10 20 40 fe 00 00 00                             .. @....

000005a0 <font8>:
 5a0:	30 78 78 30 30 00 30 00 6c 6c 6c 00 00 00 00 00     0xx00.0.lll.....
 5b0:	6c 6c fe 6c fe 6c 6c 00 30 7c c0 78 0c f8 30 00     ll.l.ll.0|.x..0.
 5c0:	00 c6 cc 18 30 66 c6 00 38 6c 38 76 dc cc 76 00     ....0f..8l8v..v.
 5d0:	60 60 c0 00 00 00 00 00 18 30 60 60 60 30 18 00     ``.......0```0..
 5e0:	60 30 18 18 18 30 60 00 00 66 3c ff 3c 66 00 00     `0...0`..f<.<f..
 5f0:	00 30 30 fc 30 30 00 00 00 00 00 00 00 70 30 60     .00.00.......p0`
 600:	00 00 00 fc 00 00 00 00 00 00 00 00 00 30 30 00     .............00.
 610:	06 0c 18 30 60 c0 80 00 78 cc dc fc ec cc 78 00     ...0`...x.....x.
 620:	30 f0 30 30 30 30 fc 00 78 cc 0c 38 60 cc fc 00     0.0000..x..8`...
 630:	78 cc 0c 38 0c cc 78 00 1c 3c 6c cc fe 0c 0c 00     x..8..x..<l.....
 640:	fc c0 f8 0c 0c cc 78 00 38 60 c0 f8 cc cc 78 00     ......x.8`....x.
 650:	fc cc 0c 18 30 60 60 00 78 cc cc 78 cc cc 78 00     ....0``.x..x..x.
 660:	78 cc cc 7c 0c 18 70 00 00 00 30 30 00 30 30 00     x..|..p...00.00.
 670:	00 00 30 30 00 70 30 60 18 30 60 c0 60 30 18 00     ..00.p0`.0`.`0..
 680:	00 00 fc 00 fc 00 00 00 60 30 18 0c 18 30 60 00     ........`0...0`.
 690:	78 cc 0c 18 30 00 30 00 7c c6 de de de c0 78 00     x...0.0.|.....x.
 6a0:	30 78 cc cc fc cc cc 00 fc 66 66 7c 66 66 fc 00     0x.......ff|ff..
 6b0:	3c 66 c0 c0 c0 66 3c 00 fc 6c 66 66 66 6c fc 00     <f...f<..lfffl..
 6c0:	fe 62 68 78 68 62 fe 00 fe 62 68 78 68 60 f0 00     .bhxhb...bhxh`..
 6d0:	3c 66 c0 c0 ce 66 3e 00 cc cc cc fc cc cc cc 00     <f...f>.........
 6e0:	78 30 30 30 30 30 78 00 1e 0c 0c 0c cc cc 78 00     x00000x.......x.
 6f0:	e6 66 6c 78 6c 66 e6 00 f0 60 60 60 62 66 fe 00     .flxlf...```bf..
 700:	c6 ee fe d6 c6 c6 c6 00 c6 e6 f6 de ce c6 c6 00     ................
 710:	38 6c c6 c6 c6 6c 38 00 fc 66 66 7c 60 60 f0 00     8l...l8..ff|``..
 720:	78 cc cc cc dc 78 1c 00 fc 66 66 7c 78 6c e6 00     x....x...ff|xl..
 730:	78 cc e0 38 1c cc 78 00 fc b4 30 30 30 30 78 00     x..8..x...0000x.
 740:	cc cc cc cc cc cc fc 00 cc cc cc cc cc 78 30 00     .............x0.
 750:	c6 c6 c6 d6 fe ee c6 00 c6 c6 6c 38 6c c6 c6 00     ..........l8l...
 760:	cc cc cc 78 30 30 78 00 fe cc 98 30 62 c6 fe 00     ...x00x....0b...
 770:	78 60 60 60 60 60 78 00 c0 60 30 18 0c 06 02 00     x`````x..`0.....
 780:	78 18 18 18 18 18 78 00 10 38 6c c6 00 00 00 00     x.....x..8l.....
 790:	00 00 00 00 00 00 00 ff 30 30 18 00 00 00 00 00     ........00......
 7a0:	00 00 78 0c 7c cc 76 00 e0 60 7c 66 66 66 bc 00     ..x.|.v..`|fff..
 7b0:	00 00 78 cc c0 cc 78 00 1c 0c 0c 7c cc cc 76 00     ..x...x....|..v.
 7c0:	00 00 78 cc fc c0 78 00 38 6c 60 f0 60 60 f0 00     ..x...x.8l`.``..
 7d0:	00 00 76 cc cc 7c 0c f8 e0 60 6c 76 66 66 e6 00     ..v..|...`lvff..
 7e0:	30 00 70 30 30 30 78 00 18 00 78 18 18 18 d8 70     0.p000x...x....p
 7f0:	e0 60 66 6c 78 6c e6 00 70 30 30 30 30 30 78 00     .`flxl..p00000x.
 800:	00 00 ec fe d6 c6 c6 00 00 00 f8 cc cc cc cc 00     ................
 810:	00 00 78 cc cc cc 78 00 00 00 dc 66 66 7c 60 f0     ..x...x....ff|`.
 820:	00 00 76 cc cc 7c 0c 1e 00 00 d8 6c 6c 60 f0 00     ..v..|.....ll`..
 830:	00 00 7c c0 78 0c f8 00 10 30 7c 30 30 34 18 00     ..|.x....0|004..
 840:	00 00 cc cc cc cc 76 00 00 00 cc cc cc 78 30 00     ......v......x0.
 850:	00 00 c6 c6 d6 fe 6c 00 00 00 c6 6c 38 6c c6 00     ......l....l8l..
 860:	00 00 cc cc cc 7c 0c f8 00 00 fc 98 30 64 fc 00     .....|......0d..

00000870 <pic>:
 870:	00 00 00 00 00 c0 00 e0 00 f0 00 fc 00 00 00 00     ................
 880:	04 06 12 12 fe ec 00 f8 fc 06 02 22 e6 e4 00 00     ..........."....
 890:	00 f0 90 9c 04 f4 04 f4 f4 04 f4 f4 04 04 fc 00     ................
 8a0:	00 00 00 03 00 03 00 03 00 03 00 03 00 00 00 00     ................
 8b0:	01 03 02 02 03 01 00 00 01 03 02 02 03 01 00 00     ................
 8c0:	00 00 00 03 02 02 02 02 02 02 02 02 02 02 03 00     ................
 8d0:	00 00 0c 06 ff ff 00 00 00 0c 06 ff ff 00 00 00     ................
 8e0:	18 18 00 fe ff 01 01 ff fe 00 1c 1f 0b 09 f9 f1     ................
 8f0:	00 f8 48 48 78 00 f8 30 c0 00 c0 30 f8 00 00 00     ..HHx..0...0....
 900:	00 00 c0 20 23 23 20 40 00 00 80 83 83 00 80 e0     ... ## @........
 910:	83 03 80 01 03 02 82 03 81 00 81 03 02 82 83 01     ................
 920:	e0 03 00 80 80 80 03 00 81 02 01 00 83 00 00 00     ................
 930:	00 00 08 11 11 12 12 0c 00 0d 12 12 0a 1f 00 1f     ................
 940:	10 00 0f 10 10 08 1f 00 1f 01 00 00 0f 10 10 09     ................
 950:	1f 00 0d 12 12 0a 1f 00 01 46 38 06 01 00 00 00     .........F8.....
 960:	f8 04 04 04 88 00 fc 10 10 e0 00 f4 00 f0 10 10     ................
 970:	e0 00 90 50 50 f0 00 fc 18 e0 00 e0 18 fc e0 10     ...PP...........
 980:	10 e0 00 fc 10 10 e0 00 f4 00 fc 00 e0 50 50 60     .............PP`
 990:	00 01 01 01 c0 00 01 00 00 01 00 01 00 01 00 00     ................
 9a0:	01 00 81 41 41 41 80 01 00 00 81 40 40 41 80 01     ...AAA.....@@A..
 9b0:	81 40 40 41 81 01 00 80 c1 00 81 40 40 41 81 01     .@@A.......@@A..
 9c0:	00 18 20 20 1f 00 1a 25 25 15 3e 00 3f 01 01 01     ..  ...%%.>.?...
 9d0:	3e 00 1d 22 22 22 1d 00 00 00 20 30 28 24 23 00     >..""".... 0($#.
 9e0:	1f 20 20 20 1f 00 01 00 3f 00 1d 22 22 22 1d 00     .   ....?.."""..

000009f0 <__ctors_end>:
 9f0:	11 24       	eor	r1, r1
 9f2:	1f be       	out	0x3f, r1	; 63
 9f4:	cf ef       	ldi	r28, 0xFF	; 255
 9f6:	d8 e0       	ldi	r29, 0x08	; 8
 9f8:	de bf       	out	0x3e, r29	; 62
 9fa:	cd bf       	out	0x3d, r28	; 61

000009fc <__do_copy_data>:
 9fc:	11 e0       	ldi	r17, 0x01	; 1
 9fe:	a0 e0       	ldi	r26, 0x00	; 0
 a00:	b1 e0       	ldi	r27, 0x01	; 1
 a02:	e6 ee       	ldi	r30, 0xE6	; 230
 a04:	fe e0       	ldi	r31, 0x0E	; 14
 a06:	02 c0       	rjmp	.+4      	; 0xa0c <__do_copy_data+0x10>
 a08:	05 90       	lpm	r0, Z+
 a0a:	0d 92       	st	X+, r0
 a0c:	ac 31       	cpi	r26, 0x1C	; 28
 a0e:	b1 07       	cpc	r27, r17
 a10:	d9 f7       	brne	.-10     	; 0xa08 <__do_copy_data+0xc>
 a12:	0e 94 43 07 	call	0xe86	; 0xe86 <main>
 a16:	0c 94 71 07 	jmp	0xee2	; 0xee2 <_exit>

00000a1a <__bad_interrupt>:
 a1a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000a1e <SPI_MasterInit>:
void SPI_MasterInit(void)
{
	/* Set MOSI and SCK output, all others input */
	//DDRB = (1<<MOSI)|(1<<SCK);
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR0 = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
 a1e:	81 e5       	ldi	r24, 0x51	; 81
 a20:	8c bd       	out	0x2c, r24	; 44
}
 a22:	08 95       	ret

00000a24 <SPI_MasterTransmit>:
void SPI_MasterTransmit(char cData)
{
	/* Start transmission */
	SPDR0 = cData;
 a24:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while(!(SPSR0 & (1<<SPIF)));
 a26:	0d b4       	in	r0, 0x2d	; 45
 a28:	07 fe       	sbrs	r0, 7
 a2a:	fd cf       	rjmp	.-6      	; 0xa26 <SPI_MasterTransmit+0x2>
}
 a2c:	08 95       	ret

00000a2e <send_data>:
void send_data(char data)
{
	DISP_DATA;
 a2e:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
 a30:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 a32:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 a34:	0d b4       	in	r0, 0x2d	; 45
 a36:	07 fe       	sbrs	r0, 7
 a38:	fd cf       	rjmp	.-6      	; 0xa34 <send_data+0x6>
	SPI_MasterTransmit(data);
	CS_DISP_1;
 a3a:	28 9a       	sbi	0x05, 0	; 5
}
 a3c:	08 95       	ret

00000a3e <send_command>:
void send_command(char command)
{
	DISP_COMM;
 a3e:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 a40:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 a42:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 a44:	0d b4       	in	r0, 0x2d	; 45
 a46:	07 fe       	sbrs	r0, 7
 a48:	fd cf       	rjmp	.-6      	; 0xa44 <send_command+0x6>
	SPI_MasterTransmit(command);
	CS_DISP_1;
 a4a:	28 9a       	sbi	0x05, 0	; 5
}
 a4c:	08 95       	ret

00000a4e <Set_Page_Address>:
void Set_Page_Address(unsigned char add)
{
    add=0xb0|add;
 a4e:	80 6b       	ori	r24, 0xB0	; 176
	DISP_COMM;
 a50:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 a52:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 a54:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 a56:	0d b4       	in	r0, 0x2d	; 45
 a58:	07 fe       	sbrs	r0, 7
 a5a:	fd cf       	rjmp	.-6      	; 0xa56 <Set_Page_Address+0x8>
	CS_DISP_1;
 a5c:	28 9a       	sbi	0x05, 0	; 5
    send_command(add);
	return;
}
 a5e:	08 95       	ret

00000a60 <Set_Column_Address>:
void Set_Column_Address(unsigned char add)
{	 add+=40;
 a60:	88 5d       	subi	r24, 0xD8	; 216
    send_command((0x10|(add>>4)));
 a62:	98 2f       	mov	r25, r24
 a64:	92 95       	swap	r25
 a66:	9f 70       	andi	r25, 0x0F	; 15
 a68:	90 61       	ori	r25, 0x10	; 16
	DISP_COMM;
 a6a:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 a6c:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 a6e:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
 a70:	0d b4       	in	r0, 0x2d	; 45
 a72:	07 fe       	sbrs	r0, 7
 a74:	fd cf       	rjmp	.-6      	; 0xa70 <Set_Column_Address+0x10>
	CS_DISP_1;
 a76:	28 9a       	sbi	0x05, 0	; 5
	send_command((0x0f&add));
 a78:	8f 70       	andi	r24, 0x0F	; 15
	DISP_COMM;
 a7a:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 a7c:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 a7e:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 a80:	0d b4       	in	r0, 0x2d	; 45
 a82:	07 fe       	sbrs	r0, 7
 a84:	fd cf       	rjmp	.-6      	; 0xa80 <Set_Column_Address+0x20>
	CS_DISP_1;
 a86:	28 9a       	sbi	0x05, 0	; 5
	return;
}
 a88:	08 95       	ret

00000a8a <Set_Contrast_Control_Register>:
	DISP_COMM;
 a8a:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 a8c:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 a8e:	91 e8       	ldi	r25, 0x81	; 129
 a90:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
 a92:	0d b4       	in	r0, 0x2d	; 45
 a94:	07 fe       	sbrs	r0, 7
 a96:	fd cf       	rjmp	.-6      	; 0xa92 <Set_Contrast_Control_Register+0x8>
	CS_DISP_1;
 a98:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 a9a:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 a9c:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 a9e:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 aa0:	0d b4       	in	r0, 0x2d	; 45
 aa2:	07 fe       	sbrs	r0, 7
 aa4:	fd cf       	rjmp	.-6      	; 0xaa0 <Set_Contrast_Control_Register+0x16>
	CS_DISP_1;
 aa6:	28 9a       	sbi	0x05, 0	; 5
void Set_Contrast_Control_Register(unsigned char mod)
{
    send_command(0x81);
	send_command(mod);
	return;
}
 aa8:	08 95       	ret

00000aaa <Display_Picture>:
void Display_Picture(const unsigned char pic[])
{
	//Display picture 48x64
    unsigned char i,j;
	for(i=0;i<0x08;i++)
 aaa:	9c 01       	movw	r18, r24
 aac:	20 5d       	subi	r18, 0xD0	; 208
 aae:	3f 4f       	sbci	r19, 0xFF	; 255
 ab0:	90 e0       	ldi	r25, 0x00	; 0
	SPDR0 = cData;
 ab2:	52 e1       	ldi	r21, 0x12	; 18
 ab4:	48 e0       	ldi	r20, 0x08	; 8
	DISP_COMM;
 ab6:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 ab8:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 aba:	89 2f       	mov	r24, r25
 abc:	80 6b       	ori	r24, 0xB0	; 176
 abe:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 ac0:	0d b4       	in	r0, 0x2d	; 45
 ac2:	07 fe       	sbrs	r0, 7
 ac4:	fd cf       	rjmp	.-6      	; 0xac0 <Display_Picture+0x16>
	CS_DISP_1;
 ac6:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 ac8:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 aca:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 acc:	5e bd       	out	0x2e, r21	; 46
	while(!(SPSR0 & (1<<SPIF)));
 ace:	0d b4       	in	r0, 0x2d	; 45
 ad0:	07 fe       	sbrs	r0, 7
 ad2:	fd cf       	rjmp	.-6      	; 0xace <Display_Picture+0x24>
	CS_DISP_1;
 ad4:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 ad6:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 ad8:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 ada:	4e bd       	out	0x2e, r20	; 46
	while(!(SPSR0 & (1<<SPIF)));
 adc:	0d b4       	in	r0, 0x2d	; 45
 ade:	07 fe       	sbrs	r0, 7
 ae0:	fd cf       	rjmp	.-6      	; 0xadc <Display_Picture+0x32>
	CS_DISP_1;
 ae2:	28 9a       	sbi	0x05, 0	; 5
	{
	Set_Page_Address(i);
    Set_Column_Address(0x00);
        for(j=0;j<0x30;j++)
 ae4:	f9 01       	movw	r30, r18
 ae6:	f0 97       	sbiw	r30, 0x30	; 48
		{
		    send_data(pgm_read_byte(&pic[i*0x30+j]));
 ae8:	84 91       	lpm	r24, Z
	DISP_DATA;
 aea:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
 aec:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 aee:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 af0:	0d b4       	in	r0, 0x2d	; 45
 af2:	07 fe       	sbrs	r0, 7
 af4:	fd cf       	rjmp	.-6      	; 0xaf0 <Display_Picture+0x46>
	CS_DISP_1;
 af6:	28 9a       	sbi	0x05, 0	; 5
        for(j=0;j<0x30;j++)
 af8:	31 96       	adiw	r30, 0x01	; 1
 afa:	e2 17       	cp	r30, r18
 afc:	f3 07       	cpc	r31, r19
 afe:	a1 f7       	brne	.-24     	; 0xae8 <Display_Picture+0x3e>
	for(i=0;i<0x08;i++)
 b00:	9f 5f       	subi	r25, 0xFF	; 255
 b02:	9f 01       	movw	r18, r30
 b04:	20 5d       	subi	r18, 0xD0	; 208
 b06:	3f 4f       	sbci	r19, 0xFF	; 255
 b08:	98 30       	cpi	r25, 0x08	; 8
 b0a:	a9 f6       	brne	.-86     	; 0xab6 <Display_Picture+0xc>
		}
	}
    return;
}
 b0c:	08 95       	ret

00000b0e <Display_Clear>:
void Display_Clear(void)
{
	//clear whole display
	unsigned char i,j;
	for(i=0;i<0x08;i++)
 b0e:	90 e0       	ldi	r25, 0x00	; 0
	SPDR0 = cData;
 b10:	32 e1       	ldi	r19, 0x12	; 18
 b12:	28 e0       	ldi	r18, 0x08	; 8
	DISP_COMM;
 b14:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 b16:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 b18:	89 2f       	mov	r24, r25
 b1a:	80 6b       	ori	r24, 0xB0	; 176
 b1c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 b1e:	0d b4       	in	r0, 0x2d	; 45
 b20:	07 fe       	sbrs	r0, 7
 b22:	fd cf       	rjmp	.-6      	; 0xb1e <Display_Clear+0x10>
	CS_DISP_1;
 b24:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 b26:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 b28:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 b2a:	3e bd       	out	0x2e, r19	; 46
	while(!(SPSR0 & (1<<SPIF)));
 b2c:	0d b4       	in	r0, 0x2d	; 45
 b2e:	07 fe       	sbrs	r0, 7
 b30:	fd cf       	rjmp	.-6      	; 0xb2c <Display_Clear+0x1e>
	CS_DISP_1;
 b32:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 b34:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 b36:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 b38:	2e bd       	out	0x2e, r18	; 46
	while(!(SPSR0 & (1<<SPIF)));
 b3a:	0d b4       	in	r0, 0x2d	; 45
 b3c:	07 fe       	sbrs	r0, 7
 b3e:	fd cf       	rjmp	.-6      	; 0xb3a <Display_Clear+0x2c>
	CS_DISP_1;
 b40:	28 9a       	sbi	0x05, 0	; 5
 b42:	80 e3       	ldi	r24, 0x30	; 48
	DISP_DATA;
 b44:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
 b46:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 b48:	1e bc       	out	0x2e, r1	; 46
	while(!(SPSR0 & (1<<SPIF)));
 b4a:	0d b4       	in	r0, 0x2d	; 45
 b4c:	07 fe       	sbrs	r0, 7
 b4e:	fd cf       	rjmp	.-6      	; 0xb4a <Display_Clear+0x3c>
	CS_DISP_1;
 b50:	28 9a       	sbi	0x05, 0	; 5
	{
	Set_Page_Address(i);
    Set_Column_Address(0x00);
        for(j=0;j<0x30;j++)
 b52:	81 50       	subi	r24, 0x01	; 1
 b54:	b9 f7       	brne	.-18     	; 0xb44 <Display_Clear+0x36>
	for(i=0;i<0x08;i++)
 b56:	9f 5f       	subi	r25, 0xFF	; 255
 b58:	98 30       	cpi	r25, 0x08	; 8
 b5a:	e1 f6       	brne	.-72     	; 0xb14 <Display_Clear+0x6>
		{
		    send_data(0x00);
		}
	}
    return;
}
 b5c:	08 95       	ret

00000b5e <Char_Position>:
void Char_Position(uint8_t fontsize, uint8_t row, uint8_t pos)
{
	//set position for new char (font size 8x14)
	Set_Page_Address(7-pos);	//0-7 	(* 8 bit)
 b5e:	97 e0       	ldi	r25, 0x07	; 7
 b60:	94 1b       	sub	r25, r20
    add=0xb0|add;
 b62:	90 6b       	ori	r25, 0xB0	; 176
	DISP_COMM;
 b64:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 b66:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 b68:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
 b6a:	0d b4       	in	r0, 0x2d	; 45
 b6c:	07 fe       	sbrs	r0, 7
 b6e:	fd cf       	rjmp	.-6      	; 0xb6a <Char_Position+0xc>
	CS_DISP_1;
 b70:	28 9a       	sbi	0x05, 0	; 5
	Set_Column_Address(row*fontsize);	//0-3	(* 14 collums / char)
 b72:	68 9f       	mul	r22, r24
 b74:	80 2d       	mov	r24, r0
 b76:	11 24       	eor	r1, r1
{	 add+=40;
 b78:	88 5d       	subi	r24, 0xD8	; 216
    send_command((0x10|(add>>4)));
 b7a:	98 2f       	mov	r25, r24
 b7c:	92 95       	swap	r25
 b7e:	9f 70       	andi	r25, 0x0F	; 15
 b80:	90 61       	ori	r25, 0x10	; 16
	DISP_COMM;
 b82:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 b84:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 b86:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
 b88:	0d b4       	in	r0, 0x2d	; 45
 b8a:	07 fe       	sbrs	r0, 7
 b8c:	fd cf       	rjmp	.-6      	; 0xb88 <Char_Position+0x2a>
	CS_DISP_1;
 b8e:	28 9a       	sbi	0x05, 0	; 5
	send_command((0x0f&add));
 b90:	8f 70       	andi	r24, 0x0F	; 15
	DISP_COMM;
 b92:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 b94:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 b96:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 b98:	0d b4       	in	r0, 0x2d	; 45
 b9a:	07 fe       	sbrs	r0, 7
 b9c:	fd cf       	rjmp	.-6      	; 0xb98 <Char_Position+0x3a>
	CS_DISP_1;
 b9e:	28 9a       	sbi	0x05, 0	; 5
}
 ba0:	08 95       	ret

00000ba2 <Display_Init>:
void Display_Init(void)
{
	/*Init session according datasheet and sample code:
	 *https://www.buydisplay.com/serial-spi-0-71-inch-white-48x64-graphic-oled-display-ssd1306
	 * */
	DISP_RST_1;
 ba2:	29 9a       	sbi	0x05, 1	; 5
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 ba4:	80 e2       	ldi	r24, 0x20	; 32
 ba6:	9e e4       	ldi	r25, 0x4E	; 78
 ba8:	fc 01       	movw	r30, r24
 baa:	31 97       	sbiw	r30, 0x01	; 1
 bac:	f1 f7       	brne	.-4      	; 0xbaa <Display_Init+0x8>
	_delay_ms(10);
	DISP_RST_0;
 bae:	29 98       	cbi	0x05, 1	; 5
 bb0:	e0 e4       	ldi	r30, 0x40	; 64
 bb2:	fc e9       	ldi	r31, 0x9C	; 156
 bb4:	31 97       	sbiw	r30, 0x01	; 1
 bb6:	f1 f7       	brne	.-4      	; 0xbb4 <Display_Init+0x12>
	_delay_ms(20);
	DISP_RST_1;
 bb8:	29 9a       	sbi	0x05, 1	; 5
 bba:	01 97       	sbiw	r24, 0x01	; 1
 bbc:	f1 f7       	brne	.-4      	; 0xbba <Display_Init+0x18>
	_delay_ms(10);
	DISP_COMM;
 bbe:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;		
 bc0:	28 98       	cbi	0x05, 0	; 5
	DISP_COMM;
 bc2:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 bc4:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 bc6:	8e ea       	ldi	r24, 0xAE	; 174
 bc8:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 bca:	0d b4       	in	r0, 0x2d	; 45
 bcc:	07 fe       	sbrs	r0, 7
 bce:	fd cf       	rjmp	.-6      	; 0xbca <Display_Init+0x28>
	CS_DISP_1;
 bd0:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 bd2:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 bd4:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 bd6:	85 ed       	ldi	r24, 0xD5	; 213
 bd8:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 bda:	0d b4       	in	r0, 0x2d	; 45
 bdc:	07 fe       	sbrs	r0, 7
 bde:	fd cf       	rjmp	.-6      	; 0xbda <Display_Init+0x38>
	CS_DISP_1;
 be0:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 be2:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 be4:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 be6:	80 e8       	ldi	r24, 0x80	; 128
 be8:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 bea:	0d b4       	in	r0, 0x2d	; 45
 bec:	07 fe       	sbrs	r0, 7
 bee:	fd cf       	rjmp	.-6      	; 0xbea <Display_Init+0x48>
	CS_DISP_1;
 bf0:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 bf2:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 bf4:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 bf6:	88 ea       	ldi	r24, 0xA8	; 168
 bf8:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 bfa:	0d b4       	in	r0, 0x2d	; 45
 bfc:	07 fe       	sbrs	r0, 7
 bfe:	fd cf       	rjmp	.-6      	; 0xbfa <Display_Init+0x58>
	CS_DISP_1;
 c00:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 c02:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 c04:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 c06:	8f e3       	ldi	r24, 0x3F	; 63
 c08:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 c0a:	0d b4       	in	r0, 0x2d	; 45
 c0c:	07 fe       	sbrs	r0, 7
 c0e:	fd cf       	rjmp	.-6      	; 0xc0a <Display_Init+0x68>
	CS_DISP_1;
 c10:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 c12:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 c14:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 c16:	83 ed       	ldi	r24, 0xD3	; 211
 c18:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 c1a:	0d b4       	in	r0, 0x2d	; 45
 c1c:	07 fe       	sbrs	r0, 7
 c1e:	fd cf       	rjmp	.-6      	; 0xc1a <Display_Init+0x78>
	CS_DISP_1;
 c20:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 c22:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 c24:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 c26:	1e bc       	out	0x2e, r1	; 46
	while(!(SPSR0 & (1<<SPIF)));
 c28:	0d b4       	in	r0, 0x2d	; 45
 c2a:	07 fe       	sbrs	r0, 7
 c2c:	fd cf       	rjmp	.-6      	; 0xc28 <Display_Init+0x86>
	CS_DISP_1;
 c2e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 c30:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 c32:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 c34:	8d e8       	ldi	r24, 0x8D	; 141
 c36:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 c38:	0d b4       	in	r0, 0x2d	; 45
 c3a:	07 fe       	sbrs	r0, 7
 c3c:	fd cf       	rjmp	.-6      	; 0xc38 <Display_Init+0x96>
	CS_DISP_1;
 c3e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 c40:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 c42:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 c44:	84 e1       	ldi	r24, 0x14	; 20
 c46:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 c48:	0d b4       	in	r0, 0x2d	; 45
 c4a:	07 fe       	sbrs	r0, 7
 c4c:	fd cf       	rjmp	.-6      	; 0xc48 <Display_Init+0xa6>
	CS_DISP_1;
 c4e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 c50:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 c52:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 c54:	86 ea       	ldi	r24, 0xA6	; 166
 c56:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 c58:	0d b4       	in	r0, 0x2d	; 45
 c5a:	07 fe       	sbrs	r0, 7
 c5c:	fd cf       	rjmp	.-6      	; 0xc58 <Display_Init+0xb6>
	CS_DISP_1;
 c5e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 c60:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 c62:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 c64:	84 ea       	ldi	r24, 0xA4	; 164
 c66:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 c68:	0d b4       	in	r0, 0x2d	; 45
 c6a:	07 fe       	sbrs	r0, 7
 c6c:	fd cf       	rjmp	.-6      	; 0xc68 <Display_Init+0xc6>
	CS_DISP_1;
 c6e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 c70:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 c72:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 c74:	81 ea       	ldi	r24, 0xA1	; 161
 c76:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 c78:	0d b4       	in	r0, 0x2d	; 45
 c7a:	07 fe       	sbrs	r0, 7
 c7c:	fd cf       	rjmp	.-6      	; 0xc78 <Display_Init+0xd6>
	CS_DISP_1;
 c7e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 c80:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 c82:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 c84:	88 ec       	ldi	r24, 0xC8	; 200
 c86:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 c88:	0d b4       	in	r0, 0x2d	; 45
 c8a:	07 fe       	sbrs	r0, 7
 c8c:	fd cf       	rjmp	.-6      	; 0xc88 <Display_Init+0xe6>
	CS_DISP_1;
 c8e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 c90:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 c92:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 c94:	8a ed       	ldi	r24, 0xDA	; 218
 c96:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 c98:	0d b4       	in	r0, 0x2d	; 45
 c9a:	07 fe       	sbrs	r0, 7
 c9c:	fd cf       	rjmp	.-6      	; 0xc98 <Display_Init+0xf6>
	CS_DISP_1;
 c9e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 ca0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 ca2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 ca4:	82 e1       	ldi	r24, 0x12	; 18
 ca6:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 ca8:	0d b4       	in	r0, 0x2d	; 45
 caa:	07 fe       	sbrs	r0, 7
 cac:	fd cf       	rjmp	.-6      	; 0xca8 <Display_Init+0x106>
	CS_DISP_1;
 cae:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 cb0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 cb2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 cb4:	81 e8       	ldi	r24, 0x81	; 129
 cb6:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 cb8:	0d b4       	in	r0, 0x2d	; 45
 cba:	07 fe       	sbrs	r0, 7
 cbc:	fd cf       	rjmp	.-6      	; 0xcb8 <Display_Init+0x116>
	CS_DISP_1;
 cbe:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 cc0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 cc2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 cc4:	81 e0       	ldi	r24, 0x01	; 1
 cc6:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 cc8:	0d b4       	in	r0, 0x2d	; 45
 cca:	07 fe       	sbrs	r0, 7
 ccc:	fd cf       	rjmp	.-6      	; 0xcc8 <Display_Init+0x126>
	CS_DISP_1;
 cce:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 cd0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 cd2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 cd4:	89 ed       	ldi	r24, 0xD9	; 217
 cd6:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 cd8:	0d b4       	in	r0, 0x2d	; 45
 cda:	07 fe       	sbrs	r0, 7
 cdc:	fd cf       	rjmp	.-6      	; 0xcd8 <Display_Init+0x136>
	CS_DISP_1;
 cde:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 ce0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 ce2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 ce4:	81 ef       	ldi	r24, 0xF1	; 241
 ce6:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 ce8:	0d b4       	in	r0, 0x2d	; 45
 cea:	07 fe       	sbrs	r0, 7
 cec:	fd cf       	rjmp	.-6      	; 0xce8 <Display_Init+0x146>
	CS_DISP_1;
 cee:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 cf0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 cf2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 cf4:	8b ed       	ldi	r24, 0xDB	; 219
 cf6:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 cf8:	0d b4       	in	r0, 0x2d	; 45
 cfa:	07 fe       	sbrs	r0, 7
 cfc:	fd cf       	rjmp	.-6      	; 0xcf8 <Display_Init+0x156>
	CS_DISP_1;
 cfe:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 d00:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 d02:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 d04:	80 e4       	ldi	r24, 0x40	; 64
 d06:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 d08:	0d b4       	in	r0, 0x2d	; 45
 d0a:	07 fe       	sbrs	r0, 7
 d0c:	fd cf       	rjmp	.-6      	; 0xd08 <Display_Init+0x166>
	CS_DISP_1;
 d0e:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 d10:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 d12:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 d14:	8f ea       	ldi	r24, 0xAF	; 175
 d16:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 d18:	0d b4       	in	r0, 0x2d	; 45
 d1a:	07 fe       	sbrs	r0, 7
 d1c:	fd cf       	rjmp	.-6      	; 0xd18 <Display_Init+0x176>
	CS_DISP_1;
 d1e:	28 9a       	sbi	0x05, 0	; 5
	send_command(0xd9);//--set pre-charge period
	send_command(0xf1);
	send_command(0xdb);//--set vcomh
	send_command(0x40);//--set start line address orig 40
	send_command(0xaf);//--turn on oled panel
	CS_DISP_1;		   //release chip select
 d20:	28 9a       	sbi	0x05, 0	; 5
	DISP_DATA;
 d22:	2a 9a       	sbi	0x05, 2	; 5
}
 d24:	08 95       	ret

00000d26 <Write_Char>:
	switch(fontsize)		//variable height and fixed width (8 Pixel)
	{
		case 8:fontpointer=font8;break;
		case 14:fontpointer=font14;break;
	}
	n-=0x21;			//jump to position in asci table
 d26:	61 52       	subi	r22, 0x21	; 33
	switch(fontsize)		//variable height and fixed width (8 Pixel)
 d28:	88 30       	cpi	r24, 0x08	; 8
 d2a:	d9 f0       	breq	.+54     	; 0xd62 <Write_Char+0x3c>
 d2c:	8e 30       	cpi	r24, 0x0E	; 14
 d2e:	b1 f0       	breq	.+44     	; 0xd5c <Write_Char+0x36>
	for(x=0;x<fontsize;x++) 
 d30:	f0 e0       	ldi	r31, 0x00	; 0
 d32:	e0 e0       	ldi	r30, 0x00	; 0
 d34:	88 23       	and	r24, r24
 d36:	c1 f0       	breq	.+48     	; 0xd68 <Write_Char+0x42>
 d38:	86 9f       	mul	r24, r22
 d3a:	e0 0d       	add	r30, r0
 d3c:	f1 1d       	adc	r31, r1
 d3e:	11 24       	eor	r1, r1
	{
		send_data(pgm_read_byte(&fontpointer[(n*fontsize)+x]));
 d40:	90 e0       	ldi	r25, 0x00	; 0
 d42:	24 91       	lpm	r18, Z
	DISP_DATA;
 d44:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
 d46:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 d48:	2e bd       	out	0x2e, r18	; 46
	while(!(SPSR0 & (1<<SPIF)));
 d4a:	0d b4       	in	r0, 0x2d	; 45
 d4c:	07 fe       	sbrs	r0, 7
 d4e:	fd cf       	rjmp	.-6      	; 0xd4a <Write_Char+0x24>
	CS_DISP_1;
 d50:	28 9a       	sbi	0x05, 0	; 5
	for(x=0;x<fontsize;x++) 
 d52:	9f 5f       	subi	r25, 0xFF	; 255
 d54:	31 96       	adiw	r30, 0x01	; 1
 d56:	98 17       	cp	r25, r24
 d58:	a0 f3       	brcs	.-24     	; 0xd42 <Write_Char+0x1c>
	}
	
}
 d5a:	08 95       	ret
	switch(fontsize)		//variable height and fixed width (8 Pixel)
 d5c:	e4 eb       	ldi	r30, 0xB4	; 180
 d5e:	f0 e0       	ldi	r31, 0x00	; 0
 d60:	eb cf       	rjmp	.-42     	; 0xd38 <Write_Char+0x12>
		case 8:fontpointer=font8;break;
 d62:	e0 ea       	ldi	r30, 0xA0	; 160
 d64:	f5 e0       	ldi	r31, 0x05	; 5
 d66:	e8 cf       	rjmp	.-48     	; 0xd38 <Write_Char+0x12>
 d68:	08 95       	ret

00000d6a <Write_String>:
void Write_String(uint8_t fontsize, uint8_t row, uint8_t pos, const char str[]) 
{
 d6a:	cf 92       	push	r12
 d6c:	df 92       	push	r13
 d6e:	ef 92       	push	r14
 d70:	ff 92       	push	r15
 d72:	0f 93       	push	r16
 d74:	1f 93       	push	r17
 d76:	cf 93       	push	r28
 d78:	df 93       	push	r29
 d7a:	e8 2e       	mov	r14, r24
 d7c:	e9 01       	movw	r28, r18
			Write_Char(fontsize, *str++);
			pos++;
		 }
	}else
	{
		while(*str)
 d7e:	88 81       	ld	r24, Y
	if(fontsize==26)
 d80:	9a e1       	ldi	r25, 0x1A	; 26
 d82:	e9 16       	cp	r14, r25
 d84:	b9 f1       	breq	.+110    	; 0xdf4 <Write_String+0x8a>
		while(*str)
 d86:	88 23       	and	r24, r24
 d88:	09 f4       	brne	.+2      	; 0xd8c <Write_String+0x22>
 d8a:	74 c0       	rjmp	.+232    	; 0xe74 <Write_String+0x10a>
		{
			Set_Page_Address(7-pos);			//0-7 	(* 8 bit)
			Set_Column_Address(row*fontsize);	//0-3	(* 14 collums / char)
 d8c:	e6 9e       	mul	r14, r22
 d8e:	60 2d       	mov	r22, r0
 d90:	11 24       	eor	r1, r1
{	 add+=40;
 d92:	68 5d       	subi	r22, 0xD8	; 216
    send_command((0x10|(add>>4)));
 d94:	86 2f       	mov	r24, r22
 d96:	82 95       	swap	r24
 d98:	8f 70       	andi	r24, 0x0F	; 15
 d9a:	c8 2e       	mov	r12, r24
 d9c:	68 94       	set
 d9e:	c4 f8       	bld	r12, 4
	send_command((0x0f&add));
 da0:	6f 70       	andi	r22, 0x0F	; 15
 da2:	f6 2e       	mov	r15, r22
 da4:	82 2f       	mov	r24, r18
 da6:	89 5f       	subi	r24, 0xF9	; 249
    add=0xb0|add;
 da8:	d8 2e       	mov	r13, r24
 daa:	d4 1a       	sub	r13, r20
 dac:	9d 2d       	mov	r25, r13
 dae:	9c 1b       	sub	r25, r28
 db0:	90 6b       	ori	r25, 0xB0	; 176
	DISP_COMM;
 db2:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 db4:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 db6:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
 db8:	0d b4       	in	r0, 0x2d	; 45
 dba:	07 fe       	sbrs	r0, 7
 dbc:	fd cf       	rjmp	.-6      	; 0xdb8 <Write_String+0x4e>
	CS_DISP_1;
 dbe:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 dc0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 dc2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 dc4:	ce bc       	out	0x2e, r12	; 46
	while(!(SPSR0 & (1<<SPIF)));
 dc6:	0d b4       	in	r0, 0x2d	; 45
 dc8:	07 fe       	sbrs	r0, 7
 dca:	fd cf       	rjmp	.-6      	; 0xdc6 <Write_String+0x5c>
	CS_DISP_1;
 dcc:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 dce:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 dd0:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 dd2:	fe bc       	out	0x2e, r15	; 46
	while(!(SPSR0 & (1<<SPIF)));
 dd4:	0d b4       	in	r0, 0x2d	; 45
 dd6:	07 fe       	sbrs	r0, 7
 dd8:	fd cf       	rjmp	.-6      	; 0xdd4 <Write_String+0x6a>
	CS_DISP_1;
 dda:	28 9a       	sbi	0x05, 0	; 5
			Write_Char(fontsize, *str++);
 ddc:	fe 01       	movw	r30, r28
 dde:	61 91       	ld	r22, Z+
 de0:	8f 01       	movw	r16, r30
 de2:	8e 2d       	mov	r24, r14
 de4:	0e 94 93 06 	call	0xd26	; 0xd26 <Write_Char>
		while(*str)
 de8:	99 81       	ldd	r25, Y+1	; 0x01
 dea:	99 23       	and	r25, r25
 dec:	09 f4       	brne	.+2      	; 0xdf0 <Write_String+0x86>
 dee:	42 c0       	rjmp	.+132    	; 0xe74 <Write_String+0x10a>
			Write_Char(fontsize, *str++);
 df0:	e8 01       	movw	r28, r16
 df2:	dc cf       	rjmp	.-72     	; 0xdac <Write_String+0x42>
		while(*str)
 df4:	88 23       	and	r24, r24
 df6:	09 f4       	brne	.+2      	; 0xdfa <Write_String+0x90>
 df8:	3d c0       	rjmp	.+122    	; 0xe74 <Write_String+0x10a>
			Set_Column_Address(row*fontsize);	//0-3	(* 14 collums / char)
 dfa:	6e 9d       	mul	r22, r14
 dfc:	90 2d       	mov	r25, r0
 dfe:	11 24       	eor	r1, r1
{	 add+=40;
 e00:	98 5d       	subi	r25, 0xD8	; 216
    send_command((0x10|(add>>4)));
 e02:	59 2f       	mov	r21, r25
 e04:	52 95       	swap	r21
 e06:	5f 70       	andi	r21, 0x0F	; 15
 e08:	50 61       	ori	r21, 0x10	; 16
	send_command((0x0f&add));
 e0a:	9f 70       	andi	r25, 0x0F	; 15
 e0c:	84 2f       	mov	r24, r20
 e0e:	88 0f       	add	r24, r24
 e10:	47 e0       	ldi	r20, 0x07	; 7
 e12:	48 1b       	sub	r20, r24
		send_data(pgm_read_byte(&fontpointer[(n*fontsize)+x]));
 e14:	6a e1       	ldi	r22, 0x1A	; 26
	DISP_COMM;
 e16:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 e18:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 e1a:	84 2f       	mov	r24, r20
 e1c:	80 6b       	ori	r24, 0xB0	; 176
 e1e:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 e20:	0d b4       	in	r0, 0x2d	; 45
 e22:	07 fe       	sbrs	r0, 7
 e24:	fd cf       	rjmp	.-6      	; 0xe20 <Write_String+0xb6>
	CS_DISP_1;
 e26:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 e28:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 e2a:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 e2c:	5e bd       	out	0x2e, r21	; 46
	while(!(SPSR0 & (1<<SPIF)));
 e2e:	0d b4       	in	r0, 0x2d	; 45
 e30:	07 fe       	sbrs	r0, 7
 e32:	fd cf       	rjmp	.-6      	; 0xe2e <Write_String+0xc4>
	CS_DISP_1;
 e34:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
 e36:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
 e38:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 e3a:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
 e3c:	0d b4       	in	r0, 0x2d	; 45
 e3e:	07 fe       	sbrs	r0, 7
 e40:	fd cf       	rjmp	.-6      	; 0xe3c <Write_String+0xd2>
	CS_DISP_1;
 e42:	28 9a       	sbi	0x05, 0	; 5
	n-=0x21;			//jump to position in asci table
 e44:	e9 91       	ld	r30, Y+
 e46:	e1 52       	subi	r30, 0x21	; 33
		send_data(pgm_read_byte(&fontpointer[(n*fontsize)+x]));
 e48:	e6 9f       	mul	r30, r22
 e4a:	f0 01       	movw	r30, r0
 e4c:	11 24       	eor	r1, r1
 e4e:	9f 01       	movw	r18, r30
 e50:	26 5e       	subi	r18, 0xE6	; 230
 e52:	3f 4f       	sbci	r19, 0xFF	; 255
 e54:	84 91       	lpm	r24, Z
	DISP_DATA;
 e56:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
 e58:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
 e5a:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
 e5c:	0d b4       	in	r0, 0x2d	; 45
 e5e:	07 fe       	sbrs	r0, 7
 e60:	fd cf       	rjmp	.-6      	; 0xe5c <Write_String+0xf2>
	CS_DISP_1;
 e62:	28 9a       	sbi	0x05, 0	; 5
	for(x=0;x<fontsize;x++) 
 e64:	31 96       	adiw	r30, 0x01	; 1
 e66:	2e 17       	cp	r18, r30
 e68:	3f 07       	cpc	r19, r31
 e6a:	a1 f7       	brne	.-24     	; 0xe54 <Write_String+0xea>
		while(*str)
 e6c:	42 50       	subi	r20, 0x02	; 2
 e6e:	88 81       	ld	r24, Y
 e70:	81 11       	cpse	r24, r1
 e72:	d1 cf       	rjmp	.-94     	; 0xe16 <Write_String+0xac>
			pos++;
		 }
	}
}
 e74:	df 91       	pop	r29
 e76:	cf 91       	pop	r28
 e78:	1f 91       	pop	r17
 e7a:	0f 91       	pop	r16
 e7c:	ff 90       	pop	r15
 e7e:	ef 90       	pop	r14
 e80:	df 90       	pop	r13
 e82:	cf 90       	pop	r12
 e84:	08 95       	ret

00000e86 <main>:
	DDRB 	|= (1<<PB0) | (1<<PB1) | (1<<PB2) | (1<<PB3) | (1<<PB5);//set CS_DISP and RES and D/C output
 e86:	84 b1       	in	r24, 0x04	; 4
 e88:	8f 62       	ori	r24, 0x2F	; 47
 e8a:	84 b9       	out	0x04, r24	; 4
	PORTB	|= (1<<PB0) | (1<<PB1) | (1<<PB2) | (1<<PB3) | (1<<PB5);//set CS_DISP and RES and D/C high
 e8c:	85 b1       	in	r24, 0x05	; 5
 e8e:	8f 62       	ori	r24, 0x2F	; 47
 e90:	85 b9       	out	0x05, r24	; 5
	DDRC |= (1<<PC5);	//SCL
 e92:	3d 9a       	sbi	0x07, 5	; 7
	PORTC |= (1<<PC5);
 e94:	45 9a       	sbi	0x08, 5	; 8
	PORTC &= ~(1<<PC5);
 e96:	45 98       	cbi	0x08, 5	; 8
	SPCR0 = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
 e98:	81 e5       	ldi	r24, 0x51	; 81
 e9a:	8c bd       	out	0x2c, r24	; 44
	Display_Init();
 e9c:	0e 94 d1 05 	call	0xba2	; 0xba2 <Display_Init>
	Display_Clear();
 ea0:	0e 94 87 05 	call	0xb0e	; 0xb0e <Display_Clear>
    send_command(add);
 ea4:	80 eb       	ldi	r24, 0xB0	; 176
 ea6:	0e 94 1f 05 	call	0xa3e	; 0xa3e <send_command>
    send_command((0x10|(add>>4)));
 eaa:	82 e1       	ldi	r24, 0x12	; 18
 eac:	0e 94 1f 05 	call	0xa3e	; 0xa3e <send_command>
	send_command((0x0f&add));
 eb0:	88 e0       	ldi	r24, 0x08	; 8
 eb2:	0e 94 1f 05 	call	0xa3e	; 0xa3e <send_command>
	Write_String(8,0,0,"Row1");
 eb6:	20 e0       	ldi	r18, 0x00	; 0
 eb8:	31 e0       	ldi	r19, 0x01	; 1
 eba:	40 e0       	ldi	r20, 0x00	; 0
 ebc:	60 e0       	ldi	r22, 0x00	; 0
 ebe:	88 e0       	ldi	r24, 0x08	; 8
 ec0:	0e 94 b5 06 	call	0xd6a	; 0xd6a <Write_String>
	Write_String(14,1,0,"rgroener@");
 ec4:	25 e0       	ldi	r18, 0x05	; 5
 ec6:	31 e0       	ldi	r19, 0x01	; 1
 ec8:	40 e0       	ldi	r20, 0x00	; 0
 eca:	61 e0       	ldi	r22, 0x01	; 1
 ecc:	8e e0       	ldi	r24, 0x0E	; 14
 ece:	0e 94 b5 06 	call	0xd6a	; 0xd6a <Write_String>
	Write_String(14,2,0,"mailbox.org");
 ed2:	2f e0       	ldi	r18, 0x0F	; 15
 ed4:	31 e0       	ldi	r19, 0x01	; 1
 ed6:	40 e0       	ldi	r20, 0x00	; 0
 ed8:	62 e0       	ldi	r22, 0x02	; 2
 eda:	8e e0       	ldi	r24, 0x0E	; 14
 edc:	0e 94 b5 06 	call	0xd6a	; 0xd6a <Write_String>
	while(1)
 ee0:	ff cf       	rjmp	.-2      	; 0xee0 <main+0x5a>

00000ee2 <_exit>:
 ee2:	f8 94       	cli

00000ee4 <__stop_program>:
 ee4:	ff cf       	rjmp	.-2      	; 0xee4 <__stop_program>
