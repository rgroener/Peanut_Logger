
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000058  00800100  00001c1c  00001cb0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c1c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001d  00800158  00800158  00001d08  2**0
                  ALLOC
  3 .comment      00000024  00000000  00000000  00001d08  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d2c  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 00000068  00000000  00000000  00001d6c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   0000286f  00000000  00000000  00001dd4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000e91  00000000  00000000  00004643  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00002ae6  00000000  00000000  000054d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  0000020c  00000000  00000000  00007fbc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    000006e9  00000000  00000000  000081c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_loc    00001382  00000000  00000000  000088b1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges 00000218  00000000  00000000  00009c33  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 03 05 	jmp	0xa06	; 0xa06 <__ctors_end>
       4:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
       8:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
       c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      10:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      14:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      18:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      1c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      20:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      24:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      28:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      2c:	0c 94 56 07 	jmp	0xeac	; 0xeac <__vector_11>
      30:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      34:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      38:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      3c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      40:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      44:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      48:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      4c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      50:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      54:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      58:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      5c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      60:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      64:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      68:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      6c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      70:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      74:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      78:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      7c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      80:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      84:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      88:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      8c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      90:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      94:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      98:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      9c:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      a0:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      a4:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      a8:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      ac:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>
      b0:	0c 94 20 05 	jmp	0xa40	; 0xa40 <__bad_interrupt>

000000b4 <font14>:
	...
      c0:	00 00 00 10 10 10 10 10 10 10 00 10 10 00 00 00     ................
      d0:	24 24 24 24 00 00 00 00 00 00 00 00 00 00 00 09     $$$$............
      e0:	09 12 7f 12 24 ff 24 48 48 00 00 00 10 3c 50 50     ....$.$HH....<PP
      f0:	50 30 18 14 14 14 78 10 00 00 00 61 92 94 94 68     P0....x....a...h
     100:	16 29 29 49 86 00 00 00 00 18 24 24 28 30 d1 89     .))I......$$(0..
     110:	8e c6 7f 00 00 00 10 10 10 10 00 00 00 00 00 00     ................
     120:	00 00 00 00 06 0c 10 10 20 20 20 20 20 10 10 0c     ........     ...
     130:	06 00 60 30 08 08 04 04 04 04 04 08 08 30 60 00     ..`0.........0`.
     140:	00 10 28 10 00 00 00 00 00 00 00 00 00 00 00 00     ..(.............
     150:	00 00 10 10 10 fe 10 10 10 00 00 00 00 00 00 00     ................
     160:	00 00 00 00 00 18 18 08 10 00 00 00 00 00 00 00     ................
     170:	7e 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ~...............
     180:	00 18 18 00 00 00 02 04 04 04 08 08 18 10 10 20     ............... 
     190:	20 20 40 00 00 18 24 42 42 42 42 42 42 24 18 00       @...$BBBBBB$..
     1a0:	00 00 00 08 78 08 08 08 08 08 08 08 7f 00 00 00     ....x...........
     1b0:	00 78 04 04 04 08 08 10 20 40 7c 00 00 00 00 3c     .x...... @|....<
     1c0:	02 02 02 1c 02 02 02 02 3c 00 00 00 00 04 0c 14     ........<.......
     1d0:	14 24 44 7e 04 04 04 00 00 00 00 3e 20 20 20 38     .$D~.......>   8
     1e0:	06 02 02 02 3c 00 00 00 00 1c 20 40 40 5c 62 42     ....<..... @@\bB
     1f0:	42 22 1c 00 00 00 00 7e 02 04 04 08 10 10 10 20     B".....~....... 
     200:	20 00 00 00 00 3c 42 42 44 38 24 42 42 42 3c 00      ....<BBD8$BBB<.
     210:	00 00 00 38 44 42 42 46 3a 02 02 04 38 00 00 00     ...8DBBF:...8...
     220:	00 00 00 00 18 18 00 00 00 18 18 00 00 00 00 00     ................
     230:	00 00 18 18 00 00 00 18 18 08 10 00 00 00 00 00     ................
     240:	02 0c 10 60 10 0c 02 00 00 00 00 00 00 00 00 7e     ...`...........~
     250:	00 00 7e 00 00 00 00 00 00 00 00 00 40 30 08 06     ..~.........@0..
     260:	08 30 40 00 00 00 00 7c 42 02 04 08 10 10 00 10     .0@....|B.......
     270:	10 00 00 00 00 3c 62 4e 92 92 92 96 db 44 3c 00     .....<bN.....D<.
     280:	00 00 00 00 08 18 14 24 24 42 7e 42 81 00 00 00     .......$$B~B....
     290:	00 00 7c 42 42 44 78 44 42 42 7c 00 00 00 00 00     ..|BBDxDBB|.....
     2a0:	3e 40 80 80 80 80 80 40 3e 00 00 00 00 00 f8 84     >@.....@>.......
     2b0:	82 82 82 82 82 84 f8 00 00 00 00 00 7e 40 40 40     ............~@@@
     2c0:	7c 40 40 40 7e 00 00 00 00 00 7e 40 40 40 7c 40     |@@@~.....~@@@|@
     2d0:	40 40 40 00 00 00 00 00 3e 40 80 80 80 8e 82 42     @@@.....>@.....B
     2e0:	3e 00 00 00 00 00 42 42 42 42 7e 42 42 42 42 00     >.....BBBB~BBBB.
     2f0:	00 00 00 00 7c 10 10 10 10 10 10 10 7c 00 00 00     ....|.......|...
     300:	00 00 3c 04 04 04 04 04 04 04 78 00 00 00 00 00     ..<.......x.....
     310:	42 44 48 50 60 50 48 44 42 00 00 00 00 00 40 40     BDHP`PHDB.....@@
     320:	40 40 40 40 40 40 7e 00 00 00 00 00 c6 c6 c6 aa     @@@@@@~.........
     330:	aa aa 92 82 82 00 00 00 00 00 42 62 62 52 52 4a     ..........BbbRRJ
     340:	4a 46 42 00 00 00 00 00 38 44 82 82 82 82 82 44     JFB.....8D.....D
     350:	38 00 00 00 00 00 7c 42 42 42 46 78 40 40 40 00     8.....|BBBFx@@@.
     360:	00 00 00 00 38 44 82 82 82 82 82 44 38 06 03 00     ....8D.....D8...
     370:	00 00 78 44 44 44 78 48 4c 44 42 00 00 00 00 00     ..xDDDxHLDB.....
     380:	3e 40 40 60 18 06 02 02 7c 00 00 00 00 00 fe 10     >@@`....|.......
     390:	10 10 10 10 10 10 10 00 00 00 00 00 42 42 42 42     ............BBBB
     3a0:	42 42 42 42 3c 00 00 00 00 00 81 42 42 44 24 28     BBBB<......BBD$(
     3b0:	28 10 10 00 00 00 00 00 81 81 93 9a 5a 5a 66 66     (...........ZZff
     3c0:	24 00 00 00 00 00 81 42 24 18 18 18 24 42 81 00     $......B$...$B..
     3d0:	00 00 00 00 81 42 44 28 18 10 10 10 10 00 00 00     .....BD(........
     3e0:	00 00 fe 02 04 08 10 20 40 80 fe 00 00 00 1e 10     ....... @.......
     3f0:	10 10 10 10 10 10 10 10 10 10 1e 00 40 20 20 20     ............@   
     400:	10 10 18 08 08 04 04 04 02 00 78 08 08 08 08 08     ..........x.....
     410:	08 08 08 08 08 08 78 00 00 08 08 18 14 14 24 22     ......x.......$"
     420:	42 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     B...............
     430:	00 ff 00 00 08 04 00 00 00 00 00 00 00 00 00 00     ................
     440:	00 00 00 00 00 00 3c 02 02 3e 42 42 3f 00 00 00     ......<..>BB?...
     450:	40 40 40 40 5c 62 42 42 42 62 5c 00 00 00 00 00     @@@@\bBBBb\.....
     460:	00 00 1e 20 40 40 40 20 1e 00 00 00 02 02 02 02     ... @@@ ........
     470:	3a 46 42 42 42 46 3a 00 00 00 00 00 00 00 3c 22     :FBBBF:.......<"
     480:	42 7e 40 40 3e 00 00 00 0e 10 10 10 7e 10 10 10     B~@@>.......~...
     490:	10 10 10 00 00 00 00 00 00 00 3e 46 42 42 42 46     ..........>FBBBF
     4a0:	3a 02 02 3c 40 40 40 40 5c 62 42 42 42 42 42 00     :..<@@@@\bBBBBB.
     4b0:	00 00 18 18 00 00 78 08 08 08 08 08 08 00 00 00     ......x.........
     4c0:	0c 0c 00 00 3c 04 04 04 04 04 04 04 04 78 40 40     ....<........x@@
     4d0:	40 40 44 48 50 60 58 44 42 00 00 00 78 08 08 08     @@DHP`XDB...x...
     4e0:	08 08 08 08 08 08 08 00 00 00 00 00 00 00 b6 da     ................
     4f0:	92 92 92 92 92 00 00 00 00 00 00 00 5c 62 42 42     ............\bBB
     500:	42 42 42 00 00 00 00 00 00 00 38 44 82 82 82 44     BBB.......8D...D
     510:	38 00 00 00 00 00 00 00 5c 62 42 42 42 62 5c 40     8.......\bBBBb\@
     520:	40 40 00 00 00 00 3a 46 42 42 42 46 3a 02 02 02     @@....:FBBBF:...
     530:	00 00 00 00 5c 64 40 40 40 40 40 00 00 00 00 00     ....\d@@@@@.....
     540:	00 00 3c 40 60 18 04 04 78 00 00 00 00 00 20 20     ..<@`...x.....  
     550:	fe 20 20 20 20 20 1e 00 00 00 00 00 00 00 42 42     .     ........BB
     560:	42 42 42 46 3a 00 00 00 00 00 00 00 81 42 42 44     BBBF:........BBD
     570:	28 28 10 00 00 00 00 00 00 00 81 89 5a 5a 66 24     ((..........ZZf$
     580:	24 00 00 00 00 00 00 00 42 24 18 18 18 24 42 00     $.......B$...$B.
     590:	00 00 00 00 00 00 81 42 42 24 24 18 18 10 30 e0     .......BB$$...0.
     5a0:	00 00 00 00 fe 04 08 10 20 40 fe 00 00 00           ........ @....

000005ae <font8>:
	...
     5b6:	30 78 78 30 30 00 30 00 6c 6c 6c 00 00 00 00 00     0xx00.0.lll.....
     5c6:	6c 6c fe 6c fe 6c 6c 00 30 7c c0 78 0c f8 30 00     ll.l.ll.0|.x..0.
     5d6:	00 c6 cc 18 30 66 c6 00 38 6c 38 76 dc cc 76 00     ....0f..8l8v..v.
     5e6:	60 60 c0 00 00 00 00 00 18 30 60 60 60 30 18 00     ``.......0```0..
     5f6:	60 30 18 18 18 30 60 00 38 6c 6c 38 00 00 00 00     `0...0`.8ll8....
     606:	00 30 30 fc 30 30 00 00 00 00 00 00 00 70 30 60     .00.00.......p0`
     616:	00 00 00 fc 00 00 00 00 00 00 00 00 00 30 30 00     .............00.
     626:	06 0c 18 30 60 c0 80 00 78 cc dc fc ec cc 78 00     ...0`...x.....x.
     636:	30 f0 30 30 30 30 fc 00 78 cc 0c 38 60 cc fc 00     0.0000..x..8`...
     646:	78 cc 0c 38 0c cc 78 00 1c 3c 6c cc fe 0c 0c 00     x..8..x..<l.....
     656:	fc c0 f8 0c 0c cc 78 00 38 60 c0 f8 cc cc 78 00     ......x.8`....x.
     666:	fc cc 0c 18 30 60 60 00 78 cc cc 78 cc cc 78 00     ....0``.x..x..x.
     676:	78 cc cc 7c 0c 18 70 00 00 00 30 30 00 30 30 00     x..|..p...00.00.
     686:	00 00 30 30 00 70 30 60 18 30 60 c0 60 30 18 00     ..00.p0`.0`.`0..
     696:	00 00 fc 00 fc 00 00 00 60 30 18 0c 18 30 60 00     ........`0...0`.
     6a6:	78 cc 0c 18 30 00 30 00 7c c6 de de de c0 78 00     x...0.0.|.....x.
     6b6:	30 78 cc cc fc cc cc 00 fc 66 66 7c 66 66 fc 00     0x.......ff|ff..
     6c6:	3c 66 c0 c0 c0 66 3c 00 fc 6c 66 66 66 6c fc 00     <f...f<..lfffl..
     6d6:	fe 62 68 78 68 62 fe 00 fe 62 68 78 68 60 f0 00     .bhxhb...bhxh`..
     6e6:	3c 66 c0 c0 ce 66 3e 00 cc cc cc fc cc cc cc 00     <f...f>.........
     6f6:	78 30 30 30 30 30 78 00 1e 0c 0c 0c cc cc 78 00     x00000x.......x.
     706:	e6 66 6c 78 6c 66 e6 00 f0 60 60 60 62 66 fe 00     .flxlf...```bf..
     716:	c6 ee fe d6 c6 c6 c6 00 c6 e6 f6 de ce c6 c6 00     ................
     726:	38 6c c6 c6 c6 6c 38 00 fc 66 66 7c 60 60 f0 00     8l...l8..ff|``..
     736:	78 cc cc cc dc 78 1c 00 fc 66 66 7c 78 6c e6 00     x....x...ff|xl..
     746:	78 cc e0 38 1c cc 78 00 fc b4 30 30 30 30 78 00     x..8..x...0000x.
     756:	cc cc cc cc cc cc fc 00 cc cc cc cc cc 78 30 00     .............x0.
     766:	c6 c6 c6 d6 fe ee c6 00 c6 c6 6c 38 6c c6 c6 00     ..........l8l...
     776:	cc cc cc 78 30 30 78 00 fe cc 98 30 62 c6 fe 00     ...x00x....0b...
     786:	78 60 60 60 60 60 78 00 c0 60 30 18 0c 06 02 00     x`````x..`0.....
     796:	78 18 18 18 18 18 78 00 10 38 6c c6 00 00 00 00     x.....x..8l.....
     7a6:	00 00 00 00 00 00 00 ff 30 30 18 00 00 00 00 00     ........00......
     7b6:	00 00 78 0c 7c cc 76 00 e0 60 7c 66 66 66 bc 00     ..x.|.v..`|fff..
     7c6:	00 00 78 cc c0 cc 78 00 1c 0c 0c 7c cc cc 76 00     ..x...x....|..v.
     7d6:	00 00 78 cc fc c0 78 00 38 6c 60 f0 60 60 f0 00     ..x...x.8l`.``..
     7e6:	00 00 76 cc cc 7c 0c f8 e0 60 6c 76 66 66 e6 00     ..v..|...`lvff..
     7f6:	30 00 70 30 30 30 78 00 18 00 78 18 18 18 d8 70     0.p000x...x....p
     806:	e0 60 66 6c 78 6c e6 00 70 30 30 30 30 30 78 00     .`flxl..p00000x.
     816:	00 00 ec fe d6 c6 c6 00 00 00 f8 cc cc cc cc 00     ................
     826:	00 00 78 cc cc cc 78 00 00 00 dc 66 66 7c 60 f0     ..x...x....ff|`.
     836:	00 00 76 cc cc 7c 0c 1e 00 00 d8 6c 6c 60 f0 00     ..v..|.....ll`..
     846:	00 00 7c c0 78 0c f8 00 10 30 7c 30 30 34 18 00     ..|.x....0|004..
     856:	00 00 cc cc cc cc 76 00 00 00 cc cc cc 78 30 00     ......v......x0.
     866:	00 00 c6 c6 d6 fe 6c 00 00 00 c6 6c 38 6c c6 00     ......l....l8l..
     876:	00 00 cc cc cc 7c 0c f8 00 00 fc 98 30 64 fc 00     .....|......0d..

00000886 <pic>:
     886:	00 00 00 00 00 c0 00 e0 00 f0 00 fc 00 00 00 00     ................
     896:	04 06 12 12 fe ec 00 f8 fc 06 02 22 e6 e4 00 00     ..........."....
     8a6:	00 f0 90 9c 04 f4 04 f4 f4 04 f4 f4 04 04 fc 00     ................
     8b6:	00 00 00 03 00 03 00 03 00 03 00 03 00 00 00 00     ................
     8c6:	01 03 02 02 03 01 00 00 01 03 02 02 03 01 00 00     ................
     8d6:	00 00 00 03 02 02 02 02 02 02 02 02 02 02 03 00     ................
     8e6:	00 00 0c 06 ff ff 00 00 00 0c 06 ff ff 00 00 00     ................
     8f6:	18 18 00 fe ff 01 01 ff fe 00 1c 1f 0b 09 f9 f1     ................
     906:	00 f8 48 48 78 00 f8 30 c0 00 c0 30 f8 00 00 00     ..HHx..0...0....
     916:	00 00 c0 20 23 23 20 40 00 00 80 83 83 00 80 e0     ... ## @........
     926:	83 03 80 01 03 02 82 03 81 00 81 03 02 82 83 01     ................
     936:	e0 03 00 80 80 80 03 00 81 02 01 00 83 00 00 00     ................
     946:	00 00 08 11 11 12 12 0c 00 0d 12 12 0a 1f 00 1f     ................
     956:	10 00 0f 10 10 08 1f 00 1f 01 00 00 0f 10 10 09     ................
     966:	1f 00 0d 12 12 0a 1f 00 01 46 38 06 01 00 00 00     .........F8.....
     976:	f8 04 04 04 88 00 fc 10 10 e0 00 f4 00 f0 10 10     ................
     986:	e0 00 90 50 50 f0 00 fc 18 e0 00 e0 18 fc e0 10     ...PP...........
     996:	10 e0 00 fc 10 10 e0 00 f4 00 fc 00 e0 50 50 60     .............PP`
     9a6:	00 01 01 01 c0 00 01 00 00 01 00 01 00 01 00 00     ................
     9b6:	01 00 81 41 41 41 80 01 00 00 81 40 40 41 80 01     ...AAA.....@@A..
     9c6:	81 40 40 41 81 01 00 80 c1 00 81 40 40 41 81 01     .@@A.......@@A..
     9d6:	00 18 20 20 1f 00 1a 25 25 15 3e 00 3f 01 01 01     ..  ...%%.>.?...
     9e6:	3e 00 1d 22 22 22 1d 00 00 00 20 30 28 24 23 00     >..""".... 0($#.
     9f6:	1f 20 20 20 1f 00 01 00 3f 00 1d 22 22 22 1d 00     .   ....?.."""..

00000a06 <__ctors_end>:
     a06:	11 24       	eor	r1, r1
     a08:	1f be       	out	0x3f, r1	; 63
     a0a:	cf ef       	ldi	r28, 0xFF	; 255
     a0c:	d8 e0       	ldi	r29, 0x08	; 8
     a0e:	de bf       	out	0x3e, r29	; 62
     a10:	cd bf       	out	0x3d, r28	; 61

00000a12 <__do_copy_data>:
     a12:	11 e0       	ldi	r17, 0x01	; 1
     a14:	a0 e0       	ldi	r26, 0x00	; 0
     a16:	b1 e0       	ldi	r27, 0x01	; 1
     a18:	ec e1       	ldi	r30, 0x1C	; 28
     a1a:	fc e1       	ldi	r31, 0x1C	; 28
     a1c:	02 c0       	rjmp	.+4      	; 0xa22 <__do_copy_data+0x10>
     a1e:	05 90       	lpm	r0, Z+
     a20:	0d 92       	st	X+, r0
     a22:	a8 35       	cpi	r26, 0x58	; 88
     a24:	b1 07       	cpc	r27, r17
     a26:	d9 f7       	brne	.-10     	; 0xa1e <__do_copy_data+0xc>

00000a28 <__do_clear_bss>:
     a28:	21 e0       	ldi	r18, 0x01	; 1
     a2a:	a8 e5       	ldi	r26, 0x58	; 88
     a2c:	b1 e0       	ldi	r27, 0x01	; 1
     a2e:	01 c0       	rjmp	.+2      	; 0xa32 <.do_clear_bss_start>

00000a30 <.do_clear_bss_loop>:
     a30:	1d 92       	st	X+, r1

00000a32 <.do_clear_bss_start>:
     a32:	a5 37       	cpi	r26, 0x75	; 117
     a34:	b2 07       	cpc	r27, r18
     a36:	e1 f7       	brne	.-8      	; 0xa30 <.do_clear_bss_loop>
     a38:	0e 94 c4 08 	call	0x1188	; 0x1188 <main>
     a3c:	0c 94 0c 0e 	jmp	0x1c18	; 0x1c18 <_exit>

00000a40 <__bad_interrupt>:
     a40:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000a44 <SPI_MasterInit>:
void SPI_MasterInit(void)
{
	/* Set MOSI and SCK output, all others input */
	//DDRB = (1<<MOSI)|(1<<SCK);
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR0 = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
     a44:	81 e5       	ldi	r24, 0x51	; 81
     a46:	8c bd       	out	0x2c, r24	; 44
}
     a48:	08 95       	ret

00000a4a <SPI_MasterTransmit>:
void SPI_MasterTransmit(char cData)
{
	/* Start transmission */
	SPDR0 = cData;
     a4a:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while(!(SPSR0 & (1<<SPIF)));
     a4c:	0d b4       	in	r0, 0x2d	; 45
     a4e:	07 fe       	sbrs	r0, 7
     a50:	fd cf       	rjmp	.-6      	; 0xa4c <SPI_MasterTransmit+0x2>
}
     a52:	08 95       	ret

00000a54 <send_data>:
void send_data(char data)
{
	DISP_DATA;
     a54:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
     a56:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     a58:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     a5a:	0d b4       	in	r0, 0x2d	; 45
     a5c:	07 fe       	sbrs	r0, 7
     a5e:	fd cf       	rjmp	.-6      	; 0xa5a <send_data+0x6>
	SPI_MasterTransmit(data);
	CS_DISP_1;
     a60:	28 9a       	sbi	0x05, 0	; 5
}
     a62:	08 95       	ret

00000a64 <send_command>:
void send_command(char command)
{
	DISP_COMM;
     a64:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     a66:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     a68:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     a6a:	0d b4       	in	r0, 0x2d	; 45
     a6c:	07 fe       	sbrs	r0, 7
     a6e:	fd cf       	rjmp	.-6      	; 0xa6a <send_command+0x6>
	SPI_MasterTransmit(command);
	CS_DISP_1;
     a70:	28 9a       	sbi	0x05, 0	; 5
}
     a72:	08 95       	ret

00000a74 <Set_Page_Address>:
void Set_Page_Address(unsigned char add)
{
    add=0xb0|add;
     a74:	80 6b       	ori	r24, 0xB0	; 176
	DISP_COMM;
     a76:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     a78:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     a7a:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     a7c:	0d b4       	in	r0, 0x2d	; 45
     a7e:	07 fe       	sbrs	r0, 7
     a80:	fd cf       	rjmp	.-6      	; 0xa7c <Set_Page_Address+0x8>
	CS_DISP_1;
     a82:	28 9a       	sbi	0x05, 0	; 5
    send_command(add);
	return;
}
     a84:	08 95       	ret

00000a86 <Set_Column_Address>:
void Set_Column_Address(unsigned char add)
{	 add+=40;
     a86:	88 5d       	subi	r24, 0xD8	; 216
    send_command((0x10|(add>>4)));
     a88:	98 2f       	mov	r25, r24
     a8a:	92 95       	swap	r25
     a8c:	9f 70       	andi	r25, 0x0F	; 15
     a8e:	90 61       	ori	r25, 0x10	; 16
	DISP_COMM;
     a90:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     a92:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     a94:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
     a96:	0d b4       	in	r0, 0x2d	; 45
     a98:	07 fe       	sbrs	r0, 7
     a9a:	fd cf       	rjmp	.-6      	; 0xa96 <Set_Column_Address+0x10>
	CS_DISP_1;
     a9c:	28 9a       	sbi	0x05, 0	; 5
	send_command((0x0f&add));
     a9e:	8f 70       	andi	r24, 0x0F	; 15
	DISP_COMM;
     aa0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     aa2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     aa4:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     aa6:	0d b4       	in	r0, 0x2d	; 45
     aa8:	07 fe       	sbrs	r0, 7
     aaa:	fd cf       	rjmp	.-6      	; 0xaa6 <Set_Column_Address+0x20>
	CS_DISP_1;
     aac:	28 9a       	sbi	0x05, 0	; 5
	return;
}
     aae:	08 95       	ret

00000ab0 <Set_Contrast_Control_Register>:
	DISP_COMM;
     ab0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     ab2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     ab4:	91 e8       	ldi	r25, 0x81	; 129
     ab6:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
     ab8:	0d b4       	in	r0, 0x2d	; 45
     aba:	07 fe       	sbrs	r0, 7
     abc:	fd cf       	rjmp	.-6      	; 0xab8 <Set_Contrast_Control_Register+0x8>
	CS_DISP_1;
     abe:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     ac0:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     ac2:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     ac4:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     ac6:	0d b4       	in	r0, 0x2d	; 45
     ac8:	07 fe       	sbrs	r0, 7
     aca:	fd cf       	rjmp	.-6      	; 0xac6 <Set_Contrast_Control_Register+0x16>
	CS_DISP_1;
     acc:	28 9a       	sbi	0x05, 0	; 5
void Set_Contrast_Control_Register(unsigned char mod)
{
    send_command(0x81);
	send_command(mod);
	return;
}
     ace:	08 95       	ret

00000ad0 <Display_Picture>:
void Display_Picture(const unsigned char pic[])
{
	//Display picture 48x64
    unsigned char i,j;
	for(i=0;i<0x08;i++)
     ad0:	9c 01       	movw	r18, r24
     ad2:	20 5d       	subi	r18, 0xD0	; 208
     ad4:	3f 4f       	sbci	r19, 0xFF	; 255
     ad6:	90 e0       	ldi	r25, 0x00	; 0
	SPDR0 = cData;
     ad8:	52 e1       	ldi	r21, 0x12	; 18
     ada:	48 e0       	ldi	r20, 0x08	; 8
	DISP_COMM;
     adc:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     ade:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     ae0:	89 2f       	mov	r24, r25
     ae2:	80 6b       	ori	r24, 0xB0	; 176
     ae4:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     ae6:	0d b4       	in	r0, 0x2d	; 45
     ae8:	07 fe       	sbrs	r0, 7
     aea:	fd cf       	rjmp	.-6      	; 0xae6 <Display_Picture+0x16>
	CS_DISP_1;
     aec:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     aee:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     af0:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     af2:	5e bd       	out	0x2e, r21	; 46
	while(!(SPSR0 & (1<<SPIF)));
     af4:	0d b4       	in	r0, 0x2d	; 45
     af6:	07 fe       	sbrs	r0, 7
     af8:	fd cf       	rjmp	.-6      	; 0xaf4 <Display_Picture+0x24>
	CS_DISP_1;
     afa:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     afc:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     afe:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     b00:	4e bd       	out	0x2e, r20	; 46
	while(!(SPSR0 & (1<<SPIF)));
     b02:	0d b4       	in	r0, 0x2d	; 45
     b04:	07 fe       	sbrs	r0, 7
     b06:	fd cf       	rjmp	.-6      	; 0xb02 <Display_Picture+0x32>
	CS_DISP_1;
     b08:	28 9a       	sbi	0x05, 0	; 5
	{
	Set_Page_Address(i);
    Set_Column_Address(0x00);
        for(j=0;j<0x30;j++)
     b0a:	f9 01       	movw	r30, r18
     b0c:	f0 97       	sbiw	r30, 0x30	; 48
		{
		    send_data(pgm_read_byte(&pic[i*0x30+j]));
     b0e:	84 91       	lpm	r24, Z
	DISP_DATA;
     b10:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
     b12:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     b14:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     b16:	0d b4       	in	r0, 0x2d	; 45
     b18:	07 fe       	sbrs	r0, 7
     b1a:	fd cf       	rjmp	.-6      	; 0xb16 <Display_Picture+0x46>
	CS_DISP_1;
     b1c:	28 9a       	sbi	0x05, 0	; 5
        for(j=0;j<0x30;j++)
     b1e:	31 96       	adiw	r30, 0x01	; 1
     b20:	e2 17       	cp	r30, r18
     b22:	f3 07       	cpc	r31, r19
     b24:	a1 f7       	brne	.-24     	; 0xb0e <Display_Picture+0x3e>
	for(i=0;i<0x08;i++)
     b26:	9f 5f       	subi	r25, 0xFF	; 255
     b28:	9f 01       	movw	r18, r30
     b2a:	20 5d       	subi	r18, 0xD0	; 208
     b2c:	3f 4f       	sbci	r19, 0xFF	; 255
     b2e:	98 30       	cpi	r25, 0x08	; 8
     b30:	a9 f6       	brne	.-86     	; 0xadc <Display_Picture+0xc>
		}
	}
    return;
}
     b32:	08 95       	ret

00000b34 <Display_Clear>:
void Display_Clear(void)
{
	//clear whole display
	unsigned char i,j;
	for(i=0;i<0x08;i++)
     b34:	90 e0       	ldi	r25, 0x00	; 0
	SPDR0 = cData;
     b36:	32 e1       	ldi	r19, 0x12	; 18
     b38:	28 e0       	ldi	r18, 0x08	; 8
	DISP_COMM;
     b3a:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     b3c:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     b3e:	89 2f       	mov	r24, r25
     b40:	80 6b       	ori	r24, 0xB0	; 176
     b42:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     b44:	0d b4       	in	r0, 0x2d	; 45
     b46:	07 fe       	sbrs	r0, 7
     b48:	fd cf       	rjmp	.-6      	; 0xb44 <Display_Clear+0x10>
	CS_DISP_1;
     b4a:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     b4c:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     b4e:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     b50:	3e bd       	out	0x2e, r19	; 46
	while(!(SPSR0 & (1<<SPIF)));
     b52:	0d b4       	in	r0, 0x2d	; 45
     b54:	07 fe       	sbrs	r0, 7
     b56:	fd cf       	rjmp	.-6      	; 0xb52 <Display_Clear+0x1e>
	CS_DISP_1;
     b58:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     b5a:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     b5c:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     b5e:	2e bd       	out	0x2e, r18	; 46
	while(!(SPSR0 & (1<<SPIF)));
     b60:	0d b4       	in	r0, 0x2d	; 45
     b62:	07 fe       	sbrs	r0, 7
     b64:	fd cf       	rjmp	.-6      	; 0xb60 <Display_Clear+0x2c>
	CS_DISP_1;
     b66:	28 9a       	sbi	0x05, 0	; 5
     b68:	80 e3       	ldi	r24, 0x30	; 48
	DISP_DATA;
     b6a:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
     b6c:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     b6e:	1e bc       	out	0x2e, r1	; 46
	while(!(SPSR0 & (1<<SPIF)));
     b70:	0d b4       	in	r0, 0x2d	; 45
     b72:	07 fe       	sbrs	r0, 7
     b74:	fd cf       	rjmp	.-6      	; 0xb70 <Display_Clear+0x3c>
	CS_DISP_1;
     b76:	28 9a       	sbi	0x05, 0	; 5
	{
	Set_Page_Address(i);
    Set_Column_Address(0x00);
        for(j=0;j<0x30;j++)
     b78:	81 50       	subi	r24, 0x01	; 1
     b7a:	b9 f7       	brne	.-18     	; 0xb6a <Display_Clear+0x36>
	for(i=0;i<0x08;i++)
     b7c:	9f 5f       	subi	r25, 0xFF	; 255
     b7e:	98 30       	cpi	r25, 0x08	; 8
     b80:	e1 f6       	brne	.-72     	; 0xb3a <Display_Clear+0x6>
		{
		    send_data(0x00);
		}
	}
    return;
}
     b82:	08 95       	ret

00000b84 <Char_Position>:
void Char_Position(uint8_t fontsize, uint8_t row, uint8_t pos)
{
	//set position for new char (font size 8x14)
	Set_Page_Address(7-pos);	//0-7 	(* 8 bit)
     b84:	97 e0       	ldi	r25, 0x07	; 7
     b86:	94 1b       	sub	r25, r20
    add=0xb0|add;
     b88:	90 6b       	ori	r25, 0xB0	; 176
	DISP_COMM;
     b8a:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     b8c:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     b8e:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
     b90:	0d b4       	in	r0, 0x2d	; 45
     b92:	07 fe       	sbrs	r0, 7
     b94:	fd cf       	rjmp	.-6      	; 0xb90 <Char_Position+0xc>
	CS_DISP_1;
     b96:	28 9a       	sbi	0x05, 0	; 5
	Set_Column_Address(row*fontsize);	//0-3	(* 14 collums / char)
     b98:	68 9f       	mul	r22, r24
     b9a:	80 2d       	mov	r24, r0
     b9c:	11 24       	eor	r1, r1
{	 add+=40;
     b9e:	88 5d       	subi	r24, 0xD8	; 216
    send_command((0x10|(add>>4)));
     ba0:	98 2f       	mov	r25, r24
     ba2:	92 95       	swap	r25
     ba4:	9f 70       	andi	r25, 0x0F	; 15
     ba6:	90 61       	ori	r25, 0x10	; 16
	DISP_COMM;
     ba8:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     baa:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     bac:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
     bae:	0d b4       	in	r0, 0x2d	; 45
     bb0:	07 fe       	sbrs	r0, 7
     bb2:	fd cf       	rjmp	.-6      	; 0xbae <Char_Position+0x2a>
	CS_DISP_1;
     bb4:	28 9a       	sbi	0x05, 0	; 5
	send_command((0x0f&add));
     bb6:	8f 70       	andi	r24, 0x0F	; 15
	DISP_COMM;
     bb8:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     bba:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     bbc:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     bbe:	0d b4       	in	r0, 0x2d	; 45
     bc0:	07 fe       	sbrs	r0, 7
     bc2:	fd cf       	rjmp	.-6      	; 0xbbe <Char_Position+0x3a>
	CS_DISP_1;
     bc4:	28 9a       	sbi	0x05, 0	; 5
}
     bc6:	08 95       	ret

00000bc8 <Display_Init>:
void Display_Init(void)
{
	/*Init session according datasheet and sample code:
	 *https://www.buydisplay.com/serial-spi-0-71-inch-white-48x64-graphic-oled-display-ssd1306
	 * */
	DISP_RST_1;
     bc8:	29 9a       	sbi	0x05, 1	; 5
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     bca:	80 e2       	ldi	r24, 0x20	; 32
     bcc:	9e e4       	ldi	r25, 0x4E	; 78
     bce:	fc 01       	movw	r30, r24
     bd0:	31 97       	sbiw	r30, 0x01	; 1
     bd2:	f1 f7       	brne	.-4      	; 0xbd0 <Display_Init+0x8>
	_delay_ms(10);
	DISP_RST_0;
     bd4:	29 98       	cbi	0x05, 1	; 5
     bd6:	e0 e4       	ldi	r30, 0x40	; 64
     bd8:	fc e9       	ldi	r31, 0x9C	; 156
     bda:	31 97       	sbiw	r30, 0x01	; 1
     bdc:	f1 f7       	brne	.-4      	; 0xbda <Display_Init+0x12>
	_delay_ms(20);
	DISP_RST_1;
     bde:	29 9a       	sbi	0x05, 1	; 5
     be0:	01 97       	sbiw	r24, 0x01	; 1
     be2:	f1 f7       	brne	.-4      	; 0xbe0 <Display_Init+0x18>
	_delay_ms(10);
	DISP_COMM;
     be4:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;		
     be6:	28 98       	cbi	0x05, 0	; 5
	DISP_COMM;
     be8:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     bea:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     bec:	8e ea       	ldi	r24, 0xAE	; 174
     bee:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     bf0:	0d b4       	in	r0, 0x2d	; 45
     bf2:	07 fe       	sbrs	r0, 7
     bf4:	fd cf       	rjmp	.-6      	; 0xbf0 <Display_Init+0x28>
	CS_DISP_1;
     bf6:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     bf8:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     bfa:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     bfc:	85 ed       	ldi	r24, 0xD5	; 213
     bfe:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     c00:	0d b4       	in	r0, 0x2d	; 45
     c02:	07 fe       	sbrs	r0, 7
     c04:	fd cf       	rjmp	.-6      	; 0xc00 <Display_Init+0x38>
	CS_DISP_1;
     c06:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     c08:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     c0a:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     c0c:	80 e8       	ldi	r24, 0x80	; 128
     c0e:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     c10:	0d b4       	in	r0, 0x2d	; 45
     c12:	07 fe       	sbrs	r0, 7
     c14:	fd cf       	rjmp	.-6      	; 0xc10 <Display_Init+0x48>
	CS_DISP_1;
     c16:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     c18:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     c1a:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     c1c:	88 ea       	ldi	r24, 0xA8	; 168
     c1e:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     c20:	0d b4       	in	r0, 0x2d	; 45
     c22:	07 fe       	sbrs	r0, 7
     c24:	fd cf       	rjmp	.-6      	; 0xc20 <Display_Init+0x58>
	CS_DISP_1;
     c26:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     c28:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     c2a:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     c2c:	8f e3       	ldi	r24, 0x3F	; 63
     c2e:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     c30:	0d b4       	in	r0, 0x2d	; 45
     c32:	07 fe       	sbrs	r0, 7
     c34:	fd cf       	rjmp	.-6      	; 0xc30 <Display_Init+0x68>
	CS_DISP_1;
     c36:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     c38:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     c3a:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     c3c:	83 ed       	ldi	r24, 0xD3	; 211
     c3e:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     c40:	0d b4       	in	r0, 0x2d	; 45
     c42:	07 fe       	sbrs	r0, 7
     c44:	fd cf       	rjmp	.-6      	; 0xc40 <Display_Init+0x78>
	CS_DISP_1;
     c46:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     c48:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     c4a:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     c4c:	1e bc       	out	0x2e, r1	; 46
	while(!(SPSR0 & (1<<SPIF)));
     c4e:	0d b4       	in	r0, 0x2d	; 45
     c50:	07 fe       	sbrs	r0, 7
     c52:	fd cf       	rjmp	.-6      	; 0xc4e <Display_Init+0x86>
	CS_DISP_1;
     c54:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     c56:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     c58:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     c5a:	8d e8       	ldi	r24, 0x8D	; 141
     c5c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     c5e:	0d b4       	in	r0, 0x2d	; 45
     c60:	07 fe       	sbrs	r0, 7
     c62:	fd cf       	rjmp	.-6      	; 0xc5e <Display_Init+0x96>
	CS_DISP_1;
     c64:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     c66:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     c68:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     c6a:	84 e1       	ldi	r24, 0x14	; 20
     c6c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     c6e:	0d b4       	in	r0, 0x2d	; 45
     c70:	07 fe       	sbrs	r0, 7
     c72:	fd cf       	rjmp	.-6      	; 0xc6e <Display_Init+0xa6>
	CS_DISP_1;
     c74:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     c76:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     c78:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     c7a:	86 ea       	ldi	r24, 0xA6	; 166
     c7c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     c7e:	0d b4       	in	r0, 0x2d	; 45
     c80:	07 fe       	sbrs	r0, 7
     c82:	fd cf       	rjmp	.-6      	; 0xc7e <Display_Init+0xb6>
	CS_DISP_1;
     c84:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     c86:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     c88:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     c8a:	84 ea       	ldi	r24, 0xA4	; 164
     c8c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     c8e:	0d b4       	in	r0, 0x2d	; 45
     c90:	07 fe       	sbrs	r0, 7
     c92:	fd cf       	rjmp	.-6      	; 0xc8e <Display_Init+0xc6>
	CS_DISP_1;
     c94:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     c96:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     c98:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     c9a:	81 ea       	ldi	r24, 0xA1	; 161
     c9c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     c9e:	0d b4       	in	r0, 0x2d	; 45
     ca0:	07 fe       	sbrs	r0, 7
     ca2:	fd cf       	rjmp	.-6      	; 0xc9e <Display_Init+0xd6>
	CS_DISP_1;
     ca4:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     ca6:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     ca8:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     caa:	88 ec       	ldi	r24, 0xC8	; 200
     cac:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     cae:	0d b4       	in	r0, 0x2d	; 45
     cb0:	07 fe       	sbrs	r0, 7
     cb2:	fd cf       	rjmp	.-6      	; 0xcae <Display_Init+0xe6>
	CS_DISP_1;
     cb4:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     cb6:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     cb8:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     cba:	8a ed       	ldi	r24, 0xDA	; 218
     cbc:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     cbe:	0d b4       	in	r0, 0x2d	; 45
     cc0:	07 fe       	sbrs	r0, 7
     cc2:	fd cf       	rjmp	.-6      	; 0xcbe <Display_Init+0xf6>
	CS_DISP_1;
     cc4:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     cc6:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     cc8:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     cca:	82 e1       	ldi	r24, 0x12	; 18
     ccc:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     cce:	0d b4       	in	r0, 0x2d	; 45
     cd0:	07 fe       	sbrs	r0, 7
     cd2:	fd cf       	rjmp	.-6      	; 0xcce <Display_Init+0x106>
	CS_DISP_1;
     cd4:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     cd6:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     cd8:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     cda:	81 e8       	ldi	r24, 0x81	; 129
     cdc:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     cde:	0d b4       	in	r0, 0x2d	; 45
     ce0:	07 fe       	sbrs	r0, 7
     ce2:	fd cf       	rjmp	.-6      	; 0xcde <Display_Init+0x116>
	CS_DISP_1;
     ce4:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     ce6:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     ce8:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     cea:	81 e0       	ldi	r24, 0x01	; 1
     cec:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     cee:	0d b4       	in	r0, 0x2d	; 45
     cf0:	07 fe       	sbrs	r0, 7
     cf2:	fd cf       	rjmp	.-6      	; 0xcee <Display_Init+0x126>
	CS_DISP_1;
     cf4:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     cf6:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     cf8:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     cfa:	89 ed       	ldi	r24, 0xD9	; 217
     cfc:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     cfe:	0d b4       	in	r0, 0x2d	; 45
     d00:	07 fe       	sbrs	r0, 7
     d02:	fd cf       	rjmp	.-6      	; 0xcfe <Display_Init+0x136>
	CS_DISP_1;
     d04:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d06:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d08:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     d0a:	81 ef       	ldi	r24, 0xF1	; 241
     d0c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     d0e:	0d b4       	in	r0, 0x2d	; 45
     d10:	07 fe       	sbrs	r0, 7
     d12:	fd cf       	rjmp	.-6      	; 0xd0e <Display_Init+0x146>
	CS_DISP_1;
     d14:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d16:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d18:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     d1a:	8b ed       	ldi	r24, 0xDB	; 219
     d1c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     d1e:	0d b4       	in	r0, 0x2d	; 45
     d20:	07 fe       	sbrs	r0, 7
     d22:	fd cf       	rjmp	.-6      	; 0xd1e <Display_Init+0x156>
	CS_DISP_1;
     d24:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d26:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d28:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     d2a:	80 e4       	ldi	r24, 0x40	; 64
     d2c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     d2e:	0d b4       	in	r0, 0x2d	; 45
     d30:	07 fe       	sbrs	r0, 7
     d32:	fd cf       	rjmp	.-6      	; 0xd2e <Display_Init+0x166>
	CS_DISP_1;
     d34:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     d36:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     d38:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     d3a:	8f ea       	ldi	r24, 0xAF	; 175
     d3c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     d3e:	0d b4       	in	r0, 0x2d	; 45
     d40:	07 fe       	sbrs	r0, 7
     d42:	fd cf       	rjmp	.-6      	; 0xd3e <Display_Init+0x176>
	CS_DISP_1;
     d44:	28 9a       	sbi	0x05, 0	; 5
	send_command(0xd9);//--set pre-charge period
	send_command(0xf1);
	send_command(0xdb);//--set vcomh
	send_command(0x40);//--set start line address orig 40
	send_command(0xaf);//--turn on oled panel
	CS_DISP_1;		   //release chip select
     d46:	28 9a       	sbi	0x05, 0	; 5
	DISP_DATA;
     d48:	2a 9a       	sbi	0x05, 2	; 5
}
     d4a:	08 95       	ret

00000d4c <Write_Char>:
	switch(fontsize)		//variable height and fixed width (8 Pixel)
	{
		case 8:fontpointer=font8;break;
		case 14:fontpointer=font14;break;
	}
	n-=0x20;			//jump to position in asci table
     d4c:	60 52       	subi	r22, 0x20	; 32
	switch(fontsize)		//variable height and fixed width (8 Pixel)
     d4e:	88 30       	cpi	r24, 0x08	; 8
     d50:	d9 f0       	breq	.+54     	; 0xd88 <Write_Char+0x3c>
     d52:	8e 30       	cpi	r24, 0x0E	; 14
     d54:	b1 f0       	breq	.+44     	; 0xd82 <Write_Char+0x36>
	for(x=0;x<fontsize;x++) 
     d56:	f0 e0       	ldi	r31, 0x00	; 0
     d58:	e0 e0       	ldi	r30, 0x00	; 0
     d5a:	88 23       	and	r24, r24
     d5c:	c1 f0       	breq	.+48     	; 0xd8e <Write_Char+0x42>
     d5e:	86 9f       	mul	r24, r22
     d60:	e0 0d       	add	r30, r0
     d62:	f1 1d       	adc	r31, r1
     d64:	11 24       	eor	r1, r1
	{
		send_data(pgm_read_byte(&fontpointer[(n*fontsize)+x]));
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	24 91       	lpm	r18, Z
	DISP_DATA;
     d6a:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
     d6c:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     d6e:	2e bd       	out	0x2e, r18	; 46
	while(!(SPSR0 & (1<<SPIF)));
     d70:	0d b4       	in	r0, 0x2d	; 45
     d72:	07 fe       	sbrs	r0, 7
     d74:	fd cf       	rjmp	.-6      	; 0xd70 <Write_Char+0x24>
	CS_DISP_1;
     d76:	28 9a       	sbi	0x05, 0	; 5
	for(x=0;x<fontsize;x++) 
     d78:	9f 5f       	subi	r25, 0xFF	; 255
     d7a:	31 96       	adiw	r30, 0x01	; 1
     d7c:	98 17       	cp	r25, r24
     d7e:	a0 f3       	brcs	.-24     	; 0xd68 <Write_Char+0x1c>
	}
	
}
     d80:	08 95       	ret
	switch(fontsize)		//variable height and fixed width (8 Pixel)
     d82:	e4 eb       	ldi	r30, 0xB4	; 180
     d84:	f0 e0       	ldi	r31, 0x00	; 0
     d86:	eb cf       	rjmp	.-42     	; 0xd5e <Write_Char+0x12>
		case 8:fontpointer=font8;break;
     d88:	ee ea       	ldi	r30, 0xAE	; 174
     d8a:	f5 e0       	ldi	r31, 0x05	; 5
     d8c:	e8 cf       	rjmp	.-48     	; 0xd5e <Write_Char+0x12>
     d8e:	08 95       	ret

00000d90 <Write_String>:
void Write_String(uint8_t fontsize, uint8_t row, uint8_t pos, const char str[]) 
{
     d90:	cf 92       	push	r12
     d92:	df 92       	push	r13
     d94:	ef 92       	push	r14
     d96:	ff 92       	push	r15
     d98:	0f 93       	push	r16
     d9a:	1f 93       	push	r17
     d9c:	cf 93       	push	r28
     d9e:	df 93       	push	r29
     da0:	e8 2e       	mov	r14, r24
     da2:	e9 01       	movw	r28, r18
			Write_Char(fontsize, *str++);
			pos++;
		 }
	}else
	{
		while(*str)
     da4:	88 81       	ld	r24, Y
	if(fontsize==26)
     da6:	9a e1       	ldi	r25, 0x1A	; 26
     da8:	e9 16       	cp	r14, r25
     daa:	b9 f1       	breq	.+110    	; 0xe1a <Write_String+0x8a>
		while(*str)
     dac:	88 23       	and	r24, r24
     dae:	09 f4       	brne	.+2      	; 0xdb2 <Write_String+0x22>
     db0:	74 c0       	rjmp	.+232    	; 0xe9a <Write_String+0x10a>
		{
			Set_Page_Address(7-pos);			//0-7 	(* 8 bit)
			Set_Column_Address(row*fontsize);	//0-3	(* 14 collums / char)
     db2:	e6 9e       	mul	r14, r22
     db4:	60 2d       	mov	r22, r0
     db6:	11 24       	eor	r1, r1
{	 add+=40;
     db8:	68 5d       	subi	r22, 0xD8	; 216
    send_command((0x10|(add>>4)));
     dba:	86 2f       	mov	r24, r22
     dbc:	82 95       	swap	r24
     dbe:	8f 70       	andi	r24, 0x0F	; 15
     dc0:	c8 2e       	mov	r12, r24
     dc2:	68 94       	set
     dc4:	c4 f8       	bld	r12, 4
	send_command((0x0f&add));
     dc6:	6f 70       	andi	r22, 0x0F	; 15
     dc8:	f6 2e       	mov	r15, r22
     dca:	82 2f       	mov	r24, r18
     dcc:	89 5f       	subi	r24, 0xF9	; 249
    add=0xb0|add;
     dce:	d8 2e       	mov	r13, r24
     dd0:	d4 1a       	sub	r13, r20
     dd2:	9d 2d       	mov	r25, r13
     dd4:	9c 1b       	sub	r25, r28
     dd6:	90 6b       	ori	r25, 0xB0	; 176
	DISP_COMM;
     dd8:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     dda:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     ddc:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
     dde:	0d b4       	in	r0, 0x2d	; 45
     de0:	07 fe       	sbrs	r0, 7
     de2:	fd cf       	rjmp	.-6      	; 0xdde <Write_String+0x4e>
	CS_DISP_1;
     de4:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     de6:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     de8:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     dea:	ce bc       	out	0x2e, r12	; 46
	while(!(SPSR0 & (1<<SPIF)));
     dec:	0d b4       	in	r0, 0x2d	; 45
     dee:	07 fe       	sbrs	r0, 7
     df0:	fd cf       	rjmp	.-6      	; 0xdec <Write_String+0x5c>
	CS_DISP_1;
     df2:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     df4:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     df6:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     df8:	fe bc       	out	0x2e, r15	; 46
	while(!(SPSR0 & (1<<SPIF)));
     dfa:	0d b4       	in	r0, 0x2d	; 45
     dfc:	07 fe       	sbrs	r0, 7
     dfe:	fd cf       	rjmp	.-6      	; 0xdfa <Write_String+0x6a>
	CS_DISP_1;
     e00:	28 9a       	sbi	0x05, 0	; 5
			Write_Char(fontsize, *str++);
     e02:	fe 01       	movw	r30, r28
     e04:	61 91       	ld	r22, Z+
     e06:	8f 01       	movw	r16, r30
     e08:	8e 2d       	mov	r24, r14
     e0a:	0e 94 a6 06 	call	0xd4c	; 0xd4c <Write_Char>
		while(*str)
     e0e:	99 81       	ldd	r25, Y+1	; 0x01
     e10:	99 23       	and	r25, r25
     e12:	09 f4       	brne	.+2      	; 0xe16 <Write_String+0x86>
     e14:	42 c0       	rjmp	.+132    	; 0xe9a <Write_String+0x10a>
			Write_Char(fontsize, *str++);
     e16:	e8 01       	movw	r28, r16
     e18:	dc cf       	rjmp	.-72     	; 0xdd2 <Write_String+0x42>
		while(*str)
     e1a:	88 23       	and	r24, r24
     e1c:	09 f4       	brne	.+2      	; 0xe20 <Write_String+0x90>
     e1e:	3d c0       	rjmp	.+122    	; 0xe9a <Write_String+0x10a>
			Set_Column_Address(row*fontsize);	//0-3	(* 14 collums / char)
     e20:	6e 9d       	mul	r22, r14
     e22:	90 2d       	mov	r25, r0
     e24:	11 24       	eor	r1, r1
{	 add+=40;
     e26:	98 5d       	subi	r25, 0xD8	; 216
    send_command((0x10|(add>>4)));
     e28:	59 2f       	mov	r21, r25
     e2a:	52 95       	swap	r21
     e2c:	5f 70       	andi	r21, 0x0F	; 15
     e2e:	50 61       	ori	r21, 0x10	; 16
	send_command((0x0f&add));
     e30:	9f 70       	andi	r25, 0x0F	; 15
     e32:	84 2f       	mov	r24, r20
     e34:	88 0f       	add	r24, r24
     e36:	47 e0       	ldi	r20, 0x07	; 7
     e38:	48 1b       	sub	r20, r24
		send_data(pgm_read_byte(&fontpointer[(n*fontsize)+x]));
     e3a:	6a e1       	ldi	r22, 0x1A	; 26
	DISP_COMM;
     e3c:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     e3e:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     e40:	84 2f       	mov	r24, r20
     e42:	80 6b       	ori	r24, 0xB0	; 176
     e44:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     e46:	0d b4       	in	r0, 0x2d	; 45
     e48:	07 fe       	sbrs	r0, 7
     e4a:	fd cf       	rjmp	.-6      	; 0xe46 <Write_String+0xb6>
	CS_DISP_1;
     e4c:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     e4e:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     e50:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     e52:	5e bd       	out	0x2e, r21	; 46
	while(!(SPSR0 & (1<<SPIF)));
     e54:	0d b4       	in	r0, 0x2d	; 45
     e56:	07 fe       	sbrs	r0, 7
     e58:	fd cf       	rjmp	.-6      	; 0xe54 <Write_String+0xc4>
	CS_DISP_1;
     e5a:	28 9a       	sbi	0x05, 0	; 5
	DISP_COMM;
     e5c:	2a 98       	cbi	0x05, 2	; 5
	CS_DISP_0;
     e5e:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     e60:	9e bd       	out	0x2e, r25	; 46
	while(!(SPSR0 & (1<<SPIF)));
     e62:	0d b4       	in	r0, 0x2d	; 45
     e64:	07 fe       	sbrs	r0, 7
     e66:	fd cf       	rjmp	.-6      	; 0xe62 <Write_String+0xd2>
	CS_DISP_1;
     e68:	28 9a       	sbi	0x05, 0	; 5
	n-=0x20;			//jump to position in asci table
     e6a:	e9 91       	ld	r30, Y+
     e6c:	e0 52       	subi	r30, 0x20	; 32
		send_data(pgm_read_byte(&fontpointer[(n*fontsize)+x]));
     e6e:	e6 9f       	mul	r30, r22
     e70:	f0 01       	movw	r30, r0
     e72:	11 24       	eor	r1, r1
     e74:	9f 01       	movw	r18, r30
     e76:	26 5e       	subi	r18, 0xE6	; 230
     e78:	3f 4f       	sbci	r19, 0xFF	; 255
     e7a:	84 91       	lpm	r24, Z
	DISP_DATA;
     e7c:	2a 9a       	sbi	0x05, 2	; 5
	CS_DISP_0;
     e7e:	28 98       	cbi	0x05, 0	; 5
	SPDR0 = cData;
     e80:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR0 & (1<<SPIF)));
     e82:	0d b4       	in	r0, 0x2d	; 45
     e84:	07 fe       	sbrs	r0, 7
     e86:	fd cf       	rjmp	.-6      	; 0xe82 <Write_String+0xf2>
	CS_DISP_1;
     e88:	28 9a       	sbi	0x05, 0	; 5
	for(x=0;x<fontsize;x++) 
     e8a:	31 96       	adiw	r30, 0x01	; 1
     e8c:	2e 17       	cp	r18, r30
     e8e:	3f 07       	cpc	r19, r31
     e90:	a1 f7       	brne	.-24     	; 0xe7a <Write_String+0xea>
		while(*str)
     e92:	42 50       	subi	r20, 0x02	; 2
     e94:	88 81       	ld	r24, Y
     e96:	81 11       	cpse	r24, r1
     e98:	d1 cf       	rjmp	.-94     	; 0xe3c <Write_String+0xac>
			pos++;
		 }
	}
}
     e9a:	df 91       	pop	r29
     e9c:	cf 91       	pop	r28
     e9e:	1f 91       	pop	r17
     ea0:	0f 91       	pop	r16
     ea2:	ff 90       	pop	r15
     ea4:	ef 90       	pop	r14
     ea6:	df 90       	pop	r13
     ea8:	cf 90       	pop	r12
     eaa:	08 95       	ret

00000eac <__vector_11>:

ISR (TIMER1_COMPA_vect)
{
     eac:	1f 92       	push	r1
     eae:	1f b6       	in	r1, 0x3f	; 63
     eb0:	1f 92       	push	r1
     eb2:	11 24       	eor	r1, r1
     eb4:	8f 93       	push	r24
	
		ms10++;
     eb6:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <ms10>
     eba:	8f 5f       	subi	r24, 0xFF	; 255
     ebc:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <ms10>
		if(entprell)entprell--;
     ec0:	80 91 6f 01 	lds	r24, 0x016F	; 0x80016f <entprell>
     ec4:	88 23       	and	r24, r24
     ec6:	29 f0       	breq	.+10     	; 0xed2 <__vector_11+0x26>
     ec8:	80 91 6f 01 	lds	r24, 0x016F	; 0x80016f <entprell>
     ecc:	81 50       	subi	r24, 0x01	; 1
     ece:	80 93 6f 01 	sts	0x016F, r24	; 0x80016f <entprell>
			
	if(ms10==10)	//100ms
     ed2:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <ms10>
     ed6:	8a 30       	cpi	r24, 0x0A	; 10
     ed8:	39 f4       	brne	.+14     	; 0xee8 <__vector_11+0x3c>
	{
		ms10=0;
     eda:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <ms10>
		ms100++;
     ede:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <ms100>
     ee2:	8f 5f       	subi	r24, 0xFF	; 255
     ee4:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <ms100>
	
		
	}
    if(ms100==10)	//sec
     ee8:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <ms100>
     eec:	8a 30       	cpi	r24, 0x0A	; 10
     eee:	81 f0       	breq	.+32     	; 0xf10 <__vector_11+0x64>
			{
				toggle = 1;
			}else toggle =0;
		}
	}
	if(sec==60)	//Minute
     ef0:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <sec>
     ef4:	8c 33       	cpi	r24, 0x3C	; 60
     ef6:	39 f4       	brne	.+14     	; 0xf06 <__vector_11+0x5a>
	{
		sec=0;
     ef8:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <sec>
		min++;
     efc:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <min>
     f00:	8f 5f       	subi	r24, 0xFF	; 255
     f02:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <min>
	}
}
     f06:	8f 91       	pop	r24
     f08:	1f 90       	pop	r1
     f0a:	1f be       	out	0x3f, r1	; 63
     f0c:	1f 90       	pop	r1
     f0e:	18 95       	reti
		ms100=0;
     f10:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <ms100>
		sec++;
     f14:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <sec>
     f18:	8f 5f       	subi	r24, 0xFF	; 255
     f1a:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <sec>
		screentoggle++;
     f1e:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <screentoggle>
     f22:	8f 5f       	subi	r24, 0xFF	; 255
     f24:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <screentoggle>
		if(screentoggle==TOGGLEMAX)
     f28:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <screentoggle>
     f2c:	84 30       	cpi	r24, 0x04	; 4
     f2e:	01 f7       	brne	.-64     	; 0xef0 <__vector_11+0x44>
			screentoggle=0;
     f30:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <screentoggle>
			if(toggle==0)
     f34:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <toggle>
     f38:	81 11       	cpse	r24, r1
     f3a:	04 c0       	rjmp	.+8      	; 0xf44 <__vector_11+0x98>
				toggle = 1;
     f3c:	81 e0       	ldi	r24, 0x01	; 1
     f3e:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <toggle>
     f42:	d6 cf       	rjmp	.-84     	; 0xef0 <__vector_11+0x44>
			}else toggle =0;
     f44:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <toggle>
     f48:	d3 cf       	rjmp	.-90     	; 0xef0 <__vector_11+0x44>

00000f4a <TWIInit>:
 */

uint8_t TWIInit(void)
{
 /* initialize TWI clock: 100 kHz clock, TWPS = 0 => prescaler = 1 */
  PRR0 =0x00;
     f4a:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__TEXT_REGION_LENGTH__+0x7f8064>
 // TWSR |= (1<<TWPS0);                          /* no prescaler */
 
  
  //set sck to 400khz
	TWSR0 = 0x02;
     f4e:	82 e0       	ldi	r24, 0x02	; 2
     f50:	80 93 b9 00 	sts	0x00B9, r24	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	//TWBR = 0x0C;
	 TWBR0 = ((16000000/400000)-16)/2;  /* (F_CPU / F_TWI) must be > 10 for stable operation */
     f54:	8c e0       	ldi	r24, 0x0C	; 12
     f56:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
	//enable TWI
	TWCR0 = (1<<TWEN);
     f5a:	84 e0       	ldi	r24, 0x04	; 4
     f5c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	return 0;
}
     f60:	80 e0       	ldi	r24, 0x00	; 0
     f62:	08 95       	ret

00000f64 <TWIStart>:
 
uint8_t TWIStart(void)
{
	TWCR0 = ((1<<TWINT) | (1<<TWSTA) | (1<<TWEN));
     f64:	84 ea       	ldi	r24, 0xA4	; 164
     f66:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while((TWCR0 & (1<<TWINT)) == 0);
     f6a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     f6e:	87 ff       	sbrs	r24, 7
     f70:	fc cf       	rjmp	.-8      	; 0xf6a <TWIStart+0x6>
	return 0;
}
     f72:	80 e0       	ldi	r24, 0x00	; 0
     f74:	08 95       	ret

00000f76 <TWIStop>:

uint8_t TWIStop(void)
{
	TWCR0 = ((1<<TWINT) | (1<<TWSTO) | (1<<TWEN));
     f76:	84 e9       	ldi	r24, 0x94	; 148
     f78:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	return 0;
} 
     f7c:	80 e0       	ldi	r24, 0x00	; 0
     f7e:	08 95       	ret

00000f80 <TWIWrite>:

uint8_t TWIWrite(uint8_t u8data)
{
	TWDR0 = u8data;
     f80:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR0 = ((1<<TWINT) | (1<<TWEN));
     f84:	84 e8       	ldi	r24, 0x84	; 132
     f86:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while((TWCR0 & (1<<TWINT)) == 0);
     f8a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     f8e:	87 ff       	sbrs	r24, 7
     f90:	fc cf       	rjmp	.-8      	; 0xf8a <TWIWrite+0xa>
	return 0;
}
     f92:	80 e0       	ldi	r24, 0x00	; 0
     f94:	08 95       	ret

00000f96 <TWIReadACK>:

uint8_t TWIReadACK(void)
{
	TWCR0 = ((1<<TWINT) | (1<<TWEN) | (1<<TWEA));
     f96:	84 ec       	ldi	r24, 0xC4	; 196
     f98:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while((TWCR0 & (1<<TWINT)) == 0);
     f9c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     fa0:	87 ff       	sbrs	r24, 7
     fa2:	fc cf       	rjmp	.-8      	; 0xf9c <TWIReadACK+0x6>
	return TWDR0;
     fa4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	return 0;
}
     fa8:	08 95       	ret

00000faa <TWIReadNACK>:

uint8_t TWIReadNACK(void)
{
	TWCR0 = ((1<<TWINT) | (1<<TWEN));
     faa:	84 e8       	ldi	r24, 0x84	; 132
     fac:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while((TWCR0 & (1<<TWINT)) == 0);
     fb0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     fb4:	87 ff       	sbrs	r24, 7
     fb6:	fc cf       	rjmp	.-8      	; 0xfb0 <TWIReadNACK+0x6>
	return TWDR0;
     fb8:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	return 0;
}
     fbc:	08 95       	ret

00000fbe <TWIGetStatus>:
	 *  0x38   Arbitration in SLA+W lost
	 */
	 
	uint8_t status;
	//mask status
	status = TWSR0 & 0xF8;
     fbe:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	return status;
}
     fc2:	88 7f       	andi	r24, 0xF8	; 248
     fc4:	08 95       	ret

00000fc6 <sht21_init>:
uint8_t sht21_init(void)
{
	/*	
	 * Softreset Sensor
	 */
	TWIStart();
     fc6:	0e 94 b2 07 	call	0xf64	; 0xf64 <TWIStart>
	if(TWIGetStatus() != 0x08)return 1; 
     fca:	0e 94 df 07 	call	0xfbe	; 0xfbe <TWIGetStatus>
     fce:	88 30       	cpi	r24, 0x08	; 8
     fd0:	11 f0       	breq	.+4      	; 0xfd6 <sht21_init+0x10>
     fd2:	81 e0       	ldi	r24, 0x01	; 1
     fd4:	08 95       	ret
	TWIWrite(SHT21_W);
     fd6:	80 e8       	ldi	r24, 0x80	; 128
     fd8:	0e 94 c0 07 	call	0xf80	; 0xf80 <TWIWrite>
	if(TWIGetStatus() != 0x18)return 2;
     fdc:	0e 94 df 07 	call	0xfbe	; 0xfbe <TWIGetStatus>
     fe0:	88 31       	cpi	r24, 0x18	; 24
     fe2:	11 f0       	breq	.+4      	; 0xfe8 <sht21_init+0x22>
     fe4:	82 e0       	ldi	r24, 0x02	; 2
     fe6:	08 95       	ret
	TWIWrite(SHT21_SOFTRESET);
     fe8:	8e ef       	ldi	r24, 0xFE	; 254
     fea:	0e 94 c0 07 	call	0xf80	; 0xf80 <TWIWrite>
	if(TWIGetStatus() != 0x28)return 3;
     fee:	0e 94 df 07 	call	0xfbe	; 0xfbe <TWIGetStatus>
     ff2:	88 32       	cpi	r24, 0x28	; 40
     ff4:	41 f4       	brne	.+16     	; 0x1006 <sht21_init+0x40>
	TWIStop();
     ff6:	0e 94 bb 07 	call	0xf76	; 0xf76 <TWIStop>
     ffa:	80 e3       	ldi	r24, 0x30	; 48
     ffc:	95 e7       	ldi	r25, 0x75	; 117
     ffe:	01 97       	sbiw	r24, 0x01	; 1
    1000:	f1 f7       	brne	.-4      	; 0xffe <sht21_init+0x38>
	_delay_ms(15);	//Startuptime after Reset <15ms (Datasheet)
	return 0;
    1002:	80 e0       	ldi	r24, 0x00	; 0
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
}
    1004:	08 95       	ret
	if(TWIGetStatus() != 0x28)return 3;
    1006:	83 e0       	ldi	r24, 0x03	; 3
}
    1008:	08 95       	ret

0000100a <sht21_measure>:

uint16_t sht21_measure(uint8_t measure_mode)
{
    100a:	cf 93       	push	r28
    100c:	df 93       	push	r29
    100e:	00 d0       	rcall	.+0      	; 0x1010 <sht21_measure+0x6>
    1010:	00 d0       	rcall	.+0      	; 0x1012 <sht21_measure+0x8>
    1012:	0f 92       	push	r0
    1014:	cd b7       	in	r28, 0x3d	; 61
    1016:	de b7       	in	r29, 0x3e	; 62
    1018:	89 83       	std	Y+1, r24	; 0x01
	checksum = 0;
	messwert=0;
	rueckgabewert=0;
	crc=0;
		
	TWIStart();							//start TWI
    101a:	0e 94 b2 07 	call	0xf64	; 0xf64 <TWIStart>
	if(TWIGetStatus() != 0x08)return 4; //kontrolle ob erfolgreich sonst Abbruch mit Error Code
    101e:	0e 94 df 07 	call	0xfbe	; 0xfbe <TWIGetStatus>
    1022:	88 30       	cpi	r24, 0x08	; 8
    1024:	51 f0       	breq	.+20     	; 0x103a <sht21_measure+0x30>
    1026:	84 e0       	ldi	r24, 0x04	; 4
    1028:	90 e0       	ldi	r25, 0x00	; 0
		messwert=(bit_h<<8)|bit_l;						//8 bit werte zu 16bit Wert zusammensetzen
		messwert &= ~0x003;								//Loescht letzte 2 Bits (Status Bits)
		rueckgabewert = 100*(-46.85 + 175.72/65536 * (ft)messwert);	//Berechnung Tempreatur
	
		return rueckgabewert;	
}//End of SHT21_read_temp
    102a:	0f 90       	pop	r0
    102c:	0f 90       	pop	r0
    102e:	0f 90       	pop	r0
    1030:	0f 90       	pop	r0
    1032:	0f 90       	pop	r0
    1034:	df 91       	pop	r29
    1036:	cf 91       	pop	r28
    1038:	08 95       	ret
	TWIWrite(SHT21_W);					//Adresse und Schreiben
    103a:	80 e8       	ldi	r24, 0x80	; 128
    103c:	0e 94 c0 07 	call	0xf80	; 0xf80 <TWIWrite>
	if(TWIGetStatus() != 0x18)return 5;	//kontrolle ob erfolgreich sonst Abbruch mit Error Code
    1040:	0e 94 df 07 	call	0xfbe	; 0xfbe <TWIGetStatus>
    1044:	88 31       	cpi	r24, 0x18	; 24
    1046:	e1 f5       	brne	.+120    	; 0x10c0 <sht21_measure+0xb6>
	switch(measure_mode)
    1048:	29 81       	ldd	r18, Y+1	; 0x01
    104a:	22 23       	and	r18, r18
    104c:	09 f4       	brne	.+2      	; 0x1050 <sht21_measure+0x46>
    104e:	42 c0       	rjmp	.+132    	; 0x10d4 <sht21_measure+0xca>
    1050:	21 30       	cpi	r18, 0x01	; 1
    1052:	d9 f0       	breq	.+54     	; 0x108a <sht21_measure+0x80>
	if(TWIGetStatus() != 0x28)return 6;	//kontrolle ob erfolgreich sonst Abbruch mit Error Code
    1054:	0e 94 df 07 	call	0xfbe	; 0xfbe <TWIGetStatus>
    1058:	88 32       	cpi	r24, 0x28	; 40
    105a:	f1 f4       	brne	.+60     	; 0x1098 <sht21_measure+0x8e>
	DDRC &= ~(1<<PC5);					//set SCL as Input
    105c:	3d 98       	cbi	0x07, 5	; 7
	while(!(PINC &= ~(1<<PC5)));		//wait to end conversion (Master hold mode)
    105e:	86 b1       	in	r24, 0x06	; 6
    1060:	8f 7d       	andi	r24, 0xDF	; 223
    1062:	86 b9       	out	0x06, r24	; 6
    1064:	88 23       	and	r24, r24
    1066:	d9 f3       	breq	.-10     	; 0x105e <sht21_measure+0x54>
	DDRC |= (1<<PC5);					//set SCL as Output
    1068:	3d 9a       	sbi	0x07, 5	; 7
	TWIStart();							//restart TWI
    106a:	0e 94 b2 07 	call	0xf64	; 0xf64 <TWIStart>
	if(TWIGetStatus() != 0x10)return 7; //kontrolle ob erfolgreich sonst Abbruch mit Error Code
    106e:	0e 94 df 07 	call	0xfbe	; 0xfbe <TWIGetStatus>
    1072:	80 31       	cpi	r24, 0x10	; 16
    1074:	d9 f0       	breq	.+54     	; 0x10ac <sht21_measure+0xa2>
    1076:	87 e0       	ldi	r24, 0x07	; 7
    1078:	90 e0       	ldi	r25, 0x00	; 0
}//End of SHT21_read_temp
    107a:	0f 90       	pop	r0
    107c:	0f 90       	pop	r0
    107e:	0f 90       	pop	r0
    1080:	0f 90       	pop	r0
    1082:	0f 90       	pop	r0
    1084:	df 91       	pop	r29
    1086:	cf 91       	pop	r28
    1088:	08 95       	ret
		case RH_HOLD:	TWIWrite(SHT21_HUM_HOLDMASTER);break;	//Modus = Temperatur master hold = on
    108a:	83 ef       	ldi	r24, 0xF3	; 243
    108c:	0e 94 c0 07 	call	0xf80	; 0xf80 <TWIWrite>
	if(TWIGetStatus() != 0x28)return 6;	//kontrolle ob erfolgreich sonst Abbruch mit Error Code
    1090:	0e 94 df 07 	call	0xfbe	; 0xfbe <TWIGetStatus>
    1094:	88 32       	cpi	r24, 0x28	; 40
    1096:	11 f3       	breq	.-60     	; 0x105c <sht21_measure+0x52>
    1098:	86 e0       	ldi	r24, 0x06	; 6
    109a:	90 e0       	ldi	r25, 0x00	; 0
}//End of SHT21_read_temp
    109c:	0f 90       	pop	r0
    109e:	0f 90       	pop	r0
    10a0:	0f 90       	pop	r0
    10a2:	0f 90       	pop	r0
    10a4:	0f 90       	pop	r0
    10a6:	df 91       	pop	r29
    10a8:	cf 91       	pop	r28
    10aa:	08 95       	ret
	TWIWrite(SHT21_R);					//Adresse und lesen
    10ac:	81 e8       	ldi	r24, 0x81	; 129
    10ae:	0e 94 c0 07 	call	0xf80	; 0xf80 <TWIWrite>
	if(TWIGetStatus() != 0x40)return 8;	//kontrolle ob erfolgreich sonst Abbruch mit Error Code
    10b2:	0e 94 df 07 	call	0xfbe	; 0xfbe <TWIGetStatus>
    10b6:	80 34       	cpi	r24, 0x40	; 64
    10b8:	89 f0       	breq	.+34     	; 0x10dc <sht21_measure+0xd2>
    10ba:	88 e0       	ldi	r24, 0x08	; 8
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	b5 cf       	rjmp	.-150    	; 0x102a <sht21_measure+0x20>
	if(TWIGetStatus() != 0x18)return 5;	//kontrolle ob erfolgreich sonst Abbruch mit Error Code
    10c0:	85 e0       	ldi	r24, 0x05	; 5
    10c2:	90 e0       	ldi	r25, 0x00	; 0
}//End of SHT21_read_temp
    10c4:	0f 90       	pop	r0
    10c6:	0f 90       	pop	r0
    10c8:	0f 90       	pop	r0
    10ca:	0f 90       	pop	r0
    10cc:	0f 90       	pop	r0
    10ce:	df 91       	pop	r29
    10d0:	cf 91       	pop	r28
    10d2:	08 95       	ret
		case T_HOLD:	TWIWrite(SHT21_TEMP_HOLDMASTER);break;	//Modus = Temperatur master hold = on
    10d4:	83 ee       	ldi	r24, 0xE3	; 227
    10d6:	0e 94 c0 07 	call	0xf80	; 0xf80 <TWIWrite>
    10da:	bc cf       	rjmp	.-136    	; 0x1054 <sht21_measure+0x4a>
	bit_h = TWIReadACK();				//empfange MSB
    10dc:	0e 94 cb 07 	call	0xf96	; 0xf96 <TWIReadACK>
    10e0:	8d 83       	std	Y+5, r24	; 0x05
	if(TWIGetStatus() != 0x50)return 9;	//kontrolle ob erfolgreich sonst Abbruch mit Error Code
    10e2:	0e 94 df 07 	call	0xfbe	; 0xfbe <TWIGetStatus>
    10e6:	80 35       	cpi	r24, 0x50	; 80
    10e8:	09 f0       	breq	.+2      	; 0x10ec <sht21_measure+0xe2>
    10ea:	4b c0       	rjmp	.+150    	; 0x1182 <sht21_measure+0x178>
	bit_l = TWIReadNACK();				//empfange LSB / durch NACK wird checksumme nicht empfangen
    10ec:	0e 94 d5 07 	call	0xfaa	; 0xfaa <TWIReadNACK>
    10f0:	89 83       	std	Y+1, r24	; 0x01
	TWIStop();							//schliesse TWI
    10f2:	0e 94 bb 07 	call	0xf76	; 0xf76 <TWIStop>
		messwert=(bit_h<<8)|bit_l;						//8 bit werte zu 16bit Wert zusammensetzen
    10f6:	3d 81       	ldd	r19, Y+5	; 0x05
    10f8:	49 81       	ldd	r20, Y+1	; 0x01
    10fa:	93 2f       	mov	r25, r19
    10fc:	84 2f       	mov	r24, r20
		messwert &= ~0x003;								//Loescht letzte 2 Bits (Status Bits)
    10fe:	8c 7f       	andi	r24, 0xFC	; 252
		rueckgabewert = 100*(-46.85 + 175.72/65536 * (ft)messwert);	//Berechnung Tempreatur
    1100:	9c 01       	movw	r18, r24
    1102:	50 e0       	ldi	r21, 0x00	; 0
    1104:	40 e0       	ldi	r20, 0x00	; 0
    1106:	29 83       	std	Y+1, r18	; 0x01
    1108:	3a 83       	std	Y+2, r19	; 0x02
    110a:	4b 83       	std	Y+3, r20	; 0x03
    110c:	5c 83       	std	Y+4, r21	; 0x04
    110e:	ca 01       	movw	r24, r20
    1110:	b9 01       	movw	r22, r18
    1112:	0e 94 40 0a 	call	0x1480	; 0x1480 <__floatunsisf>
    1116:	22 e5       	ldi	r18, 0x52	; 82
    1118:	38 eb       	ldi	r19, 0xB8	; 184
    111a:	4f e2       	ldi	r20, 0x2F	; 47
    111c:	5b e3       	ldi	r21, 0x3B	; 59
    111e:	69 83       	std	Y+1, r22	; 0x01
    1120:	7a 83       	std	Y+2, r23	; 0x02
    1122:	8b 83       	std	Y+3, r24	; 0x03
    1124:	9c 83       	std	Y+4, r25	; 0x04
    1126:	69 81       	ldd	r22, Y+1	; 0x01
    1128:	7a 81       	ldd	r23, Y+2	; 0x02
    112a:	8b 81       	ldd	r24, Y+3	; 0x03
    112c:	9c 81       	ldd	r25, Y+4	; 0x04
    112e:	0e 94 ce 0a 	call	0x159c	; 0x159c <__mulsf3>
    1132:	26 e6       	ldi	r18, 0x66	; 102
    1134:	36 e6       	ldi	r19, 0x66	; 102
    1136:	4b e3       	ldi	r20, 0x3B	; 59
    1138:	52 e4       	ldi	r21, 0x42	; 66
    113a:	69 83       	std	Y+1, r22	; 0x01
    113c:	7a 83       	std	Y+2, r23	; 0x02
    113e:	8b 83       	std	Y+3, r24	; 0x03
    1140:	9c 83       	std	Y+4, r25	; 0x04
    1142:	69 81       	ldd	r22, Y+1	; 0x01
    1144:	7a 81       	ldd	r23, Y+2	; 0x02
    1146:	8b 81       	ldd	r24, Y+3	; 0x03
    1148:	9c 81       	ldd	r25, Y+4	; 0x04
    114a:	0e 94 a4 09 	call	0x1348	; 0x1348 <__subsf3>
    114e:	20 e0       	ldi	r18, 0x00	; 0
    1150:	30 e0       	ldi	r19, 0x00	; 0
    1152:	48 ec       	ldi	r20, 0xC8	; 200
    1154:	52 e4       	ldi	r21, 0x42	; 66
    1156:	69 83       	std	Y+1, r22	; 0x01
    1158:	7a 83       	std	Y+2, r23	; 0x02
    115a:	8b 83       	std	Y+3, r24	; 0x03
    115c:	9c 83       	std	Y+4, r25	; 0x04
    115e:	69 81       	ldd	r22, Y+1	; 0x01
    1160:	7a 81       	ldd	r23, Y+2	; 0x02
    1162:	8b 81       	ldd	r24, Y+3	; 0x03
    1164:	9c 81       	ldd	r25, Y+4	; 0x04
    1166:	0e 94 ce 0a 	call	0x159c	; 0x159c <__mulsf3>
    116a:	69 83       	std	Y+1, r22	; 0x01
    116c:	7a 83       	std	Y+2, r23	; 0x02
    116e:	8b 83       	std	Y+3, r24	; 0x03
    1170:	9c 83       	std	Y+4, r25	; 0x04
    1172:	69 81       	ldd	r22, Y+1	; 0x01
    1174:	7a 81       	ldd	r23, Y+2	; 0x02
    1176:	8b 81       	ldd	r24, Y+3	; 0x03
    1178:	9c 81       	ldd	r25, Y+4	; 0x04
    117a:	0e 94 11 0a 	call	0x1422	; 0x1422 <__fixunssfsi>
    117e:	cb 01       	movw	r24, r22
		return rueckgabewert;	
    1180:	54 cf       	rjmp	.-344    	; 0x102a <sht21_measure+0x20>
	if(TWIGetStatus() != 0x50)return 9;	//kontrolle ob erfolgreich sonst Abbruch mit Error Code
    1182:	89 e0       	ldi	r24, 0x09	; 9
    1184:	90 e0       	ldi	r25, 0x00	; 0
    1186:	51 cf       	rjmp	.-350    	; 0x102a <sht21_measure+0x20>

00001188 <main>:
	DDRB 	|= (1<<PB0) | (1<<PB1) | (1<<PB2) | (1<<PB3) | (1<<PB5);//set CS_DISP and RES and D/C output
    1188:	84 b1       	in	r24, 0x04	; 4
    118a:	8f 62       	ori	r24, 0x2F	; 47
    118c:	84 b9       	out	0x04, r24	; 4
	PORTB	|= (1<<PB0) | (1<<PB1) | (1<<PB2) | (1<<PB3) | (1<<PB5);//set CS_DISP and RES and D/C high
    118e:	85 b1       	in	r24, 0x05	; 5
    1190:	8f 62       	ori	r24, 0x2F	; 47
    1192:	85 b9       	out	0x05, r24	; 5
	DDRC |= (1<<PC5);	//SCL
    1194:	3d 9a       	sbi	0x07, 5	; 7
	PORTC |= (1<<PC5);
    1196:	45 9a       	sbi	0x08, 5	; 8
	PORTC &= ~(1<<PC5);
    1198:	45 98       	cbi	0x08, 5	; 8
	DDRD &= ~(1<<PD3);	//Button
    119a:	53 98       	cbi	0x0a, 3	; 10
	PORTD |= (1<<PD3);	//activate Pullup
    119c:	5b 9a       	sbi	0x0b, 3	; 11
	SPCR0 = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
    119e:	81 e5       	ldi	r24, 0x51	; 81
    11a0:	8c bd       	out	0x2c, r24	; 44
	OCR1A = 1249;	//OCR1A = 0x3D08;==1sec
    11a2:	81 ee       	ldi	r24, 0xE1	; 225
    11a4:	94 e0       	ldi	r25, 0x04	; 4
    11a6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
    11aa:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
    TCCR1B |= (1 << WGM12);
    11ae:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    11b2:	88 60       	ori	r24, 0x08	; 8
    11b4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    TIMSK1 |= (1 << OCIE1A);
    11b8:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    11bc:	82 60       	ori	r24, 0x02	; 2
    11be:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
    TCCR1B |= (1 << CS11) | (1 << CS10);
    11c2:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    11c6:	83 60       	ori	r24, 0x03	; 3
    11c8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
    sei();
    11cc:	78 94       	sei
    ms10=0;
    11ce:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <ms10>
    ms100=0;
    11d2:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <ms100>
    sec=0;
    11d6:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <sec>
    min=0;
    11da:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <min>
    entprell=0;
    11de:	10 92 6f 01 	sts	0x016F, r1	; 0x80016f <entprell>
    screentoggle=3;
    11e2:	83 e0       	ldi	r24, 0x03	; 3
    11e4:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <screentoggle>
    toggle=0;
    11e8:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <toggle>
    toggle_alt=toggle;
    11ec:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <toggle>
    11f0:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <toggle_alt>
	Display_Init();
    11f4:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <Display_Init>
	Display_Clear();
    11f8:	0e 94 9a 05 	call	0xb34	; 0xb34 <Display_Clear>
    send_command(add);
    11fc:	80 eb       	ldi	r24, 0xB0	; 176
    11fe:	0e 94 32 05 	call	0xa64	; 0xa64 <send_command>
    send_command((0x10|(add>>4)));
    1202:	82 e1       	ldi	r24, 0x12	; 18
    1204:	0e 94 32 05 	call	0xa64	; 0xa64 <send_command>
	send_command((0x0f&add));
    1208:	88 e0       	ldi	r24, 0x08	; 8
    120a:	0e 94 32 05 	call	0xa64	; 0xa64 <send_command>
    TWIInit();
    120e:	0e 94 a5 07 	call	0xf4a	; 0xf4a <TWIInit>
	sht21_init();
    1212:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <sht21_init>
   state = MEASURE;
    1216:	82 e0       	ldi	r24, 0x02	; 2
    1218:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <state>
								state=MEASURE;
    121c:	92 e0       	ldi	r25, 0x02	; 2
    121e:	e9 2e       	mov	r14, r25
								entprell=RELOAD_ENTPRELL;
    1220:	28 e2       	ldi	r18, 0x28	; 40
    1222:	f2 2e       	mov	r15, r18
							sprintf(buffer,"T: %d*",temp);
    1224:	01 e5       	ldi	r16, 0x51	; 81
    1226:	11 e0       	ldi	r17, 0x01	; 1
    1228:	c8 e5       	ldi	r28, 0x58	; 88
    122a:	d1 e0       	ldi	r29, 0x01	; 1
		switch(state)
    122c:	81 30       	cpi	r24, 0x01	; 1
    122e:	51 f1       	breq	.+84     	; 0x1284 <main+0xfc>
    1230:	82 30       	cpi	r24, 0x02	; 2
    1232:	09 f4       	brne	.+2      	; 0x1236 <main+0xae>
    1234:	42 c0       	rjmp	.+132    	; 0x12ba <main+0x132>
    1236:	81 11       	cpse	r24, r1
    1238:	f9 cf       	rjmp	.-14     	; 0x122c <main+0xa4>
			case GREETER:	if(BUTTON)
    123a:	4b 99       	sbic	0x09, 3	; 9
    123c:	05 c0       	rjmp	.+10     	; 0x1248 <main+0xc0>
    123e:	80 91 6f 01 	lds	r24, 0x016F	; 0x80016f <entprell>
    1242:	88 23       	and	r24, r24
    1244:	09 f4       	brne	.+2      	; 0x1248 <main+0xc0>
    1246:	65 c0       	rjmp	.+202    	; 0x1312 <main+0x18a>
							if(toggle)
    1248:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <toggle>
    124c:	88 23       	and	r24, r24
    124e:	09 f4       	brne	.+2      	; 0x1252 <main+0xca>
    1250:	4f c0       	rjmp	.+158    	; 0x12f0 <main+0x168>
									Write_String(14,0,0,"If found");
    1252:	2b e1       	ldi	r18, 0x1B	; 27
    1254:	31 e0       	ldi	r19, 0x01	; 1
    1256:	40 e0       	ldi	r20, 0x00	; 0
    1258:	60 e0       	ldi	r22, 0x00	; 0
    125a:	8e e0       	ldi	r24, 0x0E	; 14
    125c:	0e 94 c8 06 	call	0xd90	; 0xd90 <Write_String>
									Write_String(14,1,0,"please  ");
    1260:	24 e2       	ldi	r18, 0x24	; 36
    1262:	31 e0       	ldi	r19, 0x01	; 1
    1264:	40 e0       	ldi	r20, 0x00	; 0
    1266:	61 e0       	ldi	r22, 0x01	; 1
    1268:	8e e0       	ldi	r24, 0x0E	; 14
    126a:	0e 94 c8 06 	call	0xd90	; 0xd90 <Write_String>
									Write_String(14,2,0, "contact ");
    126e:	2d e2       	ldi	r18, 0x2D	; 45
    1270:	31 e0       	ldi	r19, 0x01	; 1
								Write_String(14,2,0, "  ZERO  ");
    1272:	40 e0       	ldi	r20, 0x00	; 0
    1274:	62 e0       	ldi	r22, 0x02	; 2
    1276:	8e e0       	ldi	r24, 0x0E	; 14
    1278:	0e 94 c8 06 	call	0xd90	; 0xd90 <Write_String>
		switch(state)
    127c:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <state>
    1280:	81 30       	cpi	r24, 0x01	; 1
    1282:	b1 f6       	brne	.-84     	; 0x1230 <main+0xa8>
			case ZERO:		if(BUTTON)
    1284:	4b 99       	sbic	0x09, 3	; 9
    1286:	fe cf       	rjmp	.-4      	; 0x1284 <main+0xfc>
    1288:	80 91 6f 01 	lds	r24, 0x016F	; 0x80016f <entprell>
    128c:	81 11       	cpse	r24, r1
    128e:	fa cf       	rjmp	.-12     	; 0x1284 <main+0xfc>
								state=MEASURE;
    1290:	e0 92 74 01 	sts	0x0174, r14	; 0x800174 <state>
								entprell=RELOAD_ENTPRELL;
    1294:	f0 92 6f 01 	sts	0x016F, r15	; 0x80016f <entprell>
								Write_String(14,0,0," Button ");
    1298:	20 e0       	ldi	r18, 0x00	; 0
    129a:	31 e0       	ldi	r19, 0x01	; 1
    129c:	40 e0       	ldi	r20, 0x00	; 0
    129e:	60 e0       	ldi	r22, 0x00	; 0
    12a0:	8e e0       	ldi	r24, 0x0E	; 14
    12a2:	0e 94 c8 06 	call	0xd90	; 0xd90 <Write_String>
								Write_String(14,1,0,"   to   ");
    12a6:	29 e0       	ldi	r18, 0x09	; 9
    12a8:	31 e0       	ldi	r19, 0x01	; 1
    12aa:	40 e0       	ldi	r20, 0x00	; 0
    12ac:	61 e0       	ldi	r22, 0x01	; 1
    12ae:	8e e0       	ldi	r24, 0x0E	; 14
    12b0:	0e 94 c8 06 	call	0xd90	; 0xd90 <Write_String>
								Write_String(14,2,0, "  ZERO  ");
    12b4:	22 e1       	ldi	r18, 0x12	; 18
    12b6:	31 e0       	ldi	r19, 0x01	; 1
    12b8:	dc cf       	rjmp	.-72     	; 0x1272 <main+0xea>
			case MEASURE:	temp = (sht21_measure(0));
    12ba:	80 e0       	ldi	r24, 0x00	; 0
    12bc:	0e 94 05 08 	call	0x100a	; 0x100a <sht21_measure>
							sprintf(buffer,"T: %d*",temp);
    12c0:	9f 93       	push	r25
    12c2:	8f 93       	push	r24
    12c4:	1f 93       	push	r17
    12c6:	0f 93       	push	r16
    12c8:	df 93       	push	r29
    12ca:	cf 93       	push	r28
    12cc:	0e 94 3b 0b 	call	0x1676	; 0x1676 <sprintf>
							Write_String(14,0,0,buffer);
    12d0:	28 e5       	ldi	r18, 0x58	; 88
    12d2:	31 e0       	ldi	r19, 0x01	; 1
    12d4:	40 e0       	ldi	r20, 0x00	; 0
    12d6:	60 e0       	ldi	r22, 0x00	; 0
    12d8:	8e e0       	ldi	r24, 0x0E	; 14
    12da:	0e 94 c8 06 	call	0xd90	; 0xd90 <Write_String>
		switch(state)
    12de:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <state>
							break;
    12e2:	0f 90       	pop	r0
    12e4:	0f 90       	pop	r0
    12e6:	0f 90       	pop	r0
    12e8:	0f 90       	pop	r0
    12ea:	0f 90       	pop	r0
    12ec:	0f 90       	pop	r0
    12ee:	9e cf       	rjmp	.-196    	; 0x122c <main+0xa4>
									Write_String(14,0,0,"rgroener");
    12f0:	26 e3       	ldi	r18, 0x36	; 54
    12f2:	31 e0       	ldi	r19, 0x01	; 1
    12f4:	40 e0       	ldi	r20, 0x00	; 0
    12f6:	60 e0       	ldi	r22, 0x00	; 0
    12f8:	8e e0       	ldi	r24, 0x0E	; 14
    12fa:	0e 94 c8 06 	call	0xd90	; 0xd90 <Write_String>
									Write_String(14,1,0,"@mailbox");
    12fe:	2f e3       	ldi	r18, 0x3F	; 63
    1300:	31 e0       	ldi	r19, 0x01	; 1
    1302:	40 e0       	ldi	r20, 0x00	; 0
    1304:	61 e0       	ldi	r22, 0x01	; 1
    1306:	8e e0       	ldi	r24, 0x0E	; 14
    1308:	0e 94 c8 06 	call	0xd90	; 0xd90 <Write_String>
									Write_String(14,2,0, ".org    ");	
    130c:	28 e4       	ldi	r18, 0x48	; 72
    130e:	31 e0       	ldi	r19, 0x01	; 1
    1310:	b0 cf       	rjmp	.-160    	; 0x1272 <main+0xea>
								state=ZERO;
    1312:	81 e0       	ldi	r24, 0x01	; 1
    1314:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <state>
								entprell=RELOAD_ENTPRELL;
    1318:	f0 92 6f 01 	sts	0x016F, r15	; 0x80016f <entprell>
								Write_String(14,0,0," Button ");
    131c:	20 e0       	ldi	r18, 0x00	; 0
    131e:	31 e0       	ldi	r19, 0x01	; 1
    1320:	40 e0       	ldi	r20, 0x00	; 0
    1322:	60 e0       	ldi	r22, 0x00	; 0
    1324:	8e e0       	ldi	r24, 0x0E	; 14
    1326:	0e 94 c8 06 	call	0xd90	; 0xd90 <Write_String>
								Write_String(14,1,0,"   to   ");
    132a:	29 e0       	ldi	r18, 0x09	; 9
    132c:	31 e0       	ldi	r19, 0x01	; 1
    132e:	40 e0       	ldi	r20, 0x00	; 0
    1330:	61 e0       	ldi	r22, 0x01	; 1
    1332:	8e e0       	ldi	r24, 0x0E	; 14
    1334:	0e 94 c8 06 	call	0xd90	; 0xd90 <Write_String>
								Write_String(14,2,0, "  ZERO  ");
    1338:	22 e1       	ldi	r18, 0x12	; 18
    133a:	31 e0       	ldi	r19, 0x01	; 1
    133c:	40 e0       	ldi	r20, 0x00	; 0
    133e:	62 e0       	ldi	r22, 0x02	; 2
    1340:	8e e0       	ldi	r24, 0x0E	; 14
    1342:	0e 94 c8 06 	call	0xd90	; 0xd90 <Write_String>
    1346:	80 cf       	rjmp	.-256    	; 0x1248 <main+0xc0>

00001348 <__subsf3>:
    1348:	50 58       	subi	r21, 0x80	; 128

0000134a <__addsf3>:
    134a:	bb 27       	eor	r27, r27
    134c:	aa 27       	eor	r26, r26
    134e:	0e 94 bc 09 	call	0x1378	; 0x1378 <__addsf3x>
    1352:	0c 94 94 0a 	jmp	0x1528	; 0x1528 <__fp_round>
    1356:	0e 94 86 0a 	call	0x150c	; 0x150c <__fp_pscA>
    135a:	38 f0       	brcs	.+14     	; 0x136a <__addsf3+0x20>
    135c:	0e 94 8d 0a 	call	0x151a	; 0x151a <__fp_pscB>
    1360:	20 f0       	brcs	.+8      	; 0x136a <__addsf3+0x20>
    1362:	39 f4       	brne	.+14     	; 0x1372 <__addsf3+0x28>
    1364:	9f 3f       	cpi	r25, 0xFF	; 255
    1366:	19 f4       	brne	.+6      	; 0x136e <__addsf3+0x24>
    1368:	26 f4       	brtc	.+8      	; 0x1372 <__addsf3+0x28>
    136a:	0c 94 83 0a 	jmp	0x1506	; 0x1506 <__fp_nan>
    136e:	0e f4       	brtc	.+2      	; 0x1372 <__addsf3+0x28>
    1370:	e0 95       	com	r30
    1372:	e7 fb       	bst	r30, 7
    1374:	0c 94 7d 0a 	jmp	0x14fa	; 0x14fa <__fp_inf>

00001378 <__addsf3x>:
    1378:	e9 2f       	mov	r30, r25
    137a:	0e 94 a5 0a 	call	0x154a	; 0x154a <__fp_split3>
    137e:	58 f3       	brcs	.-42     	; 0x1356 <__addsf3+0xc>
    1380:	ba 17       	cp	r27, r26
    1382:	62 07       	cpc	r22, r18
    1384:	73 07       	cpc	r23, r19
    1386:	84 07       	cpc	r24, r20
    1388:	95 07       	cpc	r25, r21
    138a:	20 f0       	brcs	.+8      	; 0x1394 <__addsf3x+0x1c>
    138c:	79 f4       	brne	.+30     	; 0x13ac <__addsf3x+0x34>
    138e:	a6 f5       	brtc	.+104    	; 0x13f8 <__addsf3x+0x80>
    1390:	0c 94 c7 0a 	jmp	0x158e	; 0x158e <__fp_zero>
    1394:	0e f4       	brtc	.+2      	; 0x1398 <__addsf3x+0x20>
    1396:	e0 95       	com	r30
    1398:	0b 2e       	mov	r0, r27
    139a:	ba 2f       	mov	r27, r26
    139c:	a0 2d       	mov	r26, r0
    139e:	0b 01       	movw	r0, r22
    13a0:	b9 01       	movw	r22, r18
    13a2:	90 01       	movw	r18, r0
    13a4:	0c 01       	movw	r0, r24
    13a6:	ca 01       	movw	r24, r20
    13a8:	a0 01       	movw	r20, r0
    13aa:	11 24       	eor	r1, r1
    13ac:	ff 27       	eor	r31, r31
    13ae:	59 1b       	sub	r21, r25
    13b0:	99 f0       	breq	.+38     	; 0x13d8 <__addsf3x+0x60>
    13b2:	59 3f       	cpi	r21, 0xF9	; 249
    13b4:	50 f4       	brcc	.+20     	; 0x13ca <__addsf3x+0x52>
    13b6:	50 3e       	cpi	r21, 0xE0	; 224
    13b8:	68 f1       	brcs	.+90     	; 0x1414 <__addsf3x+0x9c>
    13ba:	1a 16       	cp	r1, r26
    13bc:	f0 40       	sbci	r31, 0x00	; 0
    13be:	a2 2f       	mov	r26, r18
    13c0:	23 2f       	mov	r18, r19
    13c2:	34 2f       	mov	r19, r20
    13c4:	44 27       	eor	r20, r20
    13c6:	58 5f       	subi	r21, 0xF8	; 248
    13c8:	f3 cf       	rjmp	.-26     	; 0x13b0 <__addsf3x+0x38>
    13ca:	46 95       	lsr	r20
    13cc:	37 95       	ror	r19
    13ce:	27 95       	ror	r18
    13d0:	a7 95       	ror	r26
    13d2:	f0 40       	sbci	r31, 0x00	; 0
    13d4:	53 95       	inc	r21
    13d6:	c9 f7       	brne	.-14     	; 0x13ca <__addsf3x+0x52>
    13d8:	7e f4       	brtc	.+30     	; 0x13f8 <__addsf3x+0x80>
    13da:	1f 16       	cp	r1, r31
    13dc:	ba 0b       	sbc	r27, r26
    13de:	62 0b       	sbc	r22, r18
    13e0:	73 0b       	sbc	r23, r19
    13e2:	84 0b       	sbc	r24, r20
    13e4:	ba f0       	brmi	.+46     	; 0x1414 <__addsf3x+0x9c>
    13e6:	91 50       	subi	r25, 0x01	; 1
    13e8:	a1 f0       	breq	.+40     	; 0x1412 <__addsf3x+0x9a>
    13ea:	ff 0f       	add	r31, r31
    13ec:	bb 1f       	adc	r27, r27
    13ee:	66 1f       	adc	r22, r22
    13f0:	77 1f       	adc	r23, r23
    13f2:	88 1f       	adc	r24, r24
    13f4:	c2 f7       	brpl	.-16     	; 0x13e6 <__addsf3x+0x6e>
    13f6:	0e c0       	rjmp	.+28     	; 0x1414 <__addsf3x+0x9c>
    13f8:	ba 0f       	add	r27, r26
    13fa:	62 1f       	adc	r22, r18
    13fc:	73 1f       	adc	r23, r19
    13fe:	84 1f       	adc	r24, r20
    1400:	48 f4       	brcc	.+18     	; 0x1414 <__addsf3x+0x9c>
    1402:	87 95       	ror	r24
    1404:	77 95       	ror	r23
    1406:	67 95       	ror	r22
    1408:	b7 95       	ror	r27
    140a:	f7 95       	ror	r31
    140c:	9e 3f       	cpi	r25, 0xFE	; 254
    140e:	08 f0       	brcs	.+2      	; 0x1412 <__addsf3x+0x9a>
    1410:	b0 cf       	rjmp	.-160    	; 0x1372 <__addsf3+0x28>
    1412:	93 95       	inc	r25
    1414:	88 0f       	add	r24, r24
    1416:	08 f0       	brcs	.+2      	; 0x141a <__addsf3x+0xa2>
    1418:	99 27       	eor	r25, r25
    141a:	ee 0f       	add	r30, r30
    141c:	97 95       	ror	r25
    141e:	87 95       	ror	r24
    1420:	08 95       	ret

00001422 <__fixunssfsi>:
    1422:	0e 94 ad 0a 	call	0x155a	; 0x155a <__fp_splitA>
    1426:	88 f0       	brcs	.+34     	; 0x144a <__fixunssfsi+0x28>
    1428:	9f 57       	subi	r25, 0x7F	; 127
    142a:	98 f0       	brcs	.+38     	; 0x1452 <__fixunssfsi+0x30>
    142c:	b9 2f       	mov	r27, r25
    142e:	99 27       	eor	r25, r25
    1430:	b7 51       	subi	r27, 0x17	; 23
    1432:	b0 f0       	brcs	.+44     	; 0x1460 <__fixunssfsi+0x3e>
    1434:	e1 f0       	breq	.+56     	; 0x146e <__fixunssfsi+0x4c>
    1436:	66 0f       	add	r22, r22
    1438:	77 1f       	adc	r23, r23
    143a:	88 1f       	adc	r24, r24
    143c:	99 1f       	adc	r25, r25
    143e:	1a f0       	brmi	.+6      	; 0x1446 <__fixunssfsi+0x24>
    1440:	ba 95       	dec	r27
    1442:	c9 f7       	brne	.-14     	; 0x1436 <__fixunssfsi+0x14>
    1444:	14 c0       	rjmp	.+40     	; 0x146e <__fixunssfsi+0x4c>
    1446:	b1 30       	cpi	r27, 0x01	; 1
    1448:	91 f0       	breq	.+36     	; 0x146e <__fixunssfsi+0x4c>
    144a:	0e 94 c7 0a 	call	0x158e	; 0x158e <__fp_zero>
    144e:	b1 e0       	ldi	r27, 0x01	; 1
    1450:	08 95       	ret
    1452:	0c 94 c7 0a 	jmp	0x158e	; 0x158e <__fp_zero>
    1456:	67 2f       	mov	r22, r23
    1458:	78 2f       	mov	r23, r24
    145a:	88 27       	eor	r24, r24
    145c:	b8 5f       	subi	r27, 0xF8	; 248
    145e:	39 f0       	breq	.+14     	; 0x146e <__fixunssfsi+0x4c>
    1460:	b9 3f       	cpi	r27, 0xF9	; 249
    1462:	cc f3       	brlt	.-14     	; 0x1456 <__fixunssfsi+0x34>
    1464:	86 95       	lsr	r24
    1466:	77 95       	ror	r23
    1468:	67 95       	ror	r22
    146a:	b3 95       	inc	r27
    146c:	d9 f7       	brne	.-10     	; 0x1464 <__fixunssfsi+0x42>
    146e:	3e f4       	brtc	.+14     	; 0x147e <__fixunssfsi+0x5c>
    1470:	90 95       	com	r25
    1472:	80 95       	com	r24
    1474:	70 95       	com	r23
    1476:	61 95       	neg	r22
    1478:	7f 4f       	sbci	r23, 0xFF	; 255
    147a:	8f 4f       	sbci	r24, 0xFF	; 255
    147c:	9f 4f       	sbci	r25, 0xFF	; 255
    147e:	08 95       	ret

00001480 <__floatunsisf>:
    1480:	e8 94       	clt
    1482:	09 c0       	rjmp	.+18     	; 0x1496 <__floatsisf+0x12>

00001484 <__floatsisf>:
    1484:	97 fb       	bst	r25, 7
    1486:	3e f4       	brtc	.+14     	; 0x1496 <__floatsisf+0x12>
    1488:	90 95       	com	r25
    148a:	80 95       	com	r24
    148c:	70 95       	com	r23
    148e:	61 95       	neg	r22
    1490:	7f 4f       	sbci	r23, 0xFF	; 255
    1492:	8f 4f       	sbci	r24, 0xFF	; 255
    1494:	9f 4f       	sbci	r25, 0xFF	; 255
    1496:	99 23       	and	r25, r25
    1498:	a9 f0       	breq	.+42     	; 0x14c4 <__floatsisf+0x40>
    149a:	f9 2f       	mov	r31, r25
    149c:	96 e9       	ldi	r25, 0x96	; 150
    149e:	bb 27       	eor	r27, r27
    14a0:	93 95       	inc	r25
    14a2:	f6 95       	lsr	r31
    14a4:	87 95       	ror	r24
    14a6:	77 95       	ror	r23
    14a8:	67 95       	ror	r22
    14aa:	b7 95       	ror	r27
    14ac:	f1 11       	cpse	r31, r1
    14ae:	f8 cf       	rjmp	.-16     	; 0x14a0 <__floatsisf+0x1c>
    14b0:	fa f4       	brpl	.+62     	; 0x14f0 <__floatsisf+0x6c>
    14b2:	bb 0f       	add	r27, r27
    14b4:	11 f4       	brne	.+4      	; 0x14ba <__floatsisf+0x36>
    14b6:	60 ff       	sbrs	r22, 0
    14b8:	1b c0       	rjmp	.+54     	; 0x14f0 <__floatsisf+0x6c>
    14ba:	6f 5f       	subi	r22, 0xFF	; 255
    14bc:	7f 4f       	sbci	r23, 0xFF	; 255
    14be:	8f 4f       	sbci	r24, 0xFF	; 255
    14c0:	9f 4f       	sbci	r25, 0xFF	; 255
    14c2:	16 c0       	rjmp	.+44     	; 0x14f0 <__floatsisf+0x6c>
    14c4:	88 23       	and	r24, r24
    14c6:	11 f0       	breq	.+4      	; 0x14cc <__floatsisf+0x48>
    14c8:	96 e9       	ldi	r25, 0x96	; 150
    14ca:	11 c0       	rjmp	.+34     	; 0x14ee <__floatsisf+0x6a>
    14cc:	77 23       	and	r23, r23
    14ce:	21 f0       	breq	.+8      	; 0x14d8 <__floatsisf+0x54>
    14d0:	9e e8       	ldi	r25, 0x8E	; 142
    14d2:	87 2f       	mov	r24, r23
    14d4:	76 2f       	mov	r23, r22
    14d6:	05 c0       	rjmp	.+10     	; 0x14e2 <__floatsisf+0x5e>
    14d8:	66 23       	and	r22, r22
    14da:	71 f0       	breq	.+28     	; 0x14f8 <__floatsisf+0x74>
    14dc:	96 e8       	ldi	r25, 0x86	; 134
    14de:	86 2f       	mov	r24, r22
    14e0:	70 e0       	ldi	r23, 0x00	; 0
    14e2:	60 e0       	ldi	r22, 0x00	; 0
    14e4:	2a f0       	brmi	.+10     	; 0x14f0 <__floatsisf+0x6c>
    14e6:	9a 95       	dec	r25
    14e8:	66 0f       	add	r22, r22
    14ea:	77 1f       	adc	r23, r23
    14ec:	88 1f       	adc	r24, r24
    14ee:	da f7       	brpl	.-10     	; 0x14e6 <__floatsisf+0x62>
    14f0:	88 0f       	add	r24, r24
    14f2:	96 95       	lsr	r25
    14f4:	87 95       	ror	r24
    14f6:	97 f9       	bld	r25, 7
    14f8:	08 95       	ret

000014fa <__fp_inf>:
    14fa:	97 f9       	bld	r25, 7
    14fc:	9f 67       	ori	r25, 0x7F	; 127
    14fe:	80 e8       	ldi	r24, 0x80	; 128
    1500:	70 e0       	ldi	r23, 0x00	; 0
    1502:	60 e0       	ldi	r22, 0x00	; 0
    1504:	08 95       	ret

00001506 <__fp_nan>:
    1506:	9f ef       	ldi	r25, 0xFF	; 255
    1508:	80 ec       	ldi	r24, 0xC0	; 192
    150a:	08 95       	ret

0000150c <__fp_pscA>:
    150c:	00 24       	eor	r0, r0
    150e:	0a 94       	dec	r0
    1510:	16 16       	cp	r1, r22
    1512:	17 06       	cpc	r1, r23
    1514:	18 06       	cpc	r1, r24
    1516:	09 06       	cpc	r0, r25
    1518:	08 95       	ret

0000151a <__fp_pscB>:
    151a:	00 24       	eor	r0, r0
    151c:	0a 94       	dec	r0
    151e:	12 16       	cp	r1, r18
    1520:	13 06       	cpc	r1, r19
    1522:	14 06       	cpc	r1, r20
    1524:	05 06       	cpc	r0, r21
    1526:	08 95       	ret

00001528 <__fp_round>:
    1528:	09 2e       	mov	r0, r25
    152a:	03 94       	inc	r0
    152c:	00 0c       	add	r0, r0
    152e:	11 f4       	brne	.+4      	; 0x1534 <__fp_round+0xc>
    1530:	88 23       	and	r24, r24
    1532:	52 f0       	brmi	.+20     	; 0x1548 <__fp_round+0x20>
    1534:	bb 0f       	add	r27, r27
    1536:	40 f4       	brcc	.+16     	; 0x1548 <__fp_round+0x20>
    1538:	bf 2b       	or	r27, r31
    153a:	11 f4       	brne	.+4      	; 0x1540 <__fp_round+0x18>
    153c:	60 ff       	sbrs	r22, 0
    153e:	04 c0       	rjmp	.+8      	; 0x1548 <__fp_round+0x20>
    1540:	6f 5f       	subi	r22, 0xFF	; 255
    1542:	7f 4f       	sbci	r23, 0xFF	; 255
    1544:	8f 4f       	sbci	r24, 0xFF	; 255
    1546:	9f 4f       	sbci	r25, 0xFF	; 255
    1548:	08 95       	ret

0000154a <__fp_split3>:
    154a:	57 fd       	sbrc	r21, 7
    154c:	90 58       	subi	r25, 0x80	; 128
    154e:	44 0f       	add	r20, r20
    1550:	55 1f       	adc	r21, r21
    1552:	59 f0       	breq	.+22     	; 0x156a <__fp_splitA+0x10>
    1554:	5f 3f       	cpi	r21, 0xFF	; 255
    1556:	71 f0       	breq	.+28     	; 0x1574 <__fp_splitA+0x1a>
    1558:	47 95       	ror	r20

0000155a <__fp_splitA>:
    155a:	88 0f       	add	r24, r24
    155c:	97 fb       	bst	r25, 7
    155e:	99 1f       	adc	r25, r25
    1560:	61 f0       	breq	.+24     	; 0x157a <__fp_splitA+0x20>
    1562:	9f 3f       	cpi	r25, 0xFF	; 255
    1564:	79 f0       	breq	.+30     	; 0x1584 <__fp_splitA+0x2a>
    1566:	87 95       	ror	r24
    1568:	08 95       	ret
    156a:	12 16       	cp	r1, r18
    156c:	13 06       	cpc	r1, r19
    156e:	14 06       	cpc	r1, r20
    1570:	55 1f       	adc	r21, r21
    1572:	f2 cf       	rjmp	.-28     	; 0x1558 <__fp_split3+0xe>
    1574:	46 95       	lsr	r20
    1576:	f1 df       	rcall	.-30     	; 0x155a <__fp_splitA>
    1578:	08 c0       	rjmp	.+16     	; 0x158a <__fp_splitA+0x30>
    157a:	16 16       	cp	r1, r22
    157c:	17 06       	cpc	r1, r23
    157e:	18 06       	cpc	r1, r24
    1580:	99 1f       	adc	r25, r25
    1582:	f1 cf       	rjmp	.-30     	; 0x1566 <__fp_splitA+0xc>
    1584:	86 95       	lsr	r24
    1586:	71 05       	cpc	r23, r1
    1588:	61 05       	cpc	r22, r1
    158a:	08 94       	sec
    158c:	08 95       	ret

0000158e <__fp_zero>:
    158e:	e8 94       	clt

00001590 <__fp_szero>:
    1590:	bb 27       	eor	r27, r27
    1592:	66 27       	eor	r22, r22
    1594:	77 27       	eor	r23, r23
    1596:	cb 01       	movw	r24, r22
    1598:	97 f9       	bld	r25, 7
    159a:	08 95       	ret

0000159c <__mulsf3>:
    159c:	0e 94 e1 0a 	call	0x15c2	; 0x15c2 <__mulsf3x>
    15a0:	0c 94 94 0a 	jmp	0x1528	; 0x1528 <__fp_round>
    15a4:	0e 94 86 0a 	call	0x150c	; 0x150c <__fp_pscA>
    15a8:	38 f0       	brcs	.+14     	; 0x15b8 <__mulsf3+0x1c>
    15aa:	0e 94 8d 0a 	call	0x151a	; 0x151a <__fp_pscB>
    15ae:	20 f0       	brcs	.+8      	; 0x15b8 <__mulsf3+0x1c>
    15b0:	95 23       	and	r25, r21
    15b2:	11 f0       	breq	.+4      	; 0x15b8 <__mulsf3+0x1c>
    15b4:	0c 94 7d 0a 	jmp	0x14fa	; 0x14fa <__fp_inf>
    15b8:	0c 94 83 0a 	jmp	0x1506	; 0x1506 <__fp_nan>
    15bc:	11 24       	eor	r1, r1
    15be:	0c 94 c8 0a 	jmp	0x1590	; 0x1590 <__fp_szero>

000015c2 <__mulsf3x>:
    15c2:	0e 94 a5 0a 	call	0x154a	; 0x154a <__fp_split3>
    15c6:	70 f3       	brcs	.-36     	; 0x15a4 <__mulsf3+0x8>

000015c8 <__mulsf3_pse>:
    15c8:	95 9f       	mul	r25, r21
    15ca:	c1 f3       	breq	.-16     	; 0x15bc <__mulsf3+0x20>
    15cc:	95 0f       	add	r25, r21
    15ce:	50 e0       	ldi	r21, 0x00	; 0
    15d0:	55 1f       	adc	r21, r21
    15d2:	62 9f       	mul	r22, r18
    15d4:	f0 01       	movw	r30, r0
    15d6:	72 9f       	mul	r23, r18
    15d8:	bb 27       	eor	r27, r27
    15da:	f0 0d       	add	r31, r0
    15dc:	b1 1d       	adc	r27, r1
    15de:	63 9f       	mul	r22, r19
    15e0:	aa 27       	eor	r26, r26
    15e2:	f0 0d       	add	r31, r0
    15e4:	b1 1d       	adc	r27, r1
    15e6:	aa 1f       	adc	r26, r26
    15e8:	64 9f       	mul	r22, r20
    15ea:	66 27       	eor	r22, r22
    15ec:	b0 0d       	add	r27, r0
    15ee:	a1 1d       	adc	r26, r1
    15f0:	66 1f       	adc	r22, r22
    15f2:	82 9f       	mul	r24, r18
    15f4:	22 27       	eor	r18, r18
    15f6:	b0 0d       	add	r27, r0
    15f8:	a1 1d       	adc	r26, r1
    15fa:	62 1f       	adc	r22, r18
    15fc:	73 9f       	mul	r23, r19
    15fe:	b0 0d       	add	r27, r0
    1600:	a1 1d       	adc	r26, r1
    1602:	62 1f       	adc	r22, r18
    1604:	83 9f       	mul	r24, r19
    1606:	a0 0d       	add	r26, r0
    1608:	61 1d       	adc	r22, r1
    160a:	22 1f       	adc	r18, r18
    160c:	74 9f       	mul	r23, r20
    160e:	33 27       	eor	r19, r19
    1610:	a0 0d       	add	r26, r0
    1612:	61 1d       	adc	r22, r1
    1614:	23 1f       	adc	r18, r19
    1616:	84 9f       	mul	r24, r20
    1618:	60 0d       	add	r22, r0
    161a:	21 1d       	adc	r18, r1
    161c:	82 2f       	mov	r24, r18
    161e:	76 2f       	mov	r23, r22
    1620:	6a 2f       	mov	r22, r26
    1622:	11 24       	eor	r1, r1
    1624:	9f 57       	subi	r25, 0x7F	; 127
    1626:	50 40       	sbci	r21, 0x00	; 0
    1628:	9a f0       	brmi	.+38     	; 0x1650 <__mulsf3_pse+0x88>
    162a:	f1 f0       	breq	.+60     	; 0x1668 <__mulsf3_pse+0xa0>
    162c:	88 23       	and	r24, r24
    162e:	4a f0       	brmi	.+18     	; 0x1642 <__mulsf3_pse+0x7a>
    1630:	ee 0f       	add	r30, r30
    1632:	ff 1f       	adc	r31, r31
    1634:	bb 1f       	adc	r27, r27
    1636:	66 1f       	adc	r22, r22
    1638:	77 1f       	adc	r23, r23
    163a:	88 1f       	adc	r24, r24
    163c:	91 50       	subi	r25, 0x01	; 1
    163e:	50 40       	sbci	r21, 0x00	; 0
    1640:	a9 f7       	brne	.-22     	; 0x162c <__mulsf3_pse+0x64>
    1642:	9e 3f       	cpi	r25, 0xFE	; 254
    1644:	51 05       	cpc	r21, r1
    1646:	80 f0       	brcs	.+32     	; 0x1668 <__mulsf3_pse+0xa0>
    1648:	0c 94 7d 0a 	jmp	0x14fa	; 0x14fa <__fp_inf>
    164c:	0c 94 c8 0a 	jmp	0x1590	; 0x1590 <__fp_szero>
    1650:	5f 3f       	cpi	r21, 0xFF	; 255
    1652:	e4 f3       	brlt	.-8      	; 0x164c <__mulsf3_pse+0x84>
    1654:	98 3e       	cpi	r25, 0xE8	; 232
    1656:	d4 f3       	brlt	.-12     	; 0x164c <__mulsf3_pse+0x84>
    1658:	86 95       	lsr	r24
    165a:	77 95       	ror	r23
    165c:	67 95       	ror	r22
    165e:	b7 95       	ror	r27
    1660:	f7 95       	ror	r31
    1662:	e7 95       	ror	r30
    1664:	9f 5f       	subi	r25, 0xFF	; 255
    1666:	c1 f7       	brne	.-16     	; 0x1658 <__mulsf3_pse+0x90>
    1668:	fe 2b       	or	r31, r30
    166a:	88 0f       	add	r24, r24
    166c:	91 1d       	adc	r25, r1
    166e:	96 95       	lsr	r25
    1670:	87 95       	ror	r24
    1672:	97 f9       	bld	r25, 7
    1674:	08 95       	ret

00001676 <sprintf>:
    1676:	ae e0       	ldi	r26, 0x0E	; 14
    1678:	b0 e0       	ldi	r27, 0x00	; 0
    167a:	e1 e4       	ldi	r30, 0x41	; 65
    167c:	fb e0       	ldi	r31, 0x0B	; 11
    167e:	0c 94 e3 0d 	jmp	0x1bc6	; 0x1bc6 <__prologue_saves__+0x1c>
    1682:	0d 89       	ldd	r16, Y+21	; 0x15
    1684:	1e 89       	ldd	r17, Y+22	; 0x16
    1686:	86 e0       	ldi	r24, 0x06	; 6
    1688:	8c 83       	std	Y+4, r24	; 0x04
    168a:	1a 83       	std	Y+2, r17	; 0x02
    168c:	09 83       	std	Y+1, r16	; 0x01
    168e:	8f ef       	ldi	r24, 0xFF	; 255
    1690:	9f e7       	ldi	r25, 0x7F	; 127
    1692:	9e 83       	std	Y+6, r25	; 0x06
    1694:	8d 83       	std	Y+5, r24	; 0x05
    1696:	ae 01       	movw	r20, r28
    1698:	47 5e       	subi	r20, 0xE7	; 231
    169a:	5f 4f       	sbci	r21, 0xFF	; 255
    169c:	6f 89       	ldd	r22, Y+23	; 0x17
    169e:	78 8d       	ldd	r23, Y+24	; 0x18
    16a0:	ce 01       	movw	r24, r28
    16a2:	01 96       	adiw	r24, 0x01	; 1
    16a4:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <vfprintf>
    16a8:	2f 81       	ldd	r18, Y+7	; 0x07
    16aa:	38 85       	ldd	r19, Y+8	; 0x08
    16ac:	02 0f       	add	r16, r18
    16ae:	13 1f       	adc	r17, r19
    16b0:	f8 01       	movw	r30, r16
    16b2:	10 82       	st	Z, r1
    16b4:	2e 96       	adiw	r28, 0x0e	; 14
    16b6:	e4 e0       	ldi	r30, 0x04	; 4
    16b8:	0c 94 ff 0d 	jmp	0x1bfe	; 0x1bfe <__epilogue_restores__+0x1c>

000016bc <vfprintf>:
    16bc:	af e0       	ldi	r26, 0x0F	; 15
    16be:	b0 e0       	ldi	r27, 0x00	; 0
    16c0:	e4 e6       	ldi	r30, 0x64	; 100
    16c2:	fb e0       	ldi	r31, 0x0B	; 11
    16c4:	0c 94 d5 0d 	jmp	0x1baa	; 0x1baa <__prologue_saves__>
    16c8:	7c 01       	movw	r14, r24
    16ca:	3b 01       	movw	r6, r22
    16cc:	8a 01       	movw	r16, r20
    16ce:	dc 01       	movw	r26, r24
    16d0:	17 96       	adiw	r26, 0x07	; 7
    16d2:	1c 92       	st	X, r1
    16d4:	1e 92       	st	-X, r1
    16d6:	16 97       	sbiw	r26, 0x06	; 6
    16d8:	13 96       	adiw	r26, 0x03	; 3
    16da:	8c 91       	ld	r24, X
    16dc:	81 ff       	sbrs	r24, 1
    16de:	be c1       	rjmp	.+892    	; 0x1a5c <vfprintf+0x3a0>
    16e0:	9a e0       	ldi	r25, 0x0A	; 10
    16e2:	29 2e       	mov	r2, r25
    16e4:	fe 01       	movw	r30, r28
    16e6:	31 96       	adiw	r30, 0x01	; 1
    16e8:	4f 01       	movw	r8, r30
    16ea:	d7 01       	movw	r26, r14
    16ec:	13 96       	adiw	r26, 0x03	; 3
    16ee:	9c 91       	ld	r25, X
    16f0:	f3 01       	movw	r30, r6
    16f2:	93 fd       	sbrc	r25, 3
    16f4:	85 91       	lpm	r24, Z+
    16f6:	93 ff       	sbrs	r25, 3
    16f8:	81 91       	ld	r24, Z+
    16fa:	3f 01       	movw	r6, r30
    16fc:	88 23       	and	r24, r24
    16fe:	09 f4       	brne	.+2      	; 0x1702 <vfprintf+0x46>
    1700:	44 c1       	rjmp	.+648    	; 0x198a <vfprintf+0x2ce>
    1702:	85 32       	cpi	r24, 0x25	; 37
    1704:	39 f4       	brne	.+14     	; 0x1714 <vfprintf+0x58>
    1706:	93 fd       	sbrc	r25, 3
    1708:	85 91       	lpm	r24, Z+
    170a:	93 ff       	sbrs	r25, 3
    170c:	81 91       	ld	r24, Z+
    170e:	3f 01       	movw	r6, r30
    1710:	85 32       	cpi	r24, 0x25	; 37
    1712:	29 f4       	brne	.+10     	; 0x171e <vfprintf+0x62>
    1714:	b7 01       	movw	r22, r14
    1716:	90 e0       	ldi	r25, 0x00	; 0
    1718:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    171c:	e6 cf       	rjmp	.-52     	; 0x16ea <vfprintf+0x2e>
    171e:	b1 2c       	mov	r11, r1
    1720:	41 2c       	mov	r4, r1
    1722:	51 2c       	mov	r5, r1
    1724:	bf e1       	ldi	r27, 0x1F	; 31
    1726:	b5 15       	cp	r27, r5
    1728:	38 f0       	brcs	.+14     	; 0x1738 <vfprintf+0x7c>
    172a:	8b 32       	cpi	r24, 0x2B	; 43
    172c:	09 f1       	breq	.+66     	; 0x1770 <vfprintf+0xb4>
    172e:	88 f4       	brcc	.+34     	; 0x1752 <vfprintf+0x96>
    1730:	80 32       	cpi	r24, 0x20	; 32
    1732:	01 f1       	breq	.+64     	; 0x1774 <vfprintf+0xb8>
    1734:	83 32       	cpi	r24, 0x23	; 35
    1736:	21 f1       	breq	.+72     	; 0x1780 <vfprintf+0xc4>
    1738:	57 fc       	sbrc	r5, 7
    173a:	3a c0       	rjmp	.+116    	; 0x17b0 <vfprintf+0xf4>
    173c:	20 ed       	ldi	r18, 0xD0	; 208
    173e:	28 0f       	add	r18, r24
    1740:	2a 30       	cpi	r18, 0x0A	; 10
    1742:	40 f5       	brcc	.+80     	; 0x1794 <vfprintf+0xd8>
    1744:	56 fe       	sbrs	r5, 6
    1746:	1f c0       	rjmp	.+62     	; 0x1786 <vfprintf+0xca>
    1748:	b2 9c       	mul	r11, r2
    174a:	20 0d       	add	r18, r0
    174c:	11 24       	eor	r1, r1
    174e:	b2 2e       	mov	r11, r18
    1750:	06 c0       	rjmp	.+12     	; 0x175e <vfprintf+0xa2>
    1752:	8d 32       	cpi	r24, 0x2D	; 45
    1754:	91 f0       	breq	.+36     	; 0x177a <vfprintf+0xbe>
    1756:	80 33       	cpi	r24, 0x30	; 48
    1758:	79 f7       	brne	.-34     	; 0x1738 <vfprintf+0x7c>
    175a:	68 94       	set
    175c:	50 f8       	bld	r5, 0
    175e:	f3 01       	movw	r30, r6
    1760:	93 fd       	sbrc	r25, 3
    1762:	85 91       	lpm	r24, Z+
    1764:	93 ff       	sbrs	r25, 3
    1766:	81 91       	ld	r24, Z+
    1768:	3f 01       	movw	r6, r30
    176a:	81 11       	cpse	r24, r1
    176c:	db cf       	rjmp	.-74     	; 0x1724 <vfprintf+0x68>
    176e:	20 c0       	rjmp	.+64     	; 0x17b0 <vfprintf+0xf4>
    1770:	68 94       	set
    1772:	51 f8       	bld	r5, 1
    1774:	68 94       	set
    1776:	52 f8       	bld	r5, 2
    1778:	f2 cf       	rjmp	.-28     	; 0x175e <vfprintf+0xa2>
    177a:	68 94       	set
    177c:	53 f8       	bld	r5, 3
    177e:	ef cf       	rjmp	.-34     	; 0x175e <vfprintf+0xa2>
    1780:	68 94       	set
    1782:	54 f8       	bld	r5, 4
    1784:	ec cf       	rjmp	.-40     	; 0x175e <vfprintf+0xa2>
    1786:	42 9c       	mul	r4, r2
    1788:	20 0d       	add	r18, r0
    178a:	11 24       	eor	r1, r1
    178c:	42 2e       	mov	r4, r18
    178e:	68 94       	set
    1790:	55 f8       	bld	r5, 5
    1792:	e5 cf       	rjmp	.-54     	; 0x175e <vfprintf+0xa2>
    1794:	8e 32       	cpi	r24, 0x2E	; 46
    1796:	29 f4       	brne	.+10     	; 0x17a2 <vfprintf+0xe6>
    1798:	56 fc       	sbrc	r5, 6
    179a:	f7 c0       	rjmp	.+494    	; 0x198a <vfprintf+0x2ce>
    179c:	68 94       	set
    179e:	56 f8       	bld	r5, 6
    17a0:	de cf       	rjmp	.-68     	; 0x175e <vfprintf+0xa2>
    17a2:	8c 36       	cpi	r24, 0x6C	; 108
    17a4:	19 f4       	brne	.+6      	; 0x17ac <vfprintf+0xf0>
    17a6:	68 94       	set
    17a8:	57 f8       	bld	r5, 7
    17aa:	d9 cf       	rjmp	.-78     	; 0x175e <vfprintf+0xa2>
    17ac:	88 36       	cpi	r24, 0x68	; 104
    17ae:	b9 f2       	breq	.-82     	; 0x175e <vfprintf+0xa2>
    17b0:	98 2f       	mov	r25, r24
    17b2:	9f 7d       	andi	r25, 0xDF	; 223
    17b4:	95 54       	subi	r25, 0x45	; 69
    17b6:	93 30       	cpi	r25, 0x03	; 3
    17b8:	c0 f0       	brcs	.+48     	; 0x17ea <vfprintf+0x12e>
    17ba:	83 36       	cpi	r24, 0x63	; 99
    17bc:	a1 f1       	breq	.+104    	; 0x1826 <vfprintf+0x16a>
    17be:	83 37       	cpi	r24, 0x73	; 115
    17c0:	c1 f1       	breq	.+112    	; 0x1832 <vfprintf+0x176>
    17c2:	83 35       	cpi	r24, 0x53	; 83
    17c4:	09 f0       	breq	.+2      	; 0x17c8 <vfprintf+0x10c>
    17c6:	5b c0       	rjmp	.+182    	; 0x187e <vfprintf+0x1c2>
    17c8:	d8 01       	movw	r26, r16
    17ca:	cd 90       	ld	r12, X+
    17cc:	dd 90       	ld	r13, X+
    17ce:	8d 01       	movw	r16, r26
    17d0:	6b 2d       	mov	r22, r11
    17d2:	70 e0       	ldi	r23, 0x00	; 0
    17d4:	56 fc       	sbrc	r5, 6
    17d6:	02 c0       	rjmp	.+4      	; 0x17dc <vfprintf+0x120>
    17d8:	6f ef       	ldi	r22, 0xFF	; 255
    17da:	7f ef       	ldi	r23, 0xFF	; 255
    17dc:	c6 01       	movw	r24, r12
    17de:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <strnlen_P>
    17e2:	5c 01       	movw	r10, r24
    17e4:	68 94       	set
    17e6:	57 f8       	bld	r5, 7
    17e8:	0a c0       	rjmp	.+20     	; 0x17fe <vfprintf+0x142>
    17ea:	0c 5f       	subi	r16, 0xFC	; 252
    17ec:	1f 4f       	sbci	r17, 0xFF	; 255
    17ee:	ef e3       	ldi	r30, 0x3F	; 63
    17f0:	e9 83       	std	Y+1, r30	; 0x01
    17f2:	aa 24       	eor	r10, r10
    17f4:	a3 94       	inc	r10
    17f6:	b1 2c       	mov	r11, r1
    17f8:	64 01       	movw	r12, r8
    17fa:	e8 94       	clt
    17fc:	57 f8       	bld	r5, 7
    17fe:	53 fc       	sbrc	r5, 3
    1800:	04 c0       	rjmp	.+8      	; 0x180a <vfprintf+0x14e>
    1802:	4a 14       	cp	r4, r10
    1804:	1b 04       	cpc	r1, r11
    1806:	09 f0       	breq	.+2      	; 0x180a <vfprintf+0x14e>
    1808:	18 f5       	brcc	.+70     	; 0x1850 <vfprintf+0x194>
    180a:	34 2c       	mov	r3, r4
    180c:	a1 14       	cp	r10, r1
    180e:	b1 04       	cpc	r11, r1
    1810:	31 f5       	brne	.+76     	; 0x185e <vfprintf+0x1a2>
    1812:	33 20       	and	r3, r3
    1814:	09 f4       	brne	.+2      	; 0x1818 <vfprintf+0x15c>
    1816:	69 cf       	rjmp	.-302    	; 0x16ea <vfprintf+0x2e>
    1818:	b7 01       	movw	r22, r14
    181a:	80 e2       	ldi	r24, 0x20	; 32
    181c:	90 e0       	ldi	r25, 0x00	; 0
    181e:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    1822:	3a 94       	dec	r3
    1824:	f6 cf       	rjmp	.-20     	; 0x1812 <vfprintf+0x156>
    1826:	d8 01       	movw	r26, r16
    1828:	8c 91       	ld	r24, X
    182a:	89 83       	std	Y+1, r24	; 0x01
    182c:	0e 5f       	subi	r16, 0xFE	; 254
    182e:	1f 4f       	sbci	r17, 0xFF	; 255
    1830:	e0 cf       	rjmp	.-64     	; 0x17f2 <vfprintf+0x136>
    1832:	f8 01       	movw	r30, r16
    1834:	c1 90       	ld	r12, Z+
    1836:	d1 90       	ld	r13, Z+
    1838:	8f 01       	movw	r16, r30
    183a:	6b 2d       	mov	r22, r11
    183c:	70 e0       	ldi	r23, 0x00	; 0
    183e:	56 fc       	sbrc	r5, 6
    1840:	02 c0       	rjmp	.+4      	; 0x1846 <vfprintf+0x18a>
    1842:	6f ef       	ldi	r22, 0xFF	; 255
    1844:	7f ef       	ldi	r23, 0xFF	; 255
    1846:	c6 01       	movw	r24, r12
    1848:	0e 94 3c 0d 	call	0x1a78	; 0x1a78 <strnlen>
    184c:	5c 01       	movw	r10, r24
    184e:	d5 cf       	rjmp	.-86     	; 0x17fa <vfprintf+0x13e>
    1850:	b7 01       	movw	r22, r14
    1852:	80 e2       	ldi	r24, 0x20	; 32
    1854:	90 e0       	ldi	r25, 0x00	; 0
    1856:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    185a:	4a 94       	dec	r4
    185c:	d2 cf       	rjmp	.-92     	; 0x1802 <vfprintf+0x146>
    185e:	f6 01       	movw	r30, r12
    1860:	57 fc       	sbrc	r5, 7
    1862:	85 91       	lpm	r24, Z+
    1864:	57 fe       	sbrs	r5, 7
    1866:	81 91       	ld	r24, Z+
    1868:	6f 01       	movw	r12, r30
    186a:	b7 01       	movw	r22, r14
    186c:	90 e0       	ldi	r25, 0x00	; 0
    186e:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    1872:	31 10       	cpse	r3, r1
    1874:	3a 94       	dec	r3
    1876:	b1 e0       	ldi	r27, 0x01	; 1
    1878:	ab 1a       	sub	r10, r27
    187a:	b1 08       	sbc	r11, r1
    187c:	c7 cf       	rjmp	.-114    	; 0x180c <vfprintf+0x150>
    187e:	84 36       	cpi	r24, 0x64	; 100
    1880:	19 f0       	breq	.+6      	; 0x1888 <vfprintf+0x1cc>
    1882:	89 36       	cpi	r24, 0x69	; 105
    1884:	09 f0       	breq	.+2      	; 0x1888 <vfprintf+0x1cc>
    1886:	71 c0       	rjmp	.+226    	; 0x196a <vfprintf+0x2ae>
    1888:	f8 01       	movw	r30, r16
    188a:	57 fe       	sbrs	r5, 7
    188c:	67 c0       	rjmp	.+206    	; 0x195c <vfprintf+0x2a0>
    188e:	61 91       	ld	r22, Z+
    1890:	71 91       	ld	r23, Z+
    1892:	81 91       	ld	r24, Z+
    1894:	91 91       	ld	r25, Z+
    1896:	8f 01       	movw	r16, r30
    1898:	e5 2d       	mov	r30, r5
    189a:	ef 76       	andi	r30, 0x6F	; 111
    189c:	de 2e       	mov	r13, r30
    189e:	97 ff       	sbrs	r25, 7
    18a0:	09 c0       	rjmp	.+18     	; 0x18b4 <vfprintf+0x1f8>
    18a2:	90 95       	com	r25
    18a4:	80 95       	com	r24
    18a6:	70 95       	com	r23
    18a8:	61 95       	neg	r22
    18aa:	7f 4f       	sbci	r23, 0xFF	; 255
    18ac:	8f 4f       	sbci	r24, 0xFF	; 255
    18ae:	9f 4f       	sbci	r25, 0xFF	; 255
    18b0:	68 94       	set
    18b2:	d7 f8       	bld	r13, 7
    18b4:	2a e0       	ldi	r18, 0x0A	; 10
    18b6:	30 e0       	ldi	r19, 0x00	; 0
    18b8:	a4 01       	movw	r20, r8
    18ba:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__ultoa_invert>
    18be:	c8 2e       	mov	r12, r24
    18c0:	c8 18       	sub	r12, r8
    18c2:	ac 2c       	mov	r10, r12
    18c4:	5d 2c       	mov	r5, r13
    18c6:	d6 fe       	sbrs	r13, 6
    18c8:	0c c0       	rjmp	.+24     	; 0x18e2 <vfprintf+0x226>
    18ca:	e8 94       	clt
    18cc:	50 f8       	bld	r5, 0
    18ce:	cb 14       	cp	r12, r11
    18d0:	40 f4       	brcc	.+16     	; 0x18e2 <vfprintf+0x226>
    18d2:	d4 fe       	sbrs	r13, 4
    18d4:	05 c0       	rjmp	.+10     	; 0x18e0 <vfprintf+0x224>
    18d6:	d2 fc       	sbrc	r13, 2
    18d8:	03 c0       	rjmp	.+6      	; 0x18e0 <vfprintf+0x224>
    18da:	5d 2d       	mov	r21, r13
    18dc:	5e 7e       	andi	r21, 0xEE	; 238
    18de:	55 2e       	mov	r5, r21
    18e0:	ab 2c       	mov	r10, r11
    18e2:	54 fe       	sbrs	r5, 4
    18e4:	93 c0       	rjmp	.+294    	; 0x1a0c <vfprintf+0x350>
    18e6:	fe 01       	movw	r30, r28
    18e8:	ec 0d       	add	r30, r12
    18ea:	f1 1d       	adc	r31, r1
    18ec:	80 81       	ld	r24, Z
    18ee:	80 33       	cpi	r24, 0x30	; 48
    18f0:	09 f0       	breq	.+2      	; 0x18f4 <vfprintf+0x238>
    18f2:	85 c0       	rjmp	.+266    	; 0x19fe <vfprintf+0x342>
    18f4:	65 2d       	mov	r22, r5
    18f6:	69 7e       	andi	r22, 0xE9	; 233
    18f8:	56 2e       	mov	r5, r22
    18fa:	75 2d       	mov	r23, r5
    18fc:	78 70       	andi	r23, 0x08	; 8
    18fe:	37 2e       	mov	r3, r23
    1900:	53 fc       	sbrc	r5, 3
    1902:	93 c0       	rjmp	.+294    	; 0x1a2a <vfprintf+0x36e>
    1904:	50 fe       	sbrs	r5, 0
    1906:	8d c0       	rjmp	.+282    	; 0x1a22 <vfprintf+0x366>
    1908:	bc 2c       	mov	r11, r12
    190a:	a4 14       	cp	r10, r4
    190c:	10 f4       	brcc	.+4      	; 0x1912 <vfprintf+0x256>
    190e:	b4 0c       	add	r11, r4
    1910:	ba 18       	sub	r11, r10
    1912:	54 fe       	sbrs	r5, 4
    1914:	90 c0       	rjmp	.+288    	; 0x1a36 <vfprintf+0x37a>
    1916:	b7 01       	movw	r22, r14
    1918:	80 e3       	ldi	r24, 0x30	; 48
    191a:	90 e0       	ldi	r25, 0x00	; 0
    191c:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    1920:	52 fe       	sbrs	r5, 2
    1922:	07 c0       	rjmp	.+14     	; 0x1932 <vfprintf+0x276>
    1924:	88 e7       	ldi	r24, 0x78	; 120
    1926:	51 fc       	sbrc	r5, 1
    1928:	88 e5       	ldi	r24, 0x58	; 88
    192a:	90 e0       	ldi	r25, 0x00	; 0
    192c:	b7 01       	movw	r22, r14
    192e:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    1932:	cb 14       	cp	r12, r11
    1934:	08 f4       	brcc	.+2      	; 0x1938 <vfprintf+0x27c>
    1936:	8b c0       	rjmp	.+278    	; 0x1a4e <vfprintf+0x392>
    1938:	ca 94       	dec	r12
    193a:	d1 2c       	mov	r13, r1
    193c:	8f ef       	ldi	r24, 0xFF	; 255
    193e:	c8 1a       	sub	r12, r24
    1940:	d8 0a       	sbc	r13, r24
    1942:	c8 0c       	add	r12, r8
    1944:	d9 1c       	adc	r13, r9
    1946:	d6 01       	movw	r26, r12
    1948:	8e 91       	ld	r24, -X
    194a:	6d 01       	movw	r12, r26
    194c:	b7 01       	movw	r22, r14
    194e:	90 e0       	ldi	r25, 0x00	; 0
    1950:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    1954:	8c 14       	cp	r8, r12
    1956:	9d 04       	cpc	r9, r13
    1958:	b1 f7       	brne	.-20     	; 0x1946 <vfprintf+0x28a>
    195a:	5b cf       	rjmp	.-330    	; 0x1812 <vfprintf+0x156>
    195c:	61 91       	ld	r22, Z+
    195e:	71 91       	ld	r23, Z+
    1960:	07 2e       	mov	r0, r23
    1962:	00 0c       	add	r0, r0
    1964:	88 0b       	sbc	r24, r24
    1966:	99 0b       	sbc	r25, r25
    1968:	96 cf       	rjmp	.-212    	; 0x1896 <vfprintf+0x1da>
    196a:	d5 2c       	mov	r13, r5
    196c:	e8 94       	clt
    196e:	d4 f8       	bld	r13, 4
    1970:	2a e0       	ldi	r18, 0x0A	; 10
    1972:	85 37       	cpi	r24, 0x75	; 117
    1974:	29 f1       	breq	.+74     	; 0x19c0 <vfprintf+0x304>
    1976:	f5 2d       	mov	r31, r5
    1978:	f9 7f       	andi	r31, 0xF9	; 249
    197a:	df 2e       	mov	r13, r31
    197c:	80 37       	cpi	r24, 0x70	; 112
    197e:	a1 f0       	breq	.+40     	; 0x19a8 <vfprintf+0x2ec>
    1980:	58 f4       	brcc	.+22     	; 0x1998 <vfprintf+0x2dc>
    1982:	88 35       	cpi	r24, 0x58	; 88
    1984:	a1 f0       	breq	.+40     	; 0x19ae <vfprintf+0x2f2>
    1986:	8f 36       	cpi	r24, 0x6F	; 111
    1988:	d1 f0       	breq	.+52     	; 0x19be <vfprintf+0x302>
    198a:	f7 01       	movw	r30, r14
    198c:	86 81       	ldd	r24, Z+6	; 0x06
    198e:	97 81       	ldd	r25, Z+7	; 0x07
    1990:	2f 96       	adiw	r28, 0x0f	; 15
    1992:	e2 e1       	ldi	r30, 0x12	; 18
    1994:	0c 94 f1 0d 	jmp	0x1be2	; 0x1be2 <__epilogue_restores__>
    1998:	88 37       	cpi	r24, 0x78	; 120
    199a:	b9 f7       	brne	.-18     	; 0x198a <vfprintf+0x2ce>
    199c:	d4 fe       	sbrs	r13, 4
    199e:	02 c0       	rjmp	.+4      	; 0x19a4 <vfprintf+0x2e8>
    19a0:	68 94       	set
    19a2:	d2 f8       	bld	r13, 2
    19a4:	20 e1       	ldi	r18, 0x10	; 16
    19a6:	0c c0       	rjmp	.+24     	; 0x19c0 <vfprintf+0x304>
    19a8:	68 94       	set
    19aa:	d4 f8       	bld	r13, 4
    19ac:	f7 cf       	rjmp	.-18     	; 0x199c <vfprintf+0x2e0>
    19ae:	54 fe       	sbrs	r5, 4
    19b0:	03 c0       	rjmp	.+6      	; 0x19b8 <vfprintf+0x2fc>
    19b2:	2f 2f       	mov	r18, r31
    19b4:	26 60       	ori	r18, 0x06	; 6
    19b6:	d2 2e       	mov	r13, r18
    19b8:	20 e1       	ldi	r18, 0x10	; 16
    19ba:	32 e0       	ldi	r19, 0x02	; 2
    19bc:	02 c0       	rjmp	.+4      	; 0x19c2 <vfprintf+0x306>
    19be:	28 e0       	ldi	r18, 0x08	; 8
    19c0:	30 e0       	ldi	r19, 0x00	; 0
    19c2:	f8 01       	movw	r30, r16
    19c4:	d7 fe       	sbrs	r13, 7
    19c6:	15 c0       	rjmp	.+42     	; 0x19f2 <vfprintf+0x336>
    19c8:	41 91       	ld	r20, Z+
    19ca:	51 91       	ld	r21, Z+
    19cc:	61 91       	ld	r22, Z+
    19ce:	71 91       	ld	r23, Z+
    19d0:	4c 87       	std	Y+12, r20	; 0x0c
    19d2:	5d 87       	std	Y+13, r21	; 0x0d
    19d4:	6e 87       	std	Y+14, r22	; 0x0e
    19d6:	7f 87       	std	Y+15, r23	; 0x0f
    19d8:	8f 01       	movw	r16, r30
    19da:	a4 01       	movw	r20, r8
    19dc:	6c 85       	ldd	r22, Y+12	; 0x0c
    19de:	7d 85       	ldd	r23, Y+13	; 0x0d
    19e0:	8e 85       	ldd	r24, Y+14	; 0x0e
    19e2:	9f 85       	ldd	r25, Y+15	; 0x0f
    19e4:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__ultoa_invert>
    19e8:	c8 2e       	mov	r12, r24
    19ea:	c8 18       	sub	r12, r8
    19ec:	e8 94       	clt
    19ee:	d7 f8       	bld	r13, 7
    19f0:	68 cf       	rjmp	.-304    	; 0x18c2 <vfprintf+0x206>
    19f2:	81 91       	ld	r24, Z+
    19f4:	91 91       	ld	r25, Z+
    19f6:	ac 01       	movw	r20, r24
    19f8:	70 e0       	ldi	r23, 0x00	; 0
    19fa:	60 e0       	ldi	r22, 0x00	; 0
    19fc:	e9 cf       	rjmp	.-46     	; 0x19d0 <vfprintf+0x314>
    19fe:	52 fc       	sbrc	r5, 2
    1a00:	02 c0       	rjmp	.+4      	; 0x1a06 <vfprintf+0x34a>
    1a02:	a3 94       	inc	r10
    1a04:	7a cf       	rjmp	.-268    	; 0x18fa <vfprintf+0x23e>
    1a06:	a3 94       	inc	r10
    1a08:	a3 94       	inc	r10
    1a0a:	77 cf       	rjmp	.-274    	; 0x18fa <vfprintf+0x23e>
    1a0c:	85 2d       	mov	r24, r5
    1a0e:	86 78       	andi	r24, 0x86	; 134
    1a10:	09 f4       	brne	.+2      	; 0x1a14 <vfprintf+0x358>
    1a12:	73 cf       	rjmp	.-282    	; 0x18fa <vfprintf+0x23e>
    1a14:	f6 cf       	rjmp	.-20     	; 0x1a02 <vfprintf+0x346>
    1a16:	b7 01       	movw	r22, r14
    1a18:	80 e2       	ldi	r24, 0x20	; 32
    1a1a:	90 e0       	ldi	r25, 0x00	; 0
    1a1c:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    1a20:	a3 94       	inc	r10
    1a22:	a4 14       	cp	r10, r4
    1a24:	c0 f3       	brcs	.-16     	; 0x1a16 <vfprintf+0x35a>
    1a26:	31 2c       	mov	r3, r1
    1a28:	74 cf       	rjmp	.-280    	; 0x1912 <vfprintf+0x256>
    1a2a:	34 2c       	mov	r3, r4
    1a2c:	3a 18       	sub	r3, r10
    1a2e:	a4 14       	cp	r10, r4
    1a30:	08 f4       	brcc	.+2      	; 0x1a34 <vfprintf+0x378>
    1a32:	6f cf       	rjmp	.-290    	; 0x1912 <vfprintf+0x256>
    1a34:	f8 cf       	rjmp	.-16     	; 0x1a26 <vfprintf+0x36a>
    1a36:	85 2d       	mov	r24, r5
    1a38:	86 78       	andi	r24, 0x86	; 134
    1a3a:	09 f4       	brne	.+2      	; 0x1a3e <vfprintf+0x382>
    1a3c:	7a cf       	rjmp	.-268    	; 0x1932 <vfprintf+0x276>
    1a3e:	8b e2       	ldi	r24, 0x2B	; 43
    1a40:	51 fe       	sbrs	r5, 1
    1a42:	80 e2       	ldi	r24, 0x20	; 32
    1a44:	57 fc       	sbrc	r5, 7
    1a46:	8d e2       	ldi	r24, 0x2D	; 45
    1a48:	b7 01       	movw	r22, r14
    1a4a:	90 e0       	ldi	r25, 0x00	; 0
    1a4c:	70 cf       	rjmp	.-288    	; 0x192e <vfprintf+0x272>
    1a4e:	b7 01       	movw	r22, r14
    1a50:	80 e3       	ldi	r24, 0x30	; 48
    1a52:	90 e0       	ldi	r25, 0x00	; 0
    1a54:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <fputc>
    1a58:	ba 94       	dec	r11
    1a5a:	6b cf       	rjmp	.-298    	; 0x1932 <vfprintf+0x276>
    1a5c:	8f ef       	ldi	r24, 0xFF	; 255
    1a5e:	9f ef       	ldi	r25, 0xFF	; 255
    1a60:	97 cf       	rjmp	.-210    	; 0x1990 <vfprintf+0x2d4>

00001a62 <strnlen_P>:
    1a62:	fc 01       	movw	r30, r24
    1a64:	05 90       	lpm	r0, Z+
    1a66:	61 50       	subi	r22, 0x01	; 1
    1a68:	70 40       	sbci	r23, 0x00	; 0
    1a6a:	01 10       	cpse	r0, r1
    1a6c:	d8 f7       	brcc	.-10     	; 0x1a64 <strnlen_P+0x2>
    1a6e:	80 95       	com	r24
    1a70:	90 95       	com	r25
    1a72:	8e 0f       	add	r24, r30
    1a74:	9f 1f       	adc	r25, r31
    1a76:	08 95       	ret

00001a78 <strnlen>:
    1a78:	fc 01       	movw	r30, r24
    1a7a:	61 50       	subi	r22, 0x01	; 1
    1a7c:	70 40       	sbci	r23, 0x00	; 0
    1a7e:	01 90       	ld	r0, Z+
    1a80:	01 10       	cpse	r0, r1
    1a82:	d8 f7       	brcc	.-10     	; 0x1a7a <strnlen+0x2>
    1a84:	80 95       	com	r24
    1a86:	90 95       	com	r25
    1a88:	8e 0f       	add	r24, r30
    1a8a:	9f 1f       	adc	r25, r31
    1a8c:	08 95       	ret

00001a8e <fputc>:
    1a8e:	0f 93       	push	r16
    1a90:	1f 93       	push	r17
    1a92:	cf 93       	push	r28
    1a94:	df 93       	push	r29
    1a96:	18 2f       	mov	r17, r24
    1a98:	09 2f       	mov	r16, r25
    1a9a:	eb 01       	movw	r28, r22
    1a9c:	8b 81       	ldd	r24, Y+3	; 0x03
    1a9e:	81 fd       	sbrc	r24, 1
    1aa0:	09 c0       	rjmp	.+18     	; 0x1ab4 <fputc+0x26>
    1aa2:	1f ef       	ldi	r17, 0xFF	; 255
    1aa4:	0f ef       	ldi	r16, 0xFF	; 255
    1aa6:	81 2f       	mov	r24, r17
    1aa8:	90 2f       	mov	r25, r16
    1aaa:	df 91       	pop	r29
    1aac:	cf 91       	pop	r28
    1aae:	1f 91       	pop	r17
    1ab0:	0f 91       	pop	r16
    1ab2:	08 95       	ret
    1ab4:	82 ff       	sbrs	r24, 2
    1ab6:	14 c0       	rjmp	.+40     	; 0x1ae0 <fputc+0x52>
    1ab8:	2e 81       	ldd	r18, Y+6	; 0x06
    1aba:	3f 81       	ldd	r19, Y+7	; 0x07
    1abc:	8c 81       	ldd	r24, Y+4	; 0x04
    1abe:	9d 81       	ldd	r25, Y+5	; 0x05
    1ac0:	28 17       	cp	r18, r24
    1ac2:	39 07       	cpc	r19, r25
    1ac4:	3c f4       	brge	.+14     	; 0x1ad4 <fputc+0x46>
    1ac6:	e8 81       	ld	r30, Y
    1ac8:	f9 81       	ldd	r31, Y+1	; 0x01
    1aca:	cf 01       	movw	r24, r30
    1acc:	01 96       	adiw	r24, 0x01	; 1
    1ace:	99 83       	std	Y+1, r25	; 0x01
    1ad0:	88 83       	st	Y, r24
    1ad2:	10 83       	st	Z, r17
    1ad4:	8e 81       	ldd	r24, Y+6	; 0x06
    1ad6:	9f 81       	ldd	r25, Y+7	; 0x07
    1ad8:	01 96       	adiw	r24, 0x01	; 1
    1ada:	9f 83       	std	Y+7, r25	; 0x07
    1adc:	8e 83       	std	Y+6, r24	; 0x06
    1ade:	e3 cf       	rjmp	.-58     	; 0x1aa6 <fputc+0x18>
    1ae0:	e8 85       	ldd	r30, Y+8	; 0x08
    1ae2:	f9 85       	ldd	r31, Y+9	; 0x09
    1ae4:	81 2f       	mov	r24, r17
    1ae6:	09 95       	icall
    1ae8:	89 2b       	or	r24, r25
    1aea:	a1 f3       	breq	.-24     	; 0x1ad4 <fputc+0x46>
    1aec:	da cf       	rjmp	.-76     	; 0x1aa2 <fputc+0x14>

00001aee <__ultoa_invert>:
    1aee:	fa 01       	movw	r30, r20
    1af0:	aa 27       	eor	r26, r26
    1af2:	28 30       	cpi	r18, 0x08	; 8
    1af4:	51 f1       	breq	.+84     	; 0x1b4a <__ultoa_invert+0x5c>
    1af6:	20 31       	cpi	r18, 0x10	; 16
    1af8:	81 f1       	breq	.+96     	; 0x1b5a <__ultoa_invert+0x6c>
    1afa:	e8 94       	clt
    1afc:	6f 93       	push	r22
    1afe:	6e 7f       	andi	r22, 0xFE	; 254
    1b00:	6e 5f       	subi	r22, 0xFE	; 254
    1b02:	7f 4f       	sbci	r23, 0xFF	; 255
    1b04:	8f 4f       	sbci	r24, 0xFF	; 255
    1b06:	9f 4f       	sbci	r25, 0xFF	; 255
    1b08:	af 4f       	sbci	r26, 0xFF	; 255
    1b0a:	b1 e0       	ldi	r27, 0x01	; 1
    1b0c:	3e d0       	rcall	.+124    	; 0x1b8a <__ultoa_invert+0x9c>
    1b0e:	b4 e0       	ldi	r27, 0x04	; 4
    1b10:	3c d0       	rcall	.+120    	; 0x1b8a <__ultoa_invert+0x9c>
    1b12:	67 0f       	add	r22, r23
    1b14:	78 1f       	adc	r23, r24
    1b16:	89 1f       	adc	r24, r25
    1b18:	9a 1f       	adc	r25, r26
    1b1a:	a1 1d       	adc	r26, r1
    1b1c:	68 0f       	add	r22, r24
    1b1e:	79 1f       	adc	r23, r25
    1b20:	8a 1f       	adc	r24, r26
    1b22:	91 1d       	adc	r25, r1
    1b24:	a1 1d       	adc	r26, r1
    1b26:	6a 0f       	add	r22, r26
    1b28:	71 1d       	adc	r23, r1
    1b2a:	81 1d       	adc	r24, r1
    1b2c:	91 1d       	adc	r25, r1
    1b2e:	a1 1d       	adc	r26, r1
    1b30:	20 d0       	rcall	.+64     	; 0x1b72 <__ultoa_invert+0x84>
    1b32:	09 f4       	brne	.+2      	; 0x1b36 <__ultoa_invert+0x48>
    1b34:	68 94       	set
    1b36:	3f 91       	pop	r19
    1b38:	2a e0       	ldi	r18, 0x0A	; 10
    1b3a:	26 9f       	mul	r18, r22
    1b3c:	11 24       	eor	r1, r1
    1b3e:	30 19       	sub	r19, r0
    1b40:	30 5d       	subi	r19, 0xD0	; 208
    1b42:	31 93       	st	Z+, r19
    1b44:	de f6       	brtc	.-74     	; 0x1afc <__ultoa_invert+0xe>
    1b46:	cf 01       	movw	r24, r30
    1b48:	08 95       	ret
    1b4a:	46 2f       	mov	r20, r22
    1b4c:	47 70       	andi	r20, 0x07	; 7
    1b4e:	40 5d       	subi	r20, 0xD0	; 208
    1b50:	41 93       	st	Z+, r20
    1b52:	b3 e0       	ldi	r27, 0x03	; 3
    1b54:	0f d0       	rcall	.+30     	; 0x1b74 <__ultoa_invert+0x86>
    1b56:	c9 f7       	brne	.-14     	; 0x1b4a <__ultoa_invert+0x5c>
    1b58:	f6 cf       	rjmp	.-20     	; 0x1b46 <__ultoa_invert+0x58>
    1b5a:	46 2f       	mov	r20, r22
    1b5c:	4f 70       	andi	r20, 0x0F	; 15
    1b5e:	40 5d       	subi	r20, 0xD0	; 208
    1b60:	4a 33       	cpi	r20, 0x3A	; 58
    1b62:	18 f0       	brcs	.+6      	; 0x1b6a <__ultoa_invert+0x7c>
    1b64:	49 5d       	subi	r20, 0xD9	; 217
    1b66:	31 fd       	sbrc	r19, 1
    1b68:	40 52       	subi	r20, 0x20	; 32
    1b6a:	41 93       	st	Z+, r20
    1b6c:	02 d0       	rcall	.+4      	; 0x1b72 <__ultoa_invert+0x84>
    1b6e:	a9 f7       	brne	.-22     	; 0x1b5a <__ultoa_invert+0x6c>
    1b70:	ea cf       	rjmp	.-44     	; 0x1b46 <__ultoa_invert+0x58>
    1b72:	b4 e0       	ldi	r27, 0x04	; 4
    1b74:	a6 95       	lsr	r26
    1b76:	97 95       	ror	r25
    1b78:	87 95       	ror	r24
    1b7a:	77 95       	ror	r23
    1b7c:	67 95       	ror	r22
    1b7e:	ba 95       	dec	r27
    1b80:	c9 f7       	brne	.-14     	; 0x1b74 <__ultoa_invert+0x86>
    1b82:	00 97       	sbiw	r24, 0x00	; 0
    1b84:	61 05       	cpc	r22, r1
    1b86:	71 05       	cpc	r23, r1
    1b88:	08 95       	ret
    1b8a:	9b 01       	movw	r18, r22
    1b8c:	ac 01       	movw	r20, r24
    1b8e:	0a 2e       	mov	r0, r26
    1b90:	06 94       	lsr	r0
    1b92:	57 95       	ror	r21
    1b94:	47 95       	ror	r20
    1b96:	37 95       	ror	r19
    1b98:	27 95       	ror	r18
    1b9a:	ba 95       	dec	r27
    1b9c:	c9 f7       	brne	.-14     	; 0x1b90 <__ultoa_invert+0xa2>
    1b9e:	62 0f       	add	r22, r18
    1ba0:	73 1f       	adc	r23, r19
    1ba2:	84 1f       	adc	r24, r20
    1ba4:	95 1f       	adc	r25, r21
    1ba6:	a0 1d       	adc	r26, r0
    1ba8:	08 95       	ret

00001baa <__prologue_saves__>:
    1baa:	2f 92       	push	r2
    1bac:	3f 92       	push	r3
    1bae:	4f 92       	push	r4
    1bb0:	5f 92       	push	r5
    1bb2:	6f 92       	push	r6
    1bb4:	7f 92       	push	r7
    1bb6:	8f 92       	push	r8
    1bb8:	9f 92       	push	r9
    1bba:	af 92       	push	r10
    1bbc:	bf 92       	push	r11
    1bbe:	cf 92       	push	r12
    1bc0:	df 92       	push	r13
    1bc2:	ef 92       	push	r14
    1bc4:	ff 92       	push	r15
    1bc6:	0f 93       	push	r16
    1bc8:	1f 93       	push	r17
    1bca:	cf 93       	push	r28
    1bcc:	df 93       	push	r29
    1bce:	cd b7       	in	r28, 0x3d	; 61
    1bd0:	de b7       	in	r29, 0x3e	; 62
    1bd2:	ca 1b       	sub	r28, r26
    1bd4:	db 0b       	sbc	r29, r27
    1bd6:	0f b6       	in	r0, 0x3f	; 63
    1bd8:	f8 94       	cli
    1bda:	de bf       	out	0x3e, r29	; 62
    1bdc:	0f be       	out	0x3f, r0	; 63
    1bde:	cd bf       	out	0x3d, r28	; 61
    1be0:	09 94       	ijmp

00001be2 <__epilogue_restores__>:
    1be2:	2a 88       	ldd	r2, Y+18	; 0x12
    1be4:	39 88       	ldd	r3, Y+17	; 0x11
    1be6:	48 88       	ldd	r4, Y+16	; 0x10
    1be8:	5f 84       	ldd	r5, Y+15	; 0x0f
    1bea:	6e 84       	ldd	r6, Y+14	; 0x0e
    1bec:	7d 84       	ldd	r7, Y+13	; 0x0d
    1bee:	8c 84       	ldd	r8, Y+12	; 0x0c
    1bf0:	9b 84       	ldd	r9, Y+11	; 0x0b
    1bf2:	aa 84       	ldd	r10, Y+10	; 0x0a
    1bf4:	b9 84       	ldd	r11, Y+9	; 0x09
    1bf6:	c8 84       	ldd	r12, Y+8	; 0x08
    1bf8:	df 80       	ldd	r13, Y+7	; 0x07
    1bfa:	ee 80       	ldd	r14, Y+6	; 0x06
    1bfc:	fd 80       	ldd	r15, Y+5	; 0x05
    1bfe:	0c 81       	ldd	r16, Y+4	; 0x04
    1c00:	1b 81       	ldd	r17, Y+3	; 0x03
    1c02:	aa 81       	ldd	r26, Y+2	; 0x02
    1c04:	b9 81       	ldd	r27, Y+1	; 0x01
    1c06:	ce 0f       	add	r28, r30
    1c08:	d1 1d       	adc	r29, r1
    1c0a:	0f b6       	in	r0, 0x3f	; 63
    1c0c:	f8 94       	cli
    1c0e:	de bf       	out	0x3e, r29	; 62
    1c10:	0f be       	out	0x3f, r0	; 63
    1c12:	cd bf       	out	0x3d, r28	; 61
    1c14:	ed 01       	movw	r28, r26
    1c16:	08 95       	ret

00001c18 <_exit>:
    1c18:	f8 94       	cli

00001c1a <__stop_program>:
    1c1a:	ff cf       	rjmp	.-2      	; 0x1c1a <__stop_program>
